State 25 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: VAR_GLOBAL LBRACE global_var_section RBRACE DECLARATION LBRACE declaration_section RBRACE INSTRUCTION LBRACE instruction_section RBRACE

    2 type: INTEGER
    3     | FLOAT
    4     | CHAR

    5 global_var_section: declaration
    6                   | declaration global_var_section

    7 declaration_section: declaration
    8                    | declaration declaration_section

    9 instruction_section: statement
   10                    | statement instruction_section

   11 declaration: type variable_list SEMICOLON
   12            | CONST type cst EQUALS term SEMICOLON

   13 cst: IDENTIFIER

   14 variable_list: IDENTIFIER
   15              | IDENTIFIER LBRACKET INT_NUMBER RBRACKET
   16              | IDENTIFIER LBRACKET termtab RBRACKET
   17              | IDENTIFIER COMMA variable_list

   18 statement: assignment
   19          | condition
   20          | loop
   21          | io_statement
   22          | assignment_int

   23 assignment: MDROIT EQUALS term SEMICOLON
   24           | TAB EQUALS term SEMICOLON
   25           | TAB EQUALS EXPRESSION_CHAR SEMICOLON
   26           | MDROIT EQUALS EXPRESSION_CHAR SEMICOLON

   27 MDROIT: IDENTIFIER

   28 TAB: ε
   29    | IDENTIFIER LBRACKET termtab RBRACKET

   30 termtab: factortab
   31        | termtab PLUS factortab
   32        | termtab MINUS factortab

   33 factortab: primarytab
   34          | factortab MULTIPLY primarytab
   35          | factortab DIVIDE primarytab

   36 primarytab: IDENTIFIER
   37           | INT_NUMBER
   38           | FLOAT_NUMBER
   39           | LPAREN PLUS INT_NUMBER RPAREN
   40           | LPAREN MINUS INT_NUMBER RPAREN
   41           | LPAREN PLUS FLOAT_NUMBER RPAREN
   42           | LPAREN MINUS FLOAT_NUMBER RPAREN
   43           | LPAREN termtab RPAREN
   44           | IDENTIFIER LBRACKET termtab RBRACKET
   45           | CHARACTERE
   46           | STRING_LITERAL

   47 EXPRESSION_CHAR: CHARACTERE
   48                | STRING_LITERAL

   49 $@1: ε

   50 condition: IF LPAREN COND RPAREN LBRACE $@1 instruction_section RBRACE elsebloc SEMICOLON

   51 $@2: ε

   52 elsebloc: ELSE LBRACE $@2 instruction_section RBRACE
   53         | ε

   54 assignment_int: MDROIT EQUALS term
   55               | TAB EQUALS term
   56               | TAB EQUALS EXPRESSION_CHAR
   57               | MDROIT EQUALS EXPRESSION_CHAR

   58 $@3: ε

   59 $@4: ε

   60 loop: FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE SEMICOLON

   61 io_statement: READ LPAREN IDENTIFIER RPAREN SEMICOLON
   62             | WRITE LPAREN io_expr_list RPAREN SEMICOLON

   63 io_expr_list: io_expr
   64             | io_expr COMMA io_expr_list

   65 io_expr: IDENTIFIER
   66        | STRING_LITERAL

   67 COND: COND OR AND_EXPR
   68     | AND_EXPR

   69 AND_EXPR: AND_EXPR AND NOT_EXPR
   70         | NOT_EXPR

   71 NOT_EXPR: NOT NOT_EXPR
   72         | comparison_expr

   73 comparison_expr: term2 GT term1
   74                | term2 LT term1
   75                | term2 EQ term1
   76                | term2 GEQ term1
   77                | term2 LEQ term1
   78                | term2 NEQ term1
   79                | DROIT OP_COMP term1
   80                | term2 OP_COMP GAUCHE
   81                | DROIT OP_COMP GAUCHE

   82 DROIT: CHARACTERE
   83      | STRING_LITERAL

   84 GAUCHE: CHARACTERE
   85       | STRING_LITERAL

   86 OP_COMP: GT
   87        | LT
   88        | GEQ
   89        | LEQ
   90        | EQ
   91        | NEQ

   92 term: factor
   93     | term PLUS factor
   94     | term MINUS factor

   95 factor: primary
   96       | factor MULTIPLY primary
   97       | factor DIVIDE primary

   98 primary: IDENTIFIER
   99        | INT_NUMBER
  100        | FLOAT_NUMBER
  101        | LPAREN PLUS INT_NUMBER RPAREN
  102        | LPAREN MINUS INT_NUMBER RPAREN
  103        | LPAREN PLUS FLOAT_NUMBER RPAREN
  104        | LPAREN MINUS FLOAT_NUMBER RPAREN
  105        | LPAREN term RPAREN
  106        | IDENTIFIER LBRACKET INT_NUMBER RBRACKET

  107 term1: factor1
  108      | term1 PLUS factor1
  109      | term1 MINUS factor1

  110 factor1: primary1
  111        | factor1 MULTIPLY primary1
  112        | factor1 DIVIDE primary1

  113 primary1: IDENTIFIER
  114         | INT_NUMBER
  115         | FLOAT_NUMBER
  116         | LPAREN PLUS INT_NUMBER RPAREN
  117         | LPAREN MINUS INT_NUMBER RPAREN
  118         | LPAREN PLUS FLOAT_NUMBER RPAREN
  119         | LPAREN MINUS FLOAT_NUMBER RPAREN
  120         | LPAREN term1 RPAREN
  121         | IDENTIFIER LBRACKET INT_NUMBER RBRACKET

  122 term2: factor2
  123      | term2 PLUS factor2
  124      | term2 MINUS factor2

  125 factor2: primary2
  126        | factor2 MULTIPLY primary2
  127        | factor2 DIVIDE primary2

  128 primary2: IDENTIFIER
  129         | INT_NUMBER
  130         | FLOAT_NUMBER
  131         | LPAREN PLUS INT_NUMBER RPAREN
  132         | LPAREN MINUS INT_NUMBER RPAREN
  133         | LPAREN PLUS FLOAT_NUMBER RPAREN
  134         | LPAREN MINUS FLOAT_NUMBER RPAREN
  135         | LPAREN term2 RPAREN
  136         | IDENTIFIER LBRACKET INT_NUMBER RBRACKET

  137 term4: factor4
  138      | term4 PLUS factor4
  139      | term4 MINUS factor4

  140 factor4: primary4
  141        | factor4 MULTIPLY primary4
  142        | factor4 DIVIDE primary4

  143 primary4: IDENTIFIER
  144         | INT_NUMBER
  145         | FLOAT_NUMBER
  146         | LPAREN PLUS INT_NUMBER RPAREN
  147         | LPAREN MINUS INT_NUMBER RPAREN
  148         | LPAREN PLUS FLOAT_NUMBER RPAREN
  149         | LPAREN MINUS FLOAT_NUMBER RPAREN
  150         | LPAREN term4 RPAREN
  151         | IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  152         | STRING_LITERAL
  153         | CHARACTERE

  154 term3: factor3
  155      | term3 PLUS factor3
  156      | term3 MINUS factor3

  157 factor3: primary3
  158        | factor3 MULTIPLY primary3
  159        | factor3 DIVIDE primary3

  160 primary3: IDENTIFIER
  161         | INT_NUMBER
  162         | FLOAT_NUMBER
  163         | LPAREN PLUS INT_NUMBER RPAREN
  164         | LPAREN MINUS INT_NUMBER RPAREN
  165         | LPAREN PLUS FLOAT_NUMBER RPAREN
  166         | LPAREN MINUS FLOAT_NUMBER RPAREN
  167         | LPAREN term3 RPAREN
  168         | IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  169         | STRING_LITERAL
  170         | CHARACTERE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    VAR_GLOBAL (258) 1
    DECLARATION (259) 1
    INSTRUCTION (260) 1
    INTEGER (261) 2
    FLOAT (262) 3
    CHAR (263) 4
    CONST (264) 12
    IF (265) 50
    ELSE (266) 52
    FOR (267) 60
    READ (268) 61
    WRITE (269) 62
    IDENTIFIER <string> (270) 13 14 15 16 17 27 29 36 44 61 65 98 106 113 121 128 136 143 151 160 168
    INT_NUMBER <string> (271) 15 37 39 40 99 101 102 106 114 116 117 121 129 131 132 136 144 146 147 151 161 163 164 168
    FLOAT_NUMBER <string> (272) 38 41 42 100 103 104 115 118 119 130 133 134 145 148 149 162 165 166
    CHARACTERE <string> (273) 45 47 82 84 153 170
    AND (274) 69
    OR (275) 67
    NOT (276) 71
    EQ (277) 75 90
    NEQ (278) 78 91
    GEQ (279) 76 88
    LT (280) 74 87
    LEQ (281) 77 89
    GT (282) 73 86
    EQUALS (283) 12 23 24 25 26 54 55 56 57
    PLUS (284) 31 39 41 93 101 103 108 116 118 123 131 133 138 146 148 155 163 165
    MINUS (285) 32 40 42 94 102 104 109 117 119 124 132 134 139 147 149 156 164 166
    MULTIPLY (286) 34 96 111 126 141 158
    DIVIDE (287) 35 97 112 127 142 159
    LBRACE (288) 1 50 52 60
    RBRACE (289) 1 50 52 60
    LPAREN (290) 39 40 41 42 43 50 60 61 62 101 102 103 104 105 116 117 118 119 120 131 132 133 134 135 146 147 148 149 150 163 164 165 166 167
    RPAREN (291) 39 40 41 42 43 50 60 61 62 101 102 103 104 105 116 117 118 119 120 131 132 133 134 135 146 147 148 149 150 163 164 165 166 167
    LBRACKET (292) 15 16 29 44 106 121 136 151 168
    RBRACKET (293) 15 16 29 44 106 121 136 151 168
    SEMICOLON (294) 11 12 23 24 25 26 50 60 61 62
    COMMA (295) 17 64
    COLON (296) 60
    STRING_LITERAL <string> (297) 46 48 66 83 85 152 169


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    program (44)
        on left: 1
        on right: 0
    type (45)
        on left: 2 3 4
        on right: 11 12
    global_var_section (46)
        on left: 5 6
        on right: 1 6
    declaration_section (47)
        on left: 7 8
        on right: 1 8
    instruction_section (48)
        on left: 9 10
        on right: 1 10 50 52 60
    declaration (49)
        on left: 11 12
        on right: 5 6 7 8
    cst <string> (50)
        on left: 13
        on right: 12
    variable_list (51)
        on left: 14 15 16 17
        on right: 11 17
    statement (52)
        on left: 18 19 20 21 22
        on right: 9 10
    assignment <string> (53)
        on left: 23 24 25 26
        on right: 18
    MDROIT (54)
        on left: 27
        on right: 23 26 54 57
    TAB (55)
        on left: 28 29
        on right: 24 25 55 56
    termtab <real> (56)
        on left: 30 31 32
        on right: 16 29 31 32 43 44
    factortab <real> (57)
        on left: 33 34 35
        on right: 30 31 32 34 35
    primarytab <real> (58)
        on left: 36 37 38 39 40 41 42 43 44 45 46
        on right: 33 34 35
    EXPRESSION_CHAR (59)
        on left: 47 48
        on right: 25 26 56 57
    condition (60)
        on left: 50
        on right: 19
    $@1 (61)
        on left: 49
        on right: 50
    elsebloc (62)
        on left: 52 53
        on right: 50
    $@2 (63)
        on left: 51
        on right: 52
    assignment_int (64)
        on left: 54 55 56 57
        on right: 22 60
    loop (65)
        on left: 60
        on right: 20
    $@3 (66)
        on left: 58
        on right: 60
    $@4 (67)
        on left: 59
        on right: 60
    io_statement (68)
        on left: 61 62
        on right: 21
    io_expr_list (69)
        on left: 63 64
        on right: 62 64
    io_expr (70)
        on left: 65 66
        on right: 63 64
    COND <string> (71)
        on left: 67 68
        on right: 50 67
    AND_EXPR <string> (72)
        on left: 69 70
        on right: 67 68 69
    NOT_EXPR <string> (73)
        on left: 71 72
        on right: 69 70 71
    comparison_expr <string> (74)
        on left: 73 74 75 76 77 78 79 80 81
        on right: 72
    DROIT <string> (75)
        on left: 82 83
        on right: 79 81
    GAUCHE <string> (76)
        on left: 84 85
        on right: 80 81
    OP_COMP <string> (77)
        on left: 86 87 88 89 90 91
        on right: 79 80 81
    term <real> (78)
        on left: 92 93 94
        on right: 12 23 24 54 55 93 94 105
    factor <real> (79)
        on left: 95 96 97
        on right: 92 93 94 96 97
    primary <real> (80)
        on left: 98 99 100 101 102 103 104 105 106
        on right: 95 96 97
    term1 <real> (81)
        on left: 107 108 109
        on right: 73 74 75 76 77 78 79 108 109 120
    factor1 <real> (82)
        on left: 110 111 112
        on right: 107 108 109 111 112
    primary1 <real> (83)
        on left: 113 114 115 116 117 118 119 120 121
        on right: 110 111 112
    term2 <real> (84)
        on left: 122 123 124
        on right: 73 74 75 76 77 78 80 123 124 135
    factor2 <real> (85)
        on left: 125 126 127
        on right: 122 123 124 126 127
    primary2 <real> (86)
        on left: 128 129 130 131 132 133 134 135 136
        on right: 125 126 127
    term4 <real> (87)
        on left: 137 138 139
        on right: 60 138 139 150
    factor4 <real> (88)
        on left: 140 141 142
        on right: 137 138 139 141 142
    primary4 <real> (89)
        on left: 143 144 145 146 147 148 149 150 151 152 153
        on right: 140 141 142
    term3 <real> (90)
        on left: 154 155 156
        on right: 60 155 156 167
    factor3 <real> (91)
        on left: 157 158 159
        on right: 154 155 156 158 159
    primary3 <real> (92)
        on left: 160 161 162 163 164 165 166 167 168 169 170
        on right: 157 158 159


State 0

    0 $accept: • program $end
    1 program: • VAR_GLOBAL LBRACE global_var_section RBRACE DECLARATION LBRACE declaration_section RBRACE INSTRUCTION LBRACE instruction_section RBRACE

    VAR_GLOBAL  shift, and go to state 1

    program  go to state 2


State 1

    1 program: VAR_GLOBAL • LBRACE global_var_section RBRACE DECLARATION LBRACE declaration_section RBRACE INSTRUCTION LBRACE instruction_section RBRACE

    LBRACE  shift, and go to state 3


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: VAR_GLOBAL LBRACE • global_var_section RBRACE DECLARATION LBRACE declaration_section RBRACE INSTRUCTION LBRACE instruction_section RBRACE
    2 type: • INTEGER
    3     | • FLOAT
    4     | • CHAR
    5 global_var_section: • declaration
    6                   | • declaration global_var_section
   11 declaration: • type variable_list SEMICOLON
   12            | • CONST type cst EQUALS term SEMICOLON

    INTEGER  shift, and go to state 5
    FLOAT    shift, and go to state 6
    CHAR     shift, and go to state 7
    CONST    shift, and go to state 8

    type                go to state 9
    global_var_section  go to state 10
    declaration         go to state 11


State 4

    0 $accept: program $end •

    $default  accept


State 5

    2 type: INTEGER •

    $default  reduce using rule 2 (type)


State 6

    3 type: FLOAT •

    $default  reduce using rule 3 (type)


State 7

    4 type: CHAR •

    $default  reduce using rule 4 (type)


State 8

    2 type: • INTEGER
    3     | • FLOAT
    4     | • CHAR
   12 declaration: CONST • type cst EQUALS term SEMICOLON

    INTEGER  shift, and go to state 5
    FLOAT    shift, and go to state 6
    CHAR     shift, and go to state 7

    type  go to state 12


State 9

   11 declaration: type • variable_list SEMICOLON
   14 variable_list: • IDENTIFIER
   15              | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
   16              | • IDENTIFIER LBRACKET termtab RBRACKET
   17              | • IDENTIFIER COMMA variable_list

    IDENTIFIER  shift, and go to state 13

    variable_list  go to state 14


State 10

    1 program: VAR_GLOBAL LBRACE global_var_section • RBRACE DECLARATION LBRACE declaration_section RBRACE INSTRUCTION LBRACE instruction_section RBRACE

    RBRACE  shift, and go to state 15


State 11

    2 type: • INTEGER
    3     | • FLOAT
    4     | • CHAR
    5 global_var_section: • declaration
    5                   | declaration •  [RBRACE]
    6                   | • declaration global_var_section
    6                   | declaration • global_var_section
   11 declaration: • type variable_list SEMICOLON
   12            | • CONST type cst EQUALS term SEMICOLON

    INTEGER  shift, and go to state 5
    FLOAT    shift, and go to state 6
    CHAR     shift, and go to state 7
    CONST    shift, and go to state 8

    $default  reduce using rule 5 (global_var_section)

    type                go to state 9
    global_var_section  go to state 16
    declaration         go to state 11


State 12

   12 declaration: CONST type • cst EQUALS term SEMICOLON
   13 cst: • IDENTIFIER

    IDENTIFIER  shift, and go to state 17

    cst  go to state 18


State 13

   14 variable_list: IDENTIFIER •  [SEMICOLON]
   15              | IDENTIFIER • LBRACKET INT_NUMBER RBRACKET
   16              | IDENTIFIER • LBRACKET termtab RBRACKET
   17              | IDENTIFIER • COMMA variable_list

    LBRACKET  shift, and go to state 19
    COMMA     shift, and go to state 20

    $default  reduce using rule 14 (variable_list)


State 14

   11 declaration: type variable_list • SEMICOLON

    SEMICOLON  shift, and go to state 21


State 15

    1 program: VAR_GLOBAL LBRACE global_var_section RBRACE • DECLARATION LBRACE declaration_section RBRACE INSTRUCTION LBRACE instruction_section RBRACE

    DECLARATION  shift, and go to state 22


State 16

    6 global_var_section: declaration global_var_section •

    $default  reduce using rule 6 (global_var_section)


State 17

   13 cst: IDENTIFIER •

    $default  reduce using rule 13 (cst)


State 18

   12 declaration: CONST type cst • EQUALS term SEMICOLON

    EQUALS  shift, and go to state 23


State 19

   15 variable_list: IDENTIFIER LBRACKET • INT_NUMBER RBRACKET
   16              | IDENTIFIER LBRACKET • termtab RBRACKET
   30 termtab: • factortab
   31        | • termtab PLUS factortab
   32        | • termtab MINUS factortab
   33 factortab: • primarytab
   34          | • factortab MULTIPLY primarytab
   35          | • factortab DIVIDE primarytab
   36 primarytab: • IDENTIFIER
   37           | • INT_NUMBER
   38           | • FLOAT_NUMBER
   39           | • LPAREN PLUS INT_NUMBER RPAREN
   40           | • LPAREN MINUS INT_NUMBER RPAREN
   41           | • LPAREN PLUS FLOAT_NUMBER RPAREN
   42           | • LPAREN MINUS FLOAT_NUMBER RPAREN
   43           | • LPAREN termtab RPAREN
   44           | • IDENTIFIER LBRACKET termtab RBRACKET
   45           | • CHARACTERE
   46           | • STRING_LITERAL

    IDENTIFIER      shift, and go to state 24
    INT_NUMBER      shift, and go to state 25
    FLOAT_NUMBER    shift, and go to state 26
    CHARACTERE      shift, and go to state 27
    LPAREN          shift, and go to state 28
    STRING_LITERAL  shift, and go to state 29

    termtab     go to state 30
    factortab   go to state 31
    primarytab  go to state 32


State 20

   14 variable_list: • IDENTIFIER
   15              | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
   16              | • IDENTIFIER LBRACKET termtab RBRACKET
   17              | • IDENTIFIER COMMA variable_list
   17              | IDENTIFIER COMMA • variable_list

    IDENTIFIER  shift, and go to state 13

    variable_list  go to state 33


State 21

   11 declaration: type variable_list SEMICOLON •

    $default  reduce using rule 11 (declaration)


State 22

    1 program: VAR_GLOBAL LBRACE global_var_section RBRACE DECLARATION • LBRACE declaration_section RBRACE INSTRUCTION LBRACE instruction_section RBRACE

    LBRACE  shift, and go to state 34


State 23

   12 declaration: CONST type cst EQUALS • term SEMICOLON
   92 term: • factor
   93     | • term PLUS factor
   94     | • term MINUS factor
   95 factor: • primary
   96       | • factor MULTIPLY primary
   97       | • factor DIVIDE primary
   98 primary: • IDENTIFIER
   99        | • INT_NUMBER
  100        | • FLOAT_NUMBER
  101        | • LPAREN PLUS INT_NUMBER RPAREN
  102        | • LPAREN MINUS INT_NUMBER RPAREN
  103        | • LPAREN PLUS FLOAT_NUMBER RPAREN
  104        | • LPAREN MINUS FLOAT_NUMBER RPAREN
  105        | • LPAREN term RPAREN
  106        | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 35
    INT_NUMBER    shift, and go to state 36
    FLOAT_NUMBER  shift, and go to state 37
    LPAREN        shift, and go to state 38

    term     go to state 39
    factor   go to state 40
    primary  go to state 41


State 24

   36 primarytab: IDENTIFIER •  [PLUS, MINUS, MULTIPLY, DIVIDE, RPAREN, RBRACKET]
   44           | IDENTIFIER • LBRACKET termtab RBRACKET

    LBRACKET  shift, and go to state 42

    $default  reduce using rule 36 (primarytab)


State 25

   15 variable_list: IDENTIFIER LBRACKET INT_NUMBER • RBRACKET
   37 primarytab: INT_NUMBER •  [PLUS, MINUS, MULTIPLY, DIVIDE, RBRACKET]

    RBRACKET  shift, and go to state 43

    RBRACKET  [reduce using rule 37 (primarytab)]
    $default  reduce using rule 37 (primarytab)

    shift/reduce conflict on token RBRACKET:
       37 primarytab: INT_NUMBER •
       15 variable_list: IDENTIFIER LBRACKET INT_NUMBER • RBRACKET
      Example: IDENTIFIER LBRACKET INT_NUMBER • RBRACKET
      Shift derivation
        variable_list
        ↳ 15: IDENTIFIER LBRACKET INT_NUMBER • RBRACKET
      Reduce derivation
        variable_list
        ↳ 16: IDENTIFIER LBRACKET termtab                        RBRACKET
                                  ↳ 30: factortab
                                        ↳ 33: primarytab
                                              ↳ 37: INT_NUMBER •



State 26

   38 primarytab: FLOAT_NUMBER •

    $default  reduce using rule 38 (primarytab)


State 27

   45 primarytab: CHARACTERE •

    $default  reduce using rule 45 (primarytab)


State 28

   30 termtab: • factortab
   31        | • termtab PLUS factortab
   32        | • termtab MINUS factortab
   33 factortab: • primarytab
   34          | • factortab MULTIPLY primarytab
   35          | • factortab DIVIDE primarytab
   36 primarytab: • IDENTIFIER
   37           | • INT_NUMBER
   38           | • FLOAT_NUMBER
   39           | • LPAREN PLUS INT_NUMBER RPAREN
   39           | LPAREN • PLUS INT_NUMBER RPAREN
   40           | • LPAREN MINUS INT_NUMBER RPAREN
   40           | LPAREN • MINUS INT_NUMBER RPAREN
   41           | • LPAREN PLUS FLOAT_NUMBER RPAREN
   41           | LPAREN • PLUS FLOAT_NUMBER RPAREN
   42           | • LPAREN MINUS FLOAT_NUMBER RPAREN
   42           | LPAREN • MINUS FLOAT_NUMBER RPAREN
   43           | • LPAREN termtab RPAREN
   43           | LPAREN • termtab RPAREN
   44           | • IDENTIFIER LBRACKET termtab RBRACKET
   45           | • CHARACTERE
   46           | • STRING_LITERAL

    IDENTIFIER      shift, and go to state 24
    INT_NUMBER      shift, and go to state 44
    FLOAT_NUMBER    shift, and go to state 26
    CHARACTERE      shift, and go to state 27
    PLUS            shift, and go to state 45
    MINUS           shift, and go to state 46
    LPAREN          shift, and go to state 28
    STRING_LITERAL  shift, and go to state 29

    termtab     go to state 47
    factortab   go to state 31
    primarytab  go to state 32


State 29

   46 primarytab: STRING_LITERAL •

    $default  reduce using rule 46 (primarytab)


State 30

   16 variable_list: IDENTIFIER LBRACKET termtab • RBRACKET
   31 termtab: termtab • PLUS factortab
   32        | termtab • MINUS factortab

    PLUS      shift, and go to state 48
    MINUS     shift, and go to state 49
    RBRACKET  shift, and go to state 50


State 31

   30 termtab: factortab •  [PLUS, MINUS, RPAREN, RBRACKET]
   34 factortab: factortab • MULTIPLY primarytab
   35          | factortab • DIVIDE primarytab

    MULTIPLY  shift, and go to state 51
    DIVIDE    shift, and go to state 52

    $default  reduce using rule 30 (termtab)


State 32

   33 factortab: primarytab •

    $default  reduce using rule 33 (factortab)


State 33

   17 variable_list: IDENTIFIER COMMA variable_list •

    $default  reduce using rule 17 (variable_list)


State 34

    1 program: VAR_GLOBAL LBRACE global_var_section RBRACE DECLARATION LBRACE • declaration_section RBRACE INSTRUCTION LBRACE instruction_section RBRACE
    2 type: • INTEGER
    3     | • FLOAT
    4     | • CHAR
    7 declaration_section: • declaration
    8                    | • declaration declaration_section
   11 declaration: • type variable_list SEMICOLON
   12            | • CONST type cst EQUALS term SEMICOLON

    INTEGER  shift, and go to state 5
    FLOAT    shift, and go to state 6
    CHAR     shift, and go to state 7
    CONST    shift, and go to state 8

    type                 go to state 9
    declaration_section  go to state 53
    declaration          go to state 54


State 35

   98 primary: IDENTIFIER •  [IF, FOR, READ, WRITE, IDENTIFIER, EQUALS, PLUS, MINUS, MULTIPLY, DIVIDE, RBRACE, RPAREN, SEMICOLON, COLON]
  106        | IDENTIFIER • LBRACKET INT_NUMBER RBRACKET

    LBRACKET  shift, and go to state 55

    $default  reduce using rule 98 (primary)


State 36

   99 primary: INT_NUMBER •

    $default  reduce using rule 99 (primary)


State 37

  100 primary: FLOAT_NUMBER •

    $default  reduce using rule 100 (primary)


State 38

   92 term: • factor
   93     | • term PLUS factor
   94     | • term MINUS factor
   95 factor: • primary
   96       | • factor MULTIPLY primary
   97       | • factor DIVIDE primary
   98 primary: • IDENTIFIER
   99        | • INT_NUMBER
  100        | • FLOAT_NUMBER
  101        | • LPAREN PLUS INT_NUMBER RPAREN
  101        | LPAREN • PLUS INT_NUMBER RPAREN
  102        | • LPAREN MINUS INT_NUMBER RPAREN
  102        | LPAREN • MINUS INT_NUMBER RPAREN
  103        | • LPAREN PLUS FLOAT_NUMBER RPAREN
  103        | LPAREN • PLUS FLOAT_NUMBER RPAREN
  104        | • LPAREN MINUS FLOAT_NUMBER RPAREN
  104        | LPAREN • MINUS FLOAT_NUMBER RPAREN
  105        | • LPAREN term RPAREN
  105        | LPAREN • term RPAREN
  106        | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 35
    INT_NUMBER    shift, and go to state 36
    FLOAT_NUMBER  shift, and go to state 37
    PLUS          shift, and go to state 56
    MINUS         shift, and go to state 57
    LPAREN        shift, and go to state 38

    term     go to state 58
    factor   go to state 40
    primary  go to state 41


State 39

   12 declaration: CONST type cst EQUALS term • SEMICOLON
   93 term: term • PLUS factor
   94     | term • MINUS factor

    PLUS       shift, and go to state 59
    MINUS      shift, and go to state 60
    SEMICOLON  shift, and go to state 61


State 40

   92 term: factor •  [IF, FOR, READ, WRITE, IDENTIFIER, EQUALS, PLUS, MINUS, RBRACE, RPAREN, SEMICOLON, COLON]
   96 factor: factor • MULTIPLY primary
   97       | factor • DIVIDE primary

    MULTIPLY  shift, and go to state 62
    DIVIDE    shift, and go to state 63

    $default  reduce using rule 92 (term)


State 41

   95 factor: primary •

    $default  reduce using rule 95 (factor)


State 42

   30 termtab: • factortab
   31        | • termtab PLUS factortab
   32        | • termtab MINUS factortab
   33 factortab: • primarytab
   34          | • factortab MULTIPLY primarytab
   35          | • factortab DIVIDE primarytab
   36 primarytab: • IDENTIFIER
   37           | • INT_NUMBER
   38           | • FLOAT_NUMBER
   39           | • LPAREN PLUS INT_NUMBER RPAREN
   40           | • LPAREN MINUS INT_NUMBER RPAREN
   41           | • LPAREN PLUS FLOAT_NUMBER RPAREN
   42           | • LPAREN MINUS FLOAT_NUMBER RPAREN
   43           | • LPAREN termtab RPAREN
   44           | • IDENTIFIER LBRACKET termtab RBRACKET
   44           | IDENTIFIER LBRACKET • termtab RBRACKET
   45           | • CHARACTERE
   46           | • STRING_LITERAL

    IDENTIFIER      shift, and go to state 24
    INT_NUMBER      shift, and go to state 44
    FLOAT_NUMBER    shift, and go to state 26
    CHARACTERE      shift, and go to state 27
    LPAREN          shift, and go to state 28
    STRING_LITERAL  shift, and go to state 29

    termtab     go to state 64
    factortab   go to state 31
    primarytab  go to state 32


State 43

   15 variable_list: IDENTIFIER LBRACKET INT_NUMBER RBRACKET •

    $default  reduce using rule 15 (variable_list)


State 44

   37 primarytab: INT_NUMBER •

    $default  reduce using rule 37 (primarytab)


State 45

   39 primarytab: LPAREN PLUS • INT_NUMBER RPAREN
   41           | LPAREN PLUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 65
    FLOAT_NUMBER  shift, and go to state 66


State 46

   40 primarytab: LPAREN MINUS • INT_NUMBER RPAREN
   42           | LPAREN MINUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 67
    FLOAT_NUMBER  shift, and go to state 68


State 47

   31 termtab: termtab • PLUS factortab
   32        | termtab • MINUS factortab
   43 primarytab: LPAREN termtab • RPAREN

    PLUS    shift, and go to state 48
    MINUS   shift, and go to state 49
    RPAREN  shift, and go to state 69


State 48

   31 termtab: termtab PLUS • factortab
   33 factortab: • primarytab
   34          | • factortab MULTIPLY primarytab
   35          | • factortab DIVIDE primarytab
   36 primarytab: • IDENTIFIER
   37           | • INT_NUMBER
   38           | • FLOAT_NUMBER
   39           | • LPAREN PLUS INT_NUMBER RPAREN
   40           | • LPAREN MINUS INT_NUMBER RPAREN
   41           | • LPAREN PLUS FLOAT_NUMBER RPAREN
   42           | • LPAREN MINUS FLOAT_NUMBER RPAREN
   43           | • LPAREN termtab RPAREN
   44           | • IDENTIFIER LBRACKET termtab RBRACKET
   45           | • CHARACTERE
   46           | • STRING_LITERAL

    IDENTIFIER      shift, and go to state 24
    INT_NUMBER      shift, and go to state 44
    FLOAT_NUMBER    shift, and go to state 26
    CHARACTERE      shift, and go to state 27
    LPAREN          shift, and go to state 28
    STRING_LITERAL  shift, and go to state 29

    factortab   go to state 70
    primarytab  go to state 32


State 49

   32 termtab: termtab MINUS • factortab
   33 factortab: • primarytab
   34          | • factortab MULTIPLY primarytab
   35          | • factortab DIVIDE primarytab
   36 primarytab: • IDENTIFIER
   37           | • INT_NUMBER
   38           | • FLOAT_NUMBER
   39           | • LPAREN PLUS INT_NUMBER RPAREN
   40           | • LPAREN MINUS INT_NUMBER RPAREN
   41           | • LPAREN PLUS FLOAT_NUMBER RPAREN
   42           | • LPAREN MINUS FLOAT_NUMBER RPAREN
   43           | • LPAREN termtab RPAREN
   44           | • IDENTIFIER LBRACKET termtab RBRACKET
   45           | • CHARACTERE
   46           | • STRING_LITERAL

    IDENTIFIER      shift, and go to state 24
    INT_NUMBER      shift, and go to state 44
    FLOAT_NUMBER    shift, and go to state 26
    CHARACTERE      shift, and go to state 27
    LPAREN          shift, and go to state 28
    STRING_LITERAL  shift, and go to state 29

    factortab   go to state 71
    primarytab  go to state 32


State 50

   16 variable_list: IDENTIFIER LBRACKET termtab RBRACKET •

    $default  reduce using rule 16 (variable_list)


State 51

   34 factortab: factortab MULTIPLY • primarytab
   36 primarytab: • IDENTIFIER
   37           | • INT_NUMBER
   38           | • FLOAT_NUMBER
   39           | • LPAREN PLUS INT_NUMBER RPAREN
   40           | • LPAREN MINUS INT_NUMBER RPAREN
   41           | • LPAREN PLUS FLOAT_NUMBER RPAREN
   42           | • LPAREN MINUS FLOAT_NUMBER RPAREN
   43           | • LPAREN termtab RPAREN
   44           | • IDENTIFIER LBRACKET termtab RBRACKET
   45           | • CHARACTERE
   46           | • STRING_LITERAL

    IDENTIFIER      shift, and go to state 24
    INT_NUMBER      shift, and go to state 44
    FLOAT_NUMBER    shift, and go to state 26
    CHARACTERE      shift, and go to state 27
    LPAREN          shift, and go to state 28
    STRING_LITERAL  shift, and go to state 29

    primarytab  go to state 72


State 52

   35 factortab: factortab DIVIDE • primarytab
   36 primarytab: • IDENTIFIER
   37           | • INT_NUMBER
   38           | • FLOAT_NUMBER
   39           | • LPAREN PLUS INT_NUMBER RPAREN
   40           | • LPAREN MINUS INT_NUMBER RPAREN
   41           | • LPAREN PLUS FLOAT_NUMBER RPAREN
   42           | • LPAREN MINUS FLOAT_NUMBER RPAREN
   43           | • LPAREN termtab RPAREN
   44           | • IDENTIFIER LBRACKET termtab RBRACKET
   45           | • CHARACTERE
   46           | • STRING_LITERAL

    IDENTIFIER      shift, and go to state 24
    INT_NUMBER      shift, and go to state 44
    FLOAT_NUMBER    shift, and go to state 26
    CHARACTERE      shift, and go to state 27
    LPAREN          shift, and go to state 28
    STRING_LITERAL  shift, and go to state 29

    primarytab  go to state 73


State 53

    1 program: VAR_GLOBAL LBRACE global_var_section RBRACE DECLARATION LBRACE declaration_section • RBRACE INSTRUCTION LBRACE instruction_section RBRACE

    RBRACE  shift, and go to state 74


State 54

    2 type: • INTEGER
    3     | • FLOAT
    4     | • CHAR
    7 declaration_section: • declaration
    7                    | declaration •  [RBRACE]
    8                    | • declaration declaration_section
    8                    | declaration • declaration_section
   11 declaration: • type variable_list SEMICOLON
   12            | • CONST type cst EQUALS term SEMICOLON

    INTEGER  shift, and go to state 5
    FLOAT    shift, and go to state 6
    CHAR     shift, and go to state 7
    CONST    shift, and go to state 8

    $default  reduce using rule 7 (declaration_section)

    type                 go to state 9
    declaration_section  go to state 75
    declaration          go to state 54


State 55

  106 primary: IDENTIFIER LBRACKET • INT_NUMBER RBRACKET

    INT_NUMBER  shift, and go to state 76


State 56

  101 primary: LPAREN PLUS • INT_NUMBER RPAREN
  103        | LPAREN PLUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 77
    FLOAT_NUMBER  shift, and go to state 78


State 57

  102 primary: LPAREN MINUS • INT_NUMBER RPAREN
  104        | LPAREN MINUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 79
    FLOAT_NUMBER  shift, and go to state 80


State 58

   93 term: term • PLUS factor
   94     | term • MINUS factor
  105 primary: LPAREN term • RPAREN

    PLUS    shift, and go to state 59
    MINUS   shift, and go to state 60
    RPAREN  shift, and go to state 81


State 59

   93 term: term PLUS • factor
   95 factor: • primary
   96       | • factor MULTIPLY primary
   97       | • factor DIVIDE primary
   98 primary: • IDENTIFIER
   99        | • INT_NUMBER
  100        | • FLOAT_NUMBER
  101        | • LPAREN PLUS INT_NUMBER RPAREN
  102        | • LPAREN MINUS INT_NUMBER RPAREN
  103        | • LPAREN PLUS FLOAT_NUMBER RPAREN
  104        | • LPAREN MINUS FLOAT_NUMBER RPAREN
  105        | • LPAREN term RPAREN
  106        | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 35
    INT_NUMBER    shift, and go to state 36
    FLOAT_NUMBER  shift, and go to state 37
    LPAREN        shift, and go to state 38

    factor   go to state 82
    primary  go to state 41


State 60

   94 term: term MINUS • factor
   95 factor: • primary
   96       | • factor MULTIPLY primary
   97       | • factor DIVIDE primary
   98 primary: • IDENTIFIER
   99        | • INT_NUMBER
  100        | • FLOAT_NUMBER
  101        | • LPAREN PLUS INT_NUMBER RPAREN
  102        | • LPAREN MINUS INT_NUMBER RPAREN
  103        | • LPAREN PLUS FLOAT_NUMBER RPAREN
  104        | • LPAREN MINUS FLOAT_NUMBER RPAREN
  105        | • LPAREN term RPAREN
  106        | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 35
    INT_NUMBER    shift, and go to state 36
    FLOAT_NUMBER  shift, and go to state 37
    LPAREN        shift, and go to state 38

    factor   go to state 83
    primary  go to state 41


State 61

   12 declaration: CONST type cst EQUALS term SEMICOLON •

    $default  reduce using rule 12 (declaration)


State 62

   96 factor: factor MULTIPLY • primary
   98 primary: • IDENTIFIER
   99        | • INT_NUMBER
  100        | • FLOAT_NUMBER
  101        | • LPAREN PLUS INT_NUMBER RPAREN
  102        | • LPAREN MINUS INT_NUMBER RPAREN
  103        | • LPAREN PLUS FLOAT_NUMBER RPAREN
  104        | • LPAREN MINUS FLOAT_NUMBER RPAREN
  105        | • LPAREN term RPAREN
  106        | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 35
    INT_NUMBER    shift, and go to state 36
    FLOAT_NUMBER  shift, and go to state 37
    LPAREN        shift, and go to state 38

    primary  go to state 84


State 63

   97 factor: factor DIVIDE • primary
   98 primary: • IDENTIFIER
   99        | • INT_NUMBER
  100        | • FLOAT_NUMBER
  101        | • LPAREN PLUS INT_NUMBER RPAREN
  102        | • LPAREN MINUS INT_NUMBER RPAREN
  103        | • LPAREN PLUS FLOAT_NUMBER RPAREN
  104        | • LPAREN MINUS FLOAT_NUMBER RPAREN
  105        | • LPAREN term RPAREN
  106        | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 35
    INT_NUMBER    shift, and go to state 36
    FLOAT_NUMBER  shift, and go to state 37
    LPAREN        shift, and go to state 38

    primary  go to state 85


State 64

   31 termtab: termtab • PLUS factortab
   32        | termtab • MINUS factortab
   44 primarytab: IDENTIFIER LBRACKET termtab • RBRACKET

    PLUS      shift, and go to state 48
    MINUS     shift, and go to state 49
    RBRACKET  shift, and go to state 86


State 65

   39 primarytab: LPAREN PLUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 87


State 66

   41 primarytab: LPAREN PLUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 88


State 67

   40 primarytab: LPAREN MINUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 89


State 68

   42 primarytab: LPAREN MINUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 90


State 69

   43 primarytab: LPAREN termtab RPAREN •

    $default  reduce using rule 43 (primarytab)


State 70

   31 termtab: termtab PLUS factortab •  [PLUS, MINUS, RPAREN, RBRACKET]
   34 factortab: factortab • MULTIPLY primarytab
   35          | factortab • DIVIDE primarytab

    MULTIPLY  shift, and go to state 51
    DIVIDE    shift, and go to state 52

    $default  reduce using rule 31 (termtab)


State 71

   32 termtab: termtab MINUS factortab •  [PLUS, MINUS, RPAREN, RBRACKET]
   34 factortab: factortab • MULTIPLY primarytab
   35          | factortab • DIVIDE primarytab

    MULTIPLY  shift, and go to state 51
    DIVIDE    shift, and go to state 52

    $default  reduce using rule 32 (termtab)


State 72

   34 factortab: factortab MULTIPLY primarytab •

    $default  reduce using rule 34 (factortab)


State 73

   35 factortab: factortab DIVIDE primarytab •

    $default  reduce using rule 35 (factortab)


State 74

    1 program: VAR_GLOBAL LBRACE global_var_section RBRACE DECLARATION LBRACE declaration_section RBRACE • INSTRUCTION LBRACE instruction_section RBRACE

    INSTRUCTION  shift, and go to state 91


State 75

    8 declaration_section: declaration declaration_section •

    $default  reduce using rule 8 (declaration_section)


State 76

  106 primary: IDENTIFIER LBRACKET INT_NUMBER • RBRACKET

    RBRACKET  shift, and go to state 92


State 77

  101 primary: LPAREN PLUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 93


State 78

  103 primary: LPAREN PLUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 94


State 79

  102 primary: LPAREN MINUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 95


State 80

  104 primary: LPAREN MINUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 96


State 81

  105 primary: LPAREN term RPAREN •

    $default  reduce using rule 105 (primary)


State 82

   93 term: term PLUS factor •  [IF, FOR, READ, WRITE, IDENTIFIER, EQUALS, PLUS, MINUS, RBRACE, RPAREN, SEMICOLON, COLON]
   96 factor: factor • MULTIPLY primary
   97       | factor • DIVIDE primary

    MULTIPLY  shift, and go to state 62
    DIVIDE    shift, and go to state 63

    $default  reduce using rule 93 (term)


State 83

   94 term: term MINUS factor •  [IF, FOR, READ, WRITE, IDENTIFIER, EQUALS, PLUS, MINUS, RBRACE, RPAREN, SEMICOLON, COLON]
   96 factor: factor • MULTIPLY primary
   97       | factor • DIVIDE primary

    MULTIPLY  shift, and go to state 62
    DIVIDE    shift, and go to state 63

    $default  reduce using rule 94 (term)


State 84

   96 factor: factor MULTIPLY primary •

    $default  reduce using rule 96 (factor)


State 85

   97 factor: factor DIVIDE primary •

    $default  reduce using rule 97 (factor)


State 86

   44 primarytab: IDENTIFIER LBRACKET termtab RBRACKET •

    $default  reduce using rule 44 (primarytab)


State 87

   39 primarytab: LPAREN PLUS INT_NUMBER RPAREN •

    $default  reduce using rule 39 (primarytab)


State 88

   41 primarytab: LPAREN PLUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 41 (primarytab)


State 89

   40 primarytab: LPAREN MINUS INT_NUMBER RPAREN •

    $default  reduce using rule 40 (primarytab)


State 90

   42 primarytab: LPAREN MINUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 42 (primarytab)


State 91

    1 program: VAR_GLOBAL LBRACE global_var_section RBRACE DECLARATION LBRACE declaration_section RBRACE INSTRUCTION • LBRACE instruction_section RBRACE

    LBRACE  shift, and go to state 97


State 92

  106 primary: IDENTIFIER LBRACKET INT_NUMBER RBRACKET •

    $default  reduce using rule 106 (primary)


State 93

  101 primary: LPAREN PLUS INT_NUMBER RPAREN •

    $default  reduce using rule 101 (primary)


State 94

  103 primary: LPAREN PLUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 103 (primary)


State 95

  102 primary: LPAREN MINUS INT_NUMBER RPAREN •

    $default  reduce using rule 102 (primary)


State 96

  104 primary: LPAREN MINUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 104 (primary)


State 97

    1 program: VAR_GLOBAL LBRACE global_var_section RBRACE DECLARATION LBRACE declaration_section RBRACE INSTRUCTION LBRACE • instruction_section RBRACE
    9 instruction_section: • statement
   10                    | • statement instruction_section
   18 statement: • assignment
   19          | • condition
   20          | • loop
   21          | • io_statement
   22          | • assignment_int
   23 assignment: • MDROIT EQUALS term SEMICOLON
   24           | • TAB EQUALS term SEMICOLON
   25           | • TAB EQUALS EXPRESSION_CHAR SEMICOLON
   26           | • MDROIT EQUALS EXPRESSION_CHAR SEMICOLON
   27 MDROIT: • IDENTIFIER
   28 TAB: ε •  [EQUALS]
   29    | • IDENTIFIER LBRACKET termtab RBRACKET
   50 condition: • IF LPAREN COND RPAREN LBRACE $@1 instruction_section RBRACE elsebloc SEMICOLON
   54 assignment_int: • MDROIT EQUALS term
   55               | • TAB EQUALS term
   56               | • TAB EQUALS EXPRESSION_CHAR
   57               | • MDROIT EQUALS EXPRESSION_CHAR
   60 loop: • FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE SEMICOLON
   61 io_statement: • READ LPAREN IDENTIFIER RPAREN SEMICOLON
   62             | • WRITE LPAREN io_expr_list RPAREN SEMICOLON

    IF          shift, and go to state 98
    FOR         shift, and go to state 99
    READ        shift, and go to state 100
    WRITE       shift, and go to state 101
    IDENTIFIER  shift, and go to state 102

    $default  reduce using rule 28 (TAB)

    instruction_section  go to state 103
    statement            go to state 104
    assignment           go to state 105
    MDROIT               go to state 106
    TAB                  go to state 107
    condition            go to state 108
    assignment_int       go to state 109
    loop                 go to state 110
    io_statement         go to state 111


State 98

   50 condition: IF • LPAREN COND RPAREN LBRACE $@1 instruction_section RBRACE elsebloc SEMICOLON

    LPAREN  shift, and go to state 112


State 99

   60 loop: FOR • LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE SEMICOLON

    LPAREN  shift, and go to state 113


State 100

   61 io_statement: READ • LPAREN IDENTIFIER RPAREN SEMICOLON

    LPAREN  shift, and go to state 114


State 101

   62 io_statement: WRITE • LPAREN io_expr_list RPAREN SEMICOLON

    LPAREN  shift, and go to state 115


State 102

   27 MDROIT: IDENTIFIER •  [EQUALS]
   29 TAB: IDENTIFIER • LBRACKET termtab RBRACKET

    LBRACKET  shift, and go to state 116

    $default  reduce using rule 27 (MDROIT)


State 103

    1 program: VAR_GLOBAL LBRACE global_var_section RBRACE DECLARATION LBRACE declaration_section RBRACE INSTRUCTION LBRACE instruction_section • RBRACE

    RBRACE  shift, and go to state 117


State 104

    9 instruction_section: • statement
    9                    | statement •  [RBRACE]
   10                    | • statement instruction_section
   10                    | statement • instruction_section
   18 statement: • assignment
   19          | • condition
   20          | • loop
   21          | • io_statement
   22          | • assignment_int
   23 assignment: • MDROIT EQUALS term SEMICOLON
   24           | • TAB EQUALS term SEMICOLON
   25           | • TAB EQUALS EXPRESSION_CHAR SEMICOLON
   26           | • MDROIT EQUALS EXPRESSION_CHAR SEMICOLON
   27 MDROIT: • IDENTIFIER
   28 TAB: ε •  [EQUALS]
   29    | • IDENTIFIER LBRACKET termtab RBRACKET
   50 condition: • IF LPAREN COND RPAREN LBRACE $@1 instruction_section RBRACE elsebloc SEMICOLON
   54 assignment_int: • MDROIT EQUALS term
   55               | • TAB EQUALS term
   56               | • TAB EQUALS EXPRESSION_CHAR
   57               | • MDROIT EQUALS EXPRESSION_CHAR
   60 loop: • FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE SEMICOLON
   61 io_statement: • READ LPAREN IDENTIFIER RPAREN SEMICOLON
   62             | • WRITE LPAREN io_expr_list RPAREN SEMICOLON

    IF          shift, and go to state 98
    FOR         shift, and go to state 99
    READ        shift, and go to state 100
    WRITE       shift, and go to state 101
    IDENTIFIER  shift, and go to state 102

    EQUALS    reduce using rule 28 (TAB)
    $default  reduce using rule 9 (instruction_section)

    instruction_section  go to state 118
    statement            go to state 104
    assignment           go to state 105
    MDROIT               go to state 106
    TAB                  go to state 107
    condition            go to state 108
    assignment_int       go to state 109
    loop                 go to state 110
    io_statement         go to state 111


State 105

   18 statement: assignment •

    $default  reduce using rule 18 (statement)


State 106

   23 assignment: MDROIT • EQUALS term SEMICOLON
   26           | MDROIT • EQUALS EXPRESSION_CHAR SEMICOLON
   54 assignment_int: MDROIT • EQUALS term
   57               | MDROIT • EQUALS EXPRESSION_CHAR

    EQUALS  shift, and go to state 119


State 107

   24 assignment: TAB • EQUALS term SEMICOLON
   25           | TAB • EQUALS EXPRESSION_CHAR SEMICOLON
   55 assignment_int: TAB • EQUALS term
   56               | TAB • EQUALS EXPRESSION_CHAR

    EQUALS  shift, and go to state 120


State 108

   19 statement: condition •

    $default  reduce using rule 19 (statement)


State 109

   22 statement: assignment_int •

    $default  reduce using rule 22 (statement)


State 110

   20 statement: loop •

    $default  reduce using rule 20 (statement)


State 111

   21 statement: io_statement •

    $default  reduce using rule 21 (statement)


State 112

   50 condition: IF LPAREN • COND RPAREN LBRACE $@1 instruction_section RBRACE elsebloc SEMICOLON
   67 COND: • COND OR AND_EXPR
   68     | • AND_EXPR
   69 AND_EXPR: • AND_EXPR AND NOT_EXPR
   70         | • NOT_EXPR
   71 NOT_EXPR: • NOT NOT_EXPR
   72         | • comparison_expr
   73 comparison_expr: • term2 GT term1
   74                | • term2 LT term1
   75                | • term2 EQ term1
   76                | • term2 GEQ term1
   77                | • term2 LEQ term1
   78                | • term2 NEQ term1
   79                | • DROIT OP_COMP term1
   80                | • term2 OP_COMP GAUCHE
   81                | • DROIT OP_COMP GAUCHE
   82 DROIT: • CHARACTERE
   83      | • STRING_LITERAL
  122 term2: • factor2
  123      | • term2 PLUS factor2
  124      | • term2 MINUS factor2
  125 factor2: • primary2
  126        | • factor2 MULTIPLY primary2
  127        | • factor2 DIVIDE primary2
  128 primary2: • IDENTIFIER
  129         | • INT_NUMBER
  130         | • FLOAT_NUMBER
  131         | • LPAREN PLUS INT_NUMBER RPAREN
  132         | • LPAREN MINUS INT_NUMBER RPAREN
  133         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  134         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  135         | • LPAREN term2 RPAREN
  136         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER      shift, and go to state 121
    INT_NUMBER      shift, and go to state 122
    FLOAT_NUMBER    shift, and go to state 123
    CHARACTERE      shift, and go to state 124
    NOT             shift, and go to state 125
    LPAREN          shift, and go to state 126
    STRING_LITERAL  shift, and go to state 127

    COND             go to state 128
    AND_EXPR         go to state 129
    NOT_EXPR         go to state 130
    comparison_expr  go to state 131
    DROIT            go to state 132
    term2            go to state 133
    factor2          go to state 134
    primary2         go to state 135


State 113

   27 MDROIT: • IDENTIFIER
   28 TAB: ε •  [EQUALS]
   29    | • IDENTIFIER LBRACKET termtab RBRACKET
   54 assignment_int: • MDROIT EQUALS term
   55               | • TAB EQUALS term
   56               | • TAB EQUALS EXPRESSION_CHAR
   57               | • MDROIT EQUALS EXPRESSION_CHAR
   60 loop: FOR LPAREN • assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE SEMICOLON

    IDENTIFIER  shift, and go to state 102

    $default  reduce using rule 28 (TAB)

    MDROIT          go to state 136
    TAB             go to state 137
    assignment_int  go to state 138


State 114

   61 io_statement: READ LPAREN • IDENTIFIER RPAREN SEMICOLON

    IDENTIFIER  shift, and go to state 139


State 115

   62 io_statement: WRITE LPAREN • io_expr_list RPAREN SEMICOLON
   63 io_expr_list: • io_expr
   64             | • io_expr COMMA io_expr_list
   65 io_expr: • IDENTIFIER
   66        | • STRING_LITERAL

    IDENTIFIER      shift, and go to state 140
    STRING_LITERAL  shift, and go to state 141

    io_expr_list  go to state 142
    io_expr       go to state 143


State 116

   29 TAB: IDENTIFIER LBRACKET • termtab RBRACKET
   30 termtab: • factortab
   31        | • termtab PLUS factortab
   32        | • termtab MINUS factortab
   33 factortab: • primarytab
   34          | • factortab MULTIPLY primarytab
   35          | • factortab DIVIDE primarytab
   36 primarytab: • IDENTIFIER
   37           | • INT_NUMBER
   38           | • FLOAT_NUMBER
   39           | • LPAREN PLUS INT_NUMBER RPAREN
   40           | • LPAREN MINUS INT_NUMBER RPAREN
   41           | • LPAREN PLUS FLOAT_NUMBER RPAREN
   42           | • LPAREN MINUS FLOAT_NUMBER RPAREN
   43           | • LPAREN termtab RPAREN
   44           | • IDENTIFIER LBRACKET termtab RBRACKET
   45           | • CHARACTERE
   46           | • STRING_LITERAL

    IDENTIFIER      shift, and go to state 24
    INT_NUMBER      shift, and go to state 44
    FLOAT_NUMBER    shift, and go to state 26
    CHARACTERE      shift, and go to state 27
    LPAREN          shift, and go to state 28
    STRING_LITERAL  shift, and go to state 29

    termtab     go to state 144
    factortab   go to state 31
    primarytab  go to state 32


State 117

    1 program: VAR_GLOBAL LBRACE global_var_section RBRACE DECLARATION LBRACE declaration_section RBRACE INSTRUCTION LBRACE instruction_section RBRACE •

    $default  reduce using rule 1 (program)


State 118

   10 instruction_section: statement instruction_section •

    $default  reduce using rule 10 (instruction_section)


State 119

   23 assignment: MDROIT EQUALS • term SEMICOLON
   26           | MDROIT EQUALS • EXPRESSION_CHAR SEMICOLON
   47 EXPRESSION_CHAR: • CHARACTERE
   48                | • STRING_LITERAL
   54 assignment_int: MDROIT EQUALS • term
   57               | MDROIT EQUALS • EXPRESSION_CHAR
   92 term: • factor
   93     | • term PLUS factor
   94     | • term MINUS factor
   95 factor: • primary
   96       | • factor MULTIPLY primary
   97       | • factor DIVIDE primary
   98 primary: • IDENTIFIER
   99        | • INT_NUMBER
  100        | • FLOAT_NUMBER
  101        | • LPAREN PLUS INT_NUMBER RPAREN
  102        | • LPAREN MINUS INT_NUMBER RPAREN
  103        | • LPAREN PLUS FLOAT_NUMBER RPAREN
  104        | • LPAREN MINUS FLOAT_NUMBER RPAREN
  105        | • LPAREN term RPAREN
  106        | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER      shift, and go to state 35
    INT_NUMBER      shift, and go to state 36
    FLOAT_NUMBER    shift, and go to state 37
    CHARACTERE      shift, and go to state 145
    LPAREN          shift, and go to state 38
    STRING_LITERAL  shift, and go to state 146

    EXPRESSION_CHAR  go to state 147
    term             go to state 148
    factor           go to state 40
    primary          go to state 41


State 120

   24 assignment: TAB EQUALS • term SEMICOLON
   25           | TAB EQUALS • EXPRESSION_CHAR SEMICOLON
   47 EXPRESSION_CHAR: • CHARACTERE
   48                | • STRING_LITERAL
   55 assignment_int: TAB EQUALS • term
   56               | TAB EQUALS • EXPRESSION_CHAR
   92 term: • factor
   93     | • term PLUS factor
   94     | • term MINUS factor
   95 factor: • primary
   96       | • factor MULTIPLY primary
   97       | • factor DIVIDE primary
   98 primary: • IDENTIFIER
   99        | • INT_NUMBER
  100        | • FLOAT_NUMBER
  101        | • LPAREN PLUS INT_NUMBER RPAREN
  102        | • LPAREN MINUS INT_NUMBER RPAREN
  103        | • LPAREN PLUS FLOAT_NUMBER RPAREN
  104        | • LPAREN MINUS FLOAT_NUMBER RPAREN
  105        | • LPAREN term RPAREN
  106        | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER      shift, and go to state 35
    INT_NUMBER      shift, and go to state 36
    FLOAT_NUMBER    shift, and go to state 37
    CHARACTERE      shift, and go to state 145
    LPAREN          shift, and go to state 38
    STRING_LITERAL  shift, and go to state 146

    EXPRESSION_CHAR  go to state 149
    term             go to state 150
    factor           go to state 40
    primary          go to state 41


State 121

  128 primary2: IDENTIFIER •  [EQ, NEQ, GEQ, LT, LEQ, GT, PLUS, MINUS, MULTIPLY, DIVIDE, RPAREN]
  136         | IDENTIFIER • LBRACKET INT_NUMBER RBRACKET

    LBRACKET  shift, and go to state 151

    $default  reduce using rule 128 (primary2)


State 122

  129 primary2: INT_NUMBER •

    $default  reduce using rule 129 (primary2)


State 123

  130 primary2: FLOAT_NUMBER •

    $default  reduce using rule 130 (primary2)


State 124

   82 DROIT: CHARACTERE •

    $default  reduce using rule 82 (DROIT)


State 125

   71 NOT_EXPR: • NOT NOT_EXPR
   71         | NOT • NOT_EXPR
   72         | • comparison_expr
   73 comparison_expr: • term2 GT term1
   74                | • term2 LT term1
   75                | • term2 EQ term1
   76                | • term2 GEQ term1
   77                | • term2 LEQ term1
   78                | • term2 NEQ term1
   79                | • DROIT OP_COMP term1
   80                | • term2 OP_COMP GAUCHE
   81                | • DROIT OP_COMP GAUCHE
   82 DROIT: • CHARACTERE
   83      | • STRING_LITERAL
  122 term2: • factor2
  123      | • term2 PLUS factor2
  124      | • term2 MINUS factor2
  125 factor2: • primary2
  126        | • factor2 MULTIPLY primary2
  127        | • factor2 DIVIDE primary2
  128 primary2: • IDENTIFIER
  129         | • INT_NUMBER
  130         | • FLOAT_NUMBER
  131         | • LPAREN PLUS INT_NUMBER RPAREN
  132         | • LPAREN MINUS INT_NUMBER RPAREN
  133         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  134         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  135         | • LPAREN term2 RPAREN
  136         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER      shift, and go to state 121
    INT_NUMBER      shift, and go to state 122
    FLOAT_NUMBER    shift, and go to state 123
    CHARACTERE      shift, and go to state 124
    NOT             shift, and go to state 125
    LPAREN          shift, and go to state 126
    STRING_LITERAL  shift, and go to state 127

    NOT_EXPR         go to state 152
    comparison_expr  go to state 131
    DROIT            go to state 132
    term2            go to state 133
    factor2          go to state 134
    primary2         go to state 135


State 126

  122 term2: • factor2
  123      | • term2 PLUS factor2
  124      | • term2 MINUS factor2
  125 factor2: • primary2
  126        | • factor2 MULTIPLY primary2
  127        | • factor2 DIVIDE primary2
  128 primary2: • IDENTIFIER
  129         | • INT_NUMBER
  130         | • FLOAT_NUMBER
  131         | • LPAREN PLUS INT_NUMBER RPAREN
  131         | LPAREN • PLUS INT_NUMBER RPAREN
  132         | • LPAREN MINUS INT_NUMBER RPAREN
  132         | LPAREN • MINUS INT_NUMBER RPAREN
  133         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  133         | LPAREN • PLUS FLOAT_NUMBER RPAREN
  134         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  134         | LPAREN • MINUS FLOAT_NUMBER RPAREN
  135         | • LPAREN term2 RPAREN
  135         | LPAREN • term2 RPAREN
  136         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 121
    INT_NUMBER    shift, and go to state 122
    FLOAT_NUMBER  shift, and go to state 123
    PLUS          shift, and go to state 153
    MINUS         shift, and go to state 154
    LPAREN        shift, and go to state 126

    term2     go to state 155
    factor2   go to state 134
    primary2  go to state 135


State 127

   83 DROIT: STRING_LITERAL •

    $default  reduce using rule 83 (DROIT)


State 128

   50 condition: IF LPAREN COND • RPAREN LBRACE $@1 instruction_section RBRACE elsebloc SEMICOLON
   67 COND: COND • OR AND_EXPR

    OR      shift, and go to state 156
    RPAREN  shift, and go to state 157


State 129

   68 COND: AND_EXPR •  [OR, RPAREN]
   69 AND_EXPR: AND_EXPR • AND NOT_EXPR

    AND  shift, and go to state 158

    $default  reduce using rule 68 (COND)


State 130

   70 AND_EXPR: NOT_EXPR •

    $default  reduce using rule 70 (AND_EXPR)


State 131

   72 NOT_EXPR: comparison_expr •

    $default  reduce using rule 72 (NOT_EXPR)


State 132

   79 comparison_expr: DROIT • OP_COMP term1
   81                | DROIT • OP_COMP GAUCHE
   86 OP_COMP: • GT
   87        | • LT
   88        | • GEQ
   89        | • LEQ
   90        | • EQ
   91        | • NEQ

    EQ   shift, and go to state 159
    NEQ  shift, and go to state 160
    GEQ  shift, and go to state 161
    LT   shift, and go to state 162
    LEQ  shift, and go to state 163
    GT   shift, and go to state 164

    OP_COMP  go to state 165


State 133

   73 comparison_expr: term2 • GT term1
   74                | term2 • LT term1
   75                | term2 • EQ term1
   76                | term2 • GEQ term1
   77                | term2 • LEQ term1
   78                | term2 • NEQ term1
   80                | term2 • OP_COMP GAUCHE
   86 OP_COMP: • GT
   87        | • LT
   88        | • GEQ
   89        | • LEQ
   90        | • EQ
   91        | • NEQ
  123 term2: term2 • PLUS factor2
  124      | term2 • MINUS factor2

    EQ     shift, and go to state 166
    NEQ    shift, and go to state 167
    GEQ    shift, and go to state 168
    LT     shift, and go to state 169
    LEQ    shift, and go to state 170
    GT     shift, and go to state 171
    PLUS   shift, and go to state 172
    MINUS  shift, and go to state 173

    OP_COMP  go to state 174


State 134

  122 term2: factor2 •  [EQ, NEQ, GEQ, LT, LEQ, GT, PLUS, MINUS, RPAREN]
  126 factor2: factor2 • MULTIPLY primary2
  127        | factor2 • DIVIDE primary2

    MULTIPLY  shift, and go to state 175
    DIVIDE    shift, and go to state 176

    $default  reduce using rule 122 (term2)


State 135

  125 factor2: primary2 •

    $default  reduce using rule 125 (factor2)


State 136

   54 assignment_int: MDROIT • EQUALS term
   57               | MDROIT • EQUALS EXPRESSION_CHAR

    EQUALS  shift, and go to state 177


State 137

   55 assignment_int: TAB • EQUALS term
   56               | TAB • EQUALS EXPRESSION_CHAR

    EQUALS  shift, and go to state 178


State 138

   60 loop: FOR LPAREN assignment_int • COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE SEMICOLON

    COLON  shift, and go to state 179


State 139

   61 io_statement: READ LPAREN IDENTIFIER • RPAREN SEMICOLON

    RPAREN  shift, and go to state 180


State 140

   65 io_expr: IDENTIFIER •

    $default  reduce using rule 65 (io_expr)


State 141

   66 io_expr: STRING_LITERAL •

    $default  reduce using rule 66 (io_expr)


State 142

   62 io_statement: WRITE LPAREN io_expr_list • RPAREN SEMICOLON

    RPAREN  shift, and go to state 181


State 143

   63 io_expr_list: io_expr •  [RPAREN]
   64             | io_expr • COMMA io_expr_list

    COMMA  shift, and go to state 182

    $default  reduce using rule 63 (io_expr_list)


State 144

   29 TAB: IDENTIFIER LBRACKET termtab • RBRACKET
   31 termtab: termtab • PLUS factortab
   32        | termtab • MINUS factortab

    PLUS      shift, and go to state 48
    MINUS     shift, and go to state 49
    RBRACKET  shift, and go to state 183


State 145

   47 EXPRESSION_CHAR: CHARACTERE •

    $default  reduce using rule 47 (EXPRESSION_CHAR)


State 146

   48 EXPRESSION_CHAR: STRING_LITERAL •

    $default  reduce using rule 48 (EXPRESSION_CHAR)


State 147

   26 assignment: MDROIT EQUALS EXPRESSION_CHAR • SEMICOLON
   57 assignment_int: MDROIT EQUALS EXPRESSION_CHAR •  [IF, FOR, READ, WRITE, IDENTIFIER, EQUALS, RBRACE]

    SEMICOLON  shift, and go to state 184

    $default  reduce using rule 57 (assignment_int)


State 148

   23 assignment: MDROIT EQUALS term • SEMICOLON
   54 assignment_int: MDROIT EQUALS term •  [IF, FOR, READ, WRITE, IDENTIFIER, EQUALS, RBRACE]
   93 term: term • PLUS factor
   94     | term • MINUS factor

    PLUS       shift, and go to state 59
    MINUS      shift, and go to state 60
    SEMICOLON  shift, and go to state 185

    $default  reduce using rule 54 (assignment_int)


State 149

   25 assignment: TAB EQUALS EXPRESSION_CHAR • SEMICOLON
   56 assignment_int: TAB EQUALS EXPRESSION_CHAR •  [IF, FOR, READ, WRITE, IDENTIFIER, EQUALS, RBRACE]

    SEMICOLON  shift, and go to state 186

    $default  reduce using rule 56 (assignment_int)


State 150

   24 assignment: TAB EQUALS term • SEMICOLON
   55 assignment_int: TAB EQUALS term •  [IF, FOR, READ, WRITE, IDENTIFIER, EQUALS, RBRACE]
   93 term: term • PLUS factor
   94     | term • MINUS factor

    PLUS       shift, and go to state 59
    MINUS      shift, and go to state 60
    SEMICOLON  shift, and go to state 187

    $default  reduce using rule 55 (assignment_int)


State 151

  136 primary2: IDENTIFIER LBRACKET • INT_NUMBER RBRACKET

    INT_NUMBER  shift, and go to state 188


State 152

   71 NOT_EXPR: NOT NOT_EXPR •

    $default  reduce using rule 71 (NOT_EXPR)


State 153

  131 primary2: LPAREN PLUS • INT_NUMBER RPAREN
  133         | LPAREN PLUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 189
    FLOAT_NUMBER  shift, and go to state 190


State 154

  132 primary2: LPAREN MINUS • INT_NUMBER RPAREN
  134         | LPAREN MINUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 191
    FLOAT_NUMBER  shift, and go to state 192


State 155

  123 term2: term2 • PLUS factor2
  124      | term2 • MINUS factor2
  135 primary2: LPAREN term2 • RPAREN

    PLUS    shift, and go to state 172
    MINUS   shift, and go to state 173
    RPAREN  shift, and go to state 193


State 156

   67 COND: COND OR • AND_EXPR
   69 AND_EXPR: • AND_EXPR AND NOT_EXPR
   70         | • NOT_EXPR
   71 NOT_EXPR: • NOT NOT_EXPR
   72         | • comparison_expr
   73 comparison_expr: • term2 GT term1
   74                | • term2 LT term1
   75                | • term2 EQ term1
   76                | • term2 GEQ term1
   77                | • term2 LEQ term1
   78                | • term2 NEQ term1
   79                | • DROIT OP_COMP term1
   80                | • term2 OP_COMP GAUCHE
   81                | • DROIT OP_COMP GAUCHE
   82 DROIT: • CHARACTERE
   83      | • STRING_LITERAL
  122 term2: • factor2
  123      | • term2 PLUS factor2
  124      | • term2 MINUS factor2
  125 factor2: • primary2
  126        | • factor2 MULTIPLY primary2
  127        | • factor2 DIVIDE primary2
  128 primary2: • IDENTIFIER
  129         | • INT_NUMBER
  130         | • FLOAT_NUMBER
  131         | • LPAREN PLUS INT_NUMBER RPAREN
  132         | • LPAREN MINUS INT_NUMBER RPAREN
  133         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  134         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  135         | • LPAREN term2 RPAREN
  136         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER      shift, and go to state 121
    INT_NUMBER      shift, and go to state 122
    FLOAT_NUMBER    shift, and go to state 123
    CHARACTERE      shift, and go to state 124
    NOT             shift, and go to state 125
    LPAREN          shift, and go to state 126
    STRING_LITERAL  shift, and go to state 127

    AND_EXPR         go to state 194
    NOT_EXPR         go to state 130
    comparison_expr  go to state 131
    DROIT            go to state 132
    term2            go to state 133
    factor2          go to state 134
    primary2         go to state 135


State 157

   50 condition: IF LPAREN COND RPAREN • LBRACE $@1 instruction_section RBRACE elsebloc SEMICOLON

    LBRACE  shift, and go to state 195


State 158

   69 AND_EXPR: AND_EXPR AND • NOT_EXPR
   71 NOT_EXPR: • NOT NOT_EXPR
   72         | • comparison_expr
   73 comparison_expr: • term2 GT term1
   74                | • term2 LT term1
   75                | • term2 EQ term1
   76                | • term2 GEQ term1
   77                | • term2 LEQ term1
   78                | • term2 NEQ term1
   79                | • DROIT OP_COMP term1
   80                | • term2 OP_COMP GAUCHE
   81                | • DROIT OP_COMP GAUCHE
   82 DROIT: • CHARACTERE
   83      | • STRING_LITERAL
  122 term2: • factor2
  123      | • term2 PLUS factor2
  124      | • term2 MINUS factor2
  125 factor2: • primary2
  126        | • factor2 MULTIPLY primary2
  127        | • factor2 DIVIDE primary2
  128 primary2: • IDENTIFIER
  129         | • INT_NUMBER
  130         | • FLOAT_NUMBER
  131         | • LPAREN PLUS INT_NUMBER RPAREN
  132         | • LPAREN MINUS INT_NUMBER RPAREN
  133         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  134         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  135         | • LPAREN term2 RPAREN
  136         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER      shift, and go to state 121
    INT_NUMBER      shift, and go to state 122
    FLOAT_NUMBER    shift, and go to state 123
    CHARACTERE      shift, and go to state 124
    NOT             shift, and go to state 125
    LPAREN          shift, and go to state 126
    STRING_LITERAL  shift, and go to state 127

    NOT_EXPR         go to state 196
    comparison_expr  go to state 131
    DROIT            go to state 132
    term2            go to state 133
    factor2          go to state 134
    primary2         go to state 135


State 159

   90 OP_COMP: EQ •

    $default  reduce using rule 90 (OP_COMP)


State 160

   91 OP_COMP: NEQ •

    $default  reduce using rule 91 (OP_COMP)


State 161

   88 OP_COMP: GEQ •

    $default  reduce using rule 88 (OP_COMP)


State 162

   87 OP_COMP: LT •

    $default  reduce using rule 87 (OP_COMP)


State 163

   89 OP_COMP: LEQ •

    $default  reduce using rule 89 (OP_COMP)


State 164

   86 OP_COMP: GT •

    $default  reduce using rule 86 (OP_COMP)


State 165

   79 comparison_expr: DROIT OP_COMP • term1
   81                | DROIT OP_COMP • GAUCHE
   84 GAUCHE: • CHARACTERE
   85       | • STRING_LITERAL
  107 term1: • factor1
  108      | • term1 PLUS factor1
  109      | • term1 MINUS factor1
  110 factor1: • primary1
  111        | • factor1 MULTIPLY primary1
  112        | • factor1 DIVIDE primary1
  113 primary1: • IDENTIFIER
  114         | • INT_NUMBER
  115         | • FLOAT_NUMBER
  116         | • LPAREN PLUS INT_NUMBER RPAREN
  117         | • LPAREN MINUS INT_NUMBER RPAREN
  118         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  119         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  120         | • LPAREN term1 RPAREN
  121         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER      shift, and go to state 197
    INT_NUMBER      shift, and go to state 198
    FLOAT_NUMBER    shift, and go to state 199
    CHARACTERE      shift, and go to state 200
    LPAREN          shift, and go to state 201
    STRING_LITERAL  shift, and go to state 202

    GAUCHE    go to state 203
    term1     go to state 204
    factor1   go to state 205
    primary1  go to state 206


State 166

   75 comparison_expr: term2 EQ • term1
   90 OP_COMP: EQ •  [CHARACTERE, STRING_LITERAL]
  107 term1: • factor1
  108      | • term1 PLUS factor1
  109      | • term1 MINUS factor1
  110 factor1: • primary1
  111        | • factor1 MULTIPLY primary1
  112        | • factor1 DIVIDE primary1
  113 primary1: • IDENTIFIER
  114         | • INT_NUMBER
  115         | • FLOAT_NUMBER
  116         | • LPAREN PLUS INT_NUMBER RPAREN
  117         | • LPAREN MINUS INT_NUMBER RPAREN
  118         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  119         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  120         | • LPAREN term1 RPAREN
  121         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    LPAREN        shift, and go to state 201

    $default  reduce using rule 90 (OP_COMP)

    term1     go to state 207
    factor1   go to state 205
    primary1  go to state 206


State 167

   78 comparison_expr: term2 NEQ • term1
   91 OP_COMP: NEQ •  [CHARACTERE, STRING_LITERAL]
  107 term1: • factor1
  108      | • term1 PLUS factor1
  109      | • term1 MINUS factor1
  110 factor1: • primary1
  111        | • factor1 MULTIPLY primary1
  112        | • factor1 DIVIDE primary1
  113 primary1: • IDENTIFIER
  114         | • INT_NUMBER
  115         | • FLOAT_NUMBER
  116         | • LPAREN PLUS INT_NUMBER RPAREN
  117         | • LPAREN MINUS INT_NUMBER RPAREN
  118         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  119         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  120         | • LPAREN term1 RPAREN
  121         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    LPAREN        shift, and go to state 201

    $default  reduce using rule 91 (OP_COMP)

    term1     go to state 208
    factor1   go to state 205
    primary1  go to state 206


State 168

   76 comparison_expr: term2 GEQ • term1
   88 OP_COMP: GEQ •  [CHARACTERE, STRING_LITERAL]
  107 term1: • factor1
  108      | • term1 PLUS factor1
  109      | • term1 MINUS factor1
  110 factor1: • primary1
  111        | • factor1 MULTIPLY primary1
  112        | • factor1 DIVIDE primary1
  113 primary1: • IDENTIFIER
  114         | • INT_NUMBER
  115         | • FLOAT_NUMBER
  116         | • LPAREN PLUS INT_NUMBER RPAREN
  117         | • LPAREN MINUS INT_NUMBER RPAREN
  118         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  119         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  120         | • LPAREN term1 RPAREN
  121         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    LPAREN        shift, and go to state 201

    $default  reduce using rule 88 (OP_COMP)

    term1     go to state 209
    factor1   go to state 205
    primary1  go to state 206


State 169

   74 comparison_expr: term2 LT • term1
   87 OP_COMP: LT •  [CHARACTERE, STRING_LITERAL]
  107 term1: • factor1
  108      | • term1 PLUS factor1
  109      | • term1 MINUS factor1
  110 factor1: • primary1
  111        | • factor1 MULTIPLY primary1
  112        | • factor1 DIVIDE primary1
  113 primary1: • IDENTIFIER
  114         | • INT_NUMBER
  115         | • FLOAT_NUMBER
  116         | • LPAREN PLUS INT_NUMBER RPAREN
  117         | • LPAREN MINUS INT_NUMBER RPAREN
  118         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  119         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  120         | • LPAREN term1 RPAREN
  121         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    LPAREN        shift, and go to state 201

    $default  reduce using rule 87 (OP_COMP)

    term1     go to state 210
    factor1   go to state 205
    primary1  go to state 206


State 170

   77 comparison_expr: term2 LEQ • term1
   89 OP_COMP: LEQ •  [CHARACTERE, STRING_LITERAL]
  107 term1: • factor1
  108      | • term1 PLUS factor1
  109      | • term1 MINUS factor1
  110 factor1: • primary1
  111        | • factor1 MULTIPLY primary1
  112        | • factor1 DIVIDE primary1
  113 primary1: • IDENTIFIER
  114         | • INT_NUMBER
  115         | • FLOAT_NUMBER
  116         | • LPAREN PLUS INT_NUMBER RPAREN
  117         | • LPAREN MINUS INT_NUMBER RPAREN
  118         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  119         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  120         | • LPAREN term1 RPAREN
  121         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    LPAREN        shift, and go to state 201

    $default  reduce using rule 89 (OP_COMP)

    term1     go to state 211
    factor1   go to state 205
    primary1  go to state 206


State 171

   73 comparison_expr: term2 GT • term1
   86 OP_COMP: GT •  [CHARACTERE, STRING_LITERAL]
  107 term1: • factor1
  108      | • term1 PLUS factor1
  109      | • term1 MINUS factor1
  110 factor1: • primary1
  111        | • factor1 MULTIPLY primary1
  112        | • factor1 DIVIDE primary1
  113 primary1: • IDENTIFIER
  114         | • INT_NUMBER
  115         | • FLOAT_NUMBER
  116         | • LPAREN PLUS INT_NUMBER RPAREN
  117         | • LPAREN MINUS INT_NUMBER RPAREN
  118         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  119         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  120         | • LPAREN term1 RPAREN
  121         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    LPAREN        shift, and go to state 201

    $default  reduce using rule 86 (OP_COMP)

    term1     go to state 212
    factor1   go to state 205
    primary1  go to state 206


State 172

  123 term2: term2 PLUS • factor2
  125 factor2: • primary2
  126        | • factor2 MULTIPLY primary2
  127        | • factor2 DIVIDE primary2
  128 primary2: • IDENTIFIER
  129         | • INT_NUMBER
  130         | • FLOAT_NUMBER
  131         | • LPAREN PLUS INT_NUMBER RPAREN
  132         | • LPAREN MINUS INT_NUMBER RPAREN
  133         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  134         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  135         | • LPAREN term2 RPAREN
  136         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 121
    INT_NUMBER    shift, and go to state 122
    FLOAT_NUMBER  shift, and go to state 123
    LPAREN        shift, and go to state 126

    factor2   go to state 213
    primary2  go to state 135


State 173

  124 term2: term2 MINUS • factor2
  125 factor2: • primary2
  126        | • factor2 MULTIPLY primary2
  127        | • factor2 DIVIDE primary2
  128 primary2: • IDENTIFIER
  129         | • INT_NUMBER
  130         | • FLOAT_NUMBER
  131         | • LPAREN PLUS INT_NUMBER RPAREN
  132         | • LPAREN MINUS INT_NUMBER RPAREN
  133         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  134         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  135         | • LPAREN term2 RPAREN
  136         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 121
    INT_NUMBER    shift, and go to state 122
    FLOAT_NUMBER  shift, and go to state 123
    LPAREN        shift, and go to state 126

    factor2   go to state 214
    primary2  go to state 135


State 174

   80 comparison_expr: term2 OP_COMP • GAUCHE
   84 GAUCHE: • CHARACTERE
   85       | • STRING_LITERAL

    CHARACTERE      shift, and go to state 200
    STRING_LITERAL  shift, and go to state 202

    GAUCHE  go to state 215


State 175

  126 factor2: factor2 MULTIPLY • primary2
  128 primary2: • IDENTIFIER
  129         | • INT_NUMBER
  130         | • FLOAT_NUMBER
  131         | • LPAREN PLUS INT_NUMBER RPAREN
  132         | • LPAREN MINUS INT_NUMBER RPAREN
  133         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  134         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  135         | • LPAREN term2 RPAREN
  136         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 121
    INT_NUMBER    shift, and go to state 122
    FLOAT_NUMBER  shift, and go to state 123
    LPAREN        shift, and go to state 126

    primary2  go to state 216


State 176

  127 factor2: factor2 DIVIDE • primary2
  128 primary2: • IDENTIFIER
  129         | • INT_NUMBER
  130         | • FLOAT_NUMBER
  131         | • LPAREN PLUS INT_NUMBER RPAREN
  132         | • LPAREN MINUS INT_NUMBER RPAREN
  133         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  134         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  135         | • LPAREN term2 RPAREN
  136         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 121
    INT_NUMBER    shift, and go to state 122
    FLOAT_NUMBER  shift, and go to state 123
    LPAREN        shift, and go to state 126

    primary2  go to state 217


State 177

   47 EXPRESSION_CHAR: • CHARACTERE
   48                | • STRING_LITERAL
   54 assignment_int: MDROIT EQUALS • term
   57               | MDROIT EQUALS • EXPRESSION_CHAR
   92 term: • factor
   93     | • term PLUS factor
   94     | • term MINUS factor
   95 factor: • primary
   96       | • factor MULTIPLY primary
   97       | • factor DIVIDE primary
   98 primary: • IDENTIFIER
   99        | • INT_NUMBER
  100        | • FLOAT_NUMBER
  101        | • LPAREN PLUS INT_NUMBER RPAREN
  102        | • LPAREN MINUS INT_NUMBER RPAREN
  103        | • LPAREN PLUS FLOAT_NUMBER RPAREN
  104        | • LPAREN MINUS FLOAT_NUMBER RPAREN
  105        | • LPAREN term RPAREN
  106        | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER      shift, and go to state 35
    INT_NUMBER      shift, and go to state 36
    FLOAT_NUMBER    shift, and go to state 37
    CHARACTERE      shift, and go to state 145
    LPAREN          shift, and go to state 38
    STRING_LITERAL  shift, and go to state 146

    EXPRESSION_CHAR  go to state 218
    term             go to state 219
    factor           go to state 40
    primary          go to state 41


State 178

   47 EXPRESSION_CHAR: • CHARACTERE
   48                | • STRING_LITERAL
   55 assignment_int: TAB EQUALS • term
   56               | TAB EQUALS • EXPRESSION_CHAR
   92 term: • factor
   93     | • term PLUS factor
   94     | • term MINUS factor
   95 factor: • primary
   96       | • factor MULTIPLY primary
   97       | • factor DIVIDE primary
   98 primary: • IDENTIFIER
   99        | • INT_NUMBER
  100        | • FLOAT_NUMBER
  101        | • LPAREN PLUS INT_NUMBER RPAREN
  102        | • LPAREN MINUS INT_NUMBER RPAREN
  103        | • LPAREN PLUS FLOAT_NUMBER RPAREN
  104        | • LPAREN MINUS FLOAT_NUMBER RPAREN
  105        | • LPAREN term RPAREN
  106        | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER      shift, and go to state 35
    INT_NUMBER      shift, and go to state 36
    FLOAT_NUMBER    shift, and go to state 37
    CHARACTERE      shift, and go to state 145
    LPAREN          shift, and go to state 38
    STRING_LITERAL  shift, and go to state 146

    EXPRESSION_CHAR  go to state 220
    term             go to state 221
    factor           go to state 40
    primary          go to state 41


State 179

   60 loop: FOR LPAREN assignment_int COLON • term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE SEMICOLON
  154 term3: • factor3
  155      | • term3 PLUS factor3
  156      | • term3 MINUS factor3
  157 factor3: • primary3
  158        | • factor3 MULTIPLY primary3
  159        | • factor3 DIVIDE primary3
  160 primary3: • IDENTIFIER
  161         | • INT_NUMBER
  162         | • FLOAT_NUMBER
  163         | • LPAREN PLUS INT_NUMBER RPAREN
  164         | • LPAREN MINUS INT_NUMBER RPAREN
  165         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  166         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  167         | • LPAREN term3 RPAREN
  168         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  169         | • STRING_LITERAL
  170         | • CHARACTERE

    IDENTIFIER      shift, and go to state 222
    INT_NUMBER      shift, and go to state 223
    FLOAT_NUMBER    shift, and go to state 224
    CHARACTERE      shift, and go to state 225
    LPAREN          shift, and go to state 226
    STRING_LITERAL  shift, and go to state 227

    term3     go to state 228
    factor3   go to state 229
    primary3  go to state 230


State 180

   61 io_statement: READ LPAREN IDENTIFIER RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 231


State 181

   62 io_statement: WRITE LPAREN io_expr_list RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 232


State 182

   63 io_expr_list: • io_expr
   64             | • io_expr COMMA io_expr_list
   64             | io_expr COMMA • io_expr_list
   65 io_expr: • IDENTIFIER
   66        | • STRING_LITERAL

    IDENTIFIER      shift, and go to state 140
    STRING_LITERAL  shift, and go to state 141

    io_expr_list  go to state 233
    io_expr       go to state 143


State 183

   29 TAB: IDENTIFIER LBRACKET termtab RBRACKET •

    $default  reduce using rule 29 (TAB)


State 184

   26 assignment: MDROIT EQUALS EXPRESSION_CHAR SEMICOLON •

    $default  reduce using rule 26 (assignment)


State 185

   23 assignment: MDROIT EQUALS term SEMICOLON •

    $default  reduce using rule 23 (assignment)


State 186

   25 assignment: TAB EQUALS EXPRESSION_CHAR SEMICOLON •

    $default  reduce using rule 25 (assignment)


State 187

   24 assignment: TAB EQUALS term SEMICOLON •

    $default  reduce using rule 24 (assignment)


State 188

  136 primary2: IDENTIFIER LBRACKET INT_NUMBER • RBRACKET

    RBRACKET  shift, and go to state 234


State 189

  131 primary2: LPAREN PLUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 235


State 190

  133 primary2: LPAREN PLUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 236


State 191

  132 primary2: LPAREN MINUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 237


State 192

  134 primary2: LPAREN MINUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 238


State 193

  135 primary2: LPAREN term2 RPAREN •

    $default  reduce using rule 135 (primary2)


State 194

   67 COND: COND OR AND_EXPR •  [OR, RPAREN]
   69 AND_EXPR: AND_EXPR • AND NOT_EXPR

    AND  shift, and go to state 158

    $default  reduce using rule 67 (COND)


State 195

   49 $@1: ε •
   50 condition: IF LPAREN COND RPAREN LBRACE • $@1 instruction_section RBRACE elsebloc SEMICOLON

    $default  reduce using rule 49 ($@1)

    $@1  go to state 239


State 196

   69 AND_EXPR: AND_EXPR AND NOT_EXPR •

    $default  reduce using rule 69 (AND_EXPR)


State 197

  113 primary1: IDENTIFIER •  [AND, OR, PLUS, MINUS, MULTIPLY, DIVIDE, RPAREN]
  121         | IDENTIFIER • LBRACKET INT_NUMBER RBRACKET

    LBRACKET  shift, and go to state 240

    $default  reduce using rule 113 (primary1)


State 198

  114 primary1: INT_NUMBER •

    $default  reduce using rule 114 (primary1)


State 199

  115 primary1: FLOAT_NUMBER •

    $default  reduce using rule 115 (primary1)


State 200

   84 GAUCHE: CHARACTERE •

    $default  reduce using rule 84 (GAUCHE)


State 201

  107 term1: • factor1
  108      | • term1 PLUS factor1
  109      | • term1 MINUS factor1
  110 factor1: • primary1
  111        | • factor1 MULTIPLY primary1
  112        | • factor1 DIVIDE primary1
  113 primary1: • IDENTIFIER
  114         | • INT_NUMBER
  115         | • FLOAT_NUMBER
  116         | • LPAREN PLUS INT_NUMBER RPAREN
  116         | LPAREN • PLUS INT_NUMBER RPAREN
  117         | • LPAREN MINUS INT_NUMBER RPAREN
  117         | LPAREN • MINUS INT_NUMBER RPAREN
  118         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  118         | LPAREN • PLUS FLOAT_NUMBER RPAREN
  119         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  119         | LPAREN • MINUS FLOAT_NUMBER RPAREN
  120         | • LPAREN term1 RPAREN
  120         | LPAREN • term1 RPAREN
  121         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    PLUS          shift, and go to state 241
    MINUS         shift, and go to state 242
    LPAREN        shift, and go to state 201

    term1     go to state 243
    factor1   go to state 205
    primary1  go to state 206


State 202

   85 GAUCHE: STRING_LITERAL •

    $default  reduce using rule 85 (GAUCHE)


State 203

   81 comparison_expr: DROIT OP_COMP GAUCHE •

    $default  reduce using rule 81 (comparison_expr)


State 204

   79 comparison_expr: DROIT OP_COMP term1 •  [AND, OR, RPAREN]
  108 term1: term1 • PLUS factor1
  109      | term1 • MINUS factor1

    PLUS   shift, and go to state 244
    MINUS  shift, and go to state 245

    $default  reduce using rule 79 (comparison_expr)


State 205

  107 term1: factor1 •  [AND, OR, PLUS, MINUS, RPAREN]
  111 factor1: factor1 • MULTIPLY primary1
  112        | factor1 • DIVIDE primary1

    MULTIPLY  shift, and go to state 246
    DIVIDE    shift, and go to state 247

    $default  reduce using rule 107 (term1)


State 206

  110 factor1: primary1 •

    $default  reduce using rule 110 (factor1)


State 207

   75 comparison_expr: term2 EQ term1 •  [AND, OR, RPAREN]
  108 term1: term1 • PLUS factor1
  109      | term1 • MINUS factor1

    PLUS   shift, and go to state 244
    MINUS  shift, and go to state 245

    $default  reduce using rule 75 (comparison_expr)


State 208

   78 comparison_expr: term2 NEQ term1 •  [AND, OR, RPAREN]
  108 term1: term1 • PLUS factor1
  109      | term1 • MINUS factor1

    PLUS   shift, and go to state 244
    MINUS  shift, and go to state 245

    $default  reduce using rule 78 (comparison_expr)


State 209

   76 comparison_expr: term2 GEQ term1 •  [AND, OR, RPAREN]
  108 term1: term1 • PLUS factor1
  109      | term1 • MINUS factor1

    PLUS   shift, and go to state 244
    MINUS  shift, and go to state 245

    $default  reduce using rule 76 (comparison_expr)


State 210

   74 comparison_expr: term2 LT term1 •  [AND, OR, RPAREN]
  108 term1: term1 • PLUS factor1
  109      | term1 • MINUS factor1

    PLUS   shift, and go to state 244
    MINUS  shift, and go to state 245

    $default  reduce using rule 74 (comparison_expr)


State 211

   77 comparison_expr: term2 LEQ term1 •  [AND, OR, RPAREN]
  108 term1: term1 • PLUS factor1
  109      | term1 • MINUS factor1

    PLUS   shift, and go to state 244
    MINUS  shift, and go to state 245

    $default  reduce using rule 77 (comparison_expr)


State 212

   73 comparison_expr: term2 GT term1 •  [AND, OR, RPAREN]
  108 term1: term1 • PLUS factor1
  109      | term1 • MINUS factor1

    PLUS   shift, and go to state 244
    MINUS  shift, and go to state 245

    $default  reduce using rule 73 (comparison_expr)


State 213

  123 term2: term2 PLUS factor2 •  [EQ, NEQ, GEQ, LT, LEQ, GT, PLUS, MINUS, RPAREN]
  126 factor2: factor2 • MULTIPLY primary2
  127        | factor2 • DIVIDE primary2

    MULTIPLY  shift, and go to state 175
    DIVIDE    shift, and go to state 176

    $default  reduce using rule 123 (term2)


State 214

  124 term2: term2 MINUS factor2 •  [EQ, NEQ, GEQ, LT, LEQ, GT, PLUS, MINUS, RPAREN]
  126 factor2: factor2 • MULTIPLY primary2
  127        | factor2 • DIVIDE primary2

    MULTIPLY  shift, and go to state 175
    DIVIDE    shift, and go to state 176

    $default  reduce using rule 124 (term2)


State 215

   80 comparison_expr: term2 OP_COMP GAUCHE •

    $default  reduce using rule 80 (comparison_expr)


State 216

  126 factor2: factor2 MULTIPLY primary2 •

    $default  reduce using rule 126 (factor2)


State 217

  127 factor2: factor2 DIVIDE primary2 •

    $default  reduce using rule 127 (factor2)


State 218

   57 assignment_int: MDROIT EQUALS EXPRESSION_CHAR •

    $default  reduce using rule 57 (assignment_int)


State 219

   54 assignment_int: MDROIT EQUALS term •  [COLON]
   93 term: term • PLUS factor
   94     | term • MINUS factor

    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60

    $default  reduce using rule 54 (assignment_int)


State 220

   56 assignment_int: TAB EQUALS EXPRESSION_CHAR •

    $default  reduce using rule 56 (assignment_int)


State 221

   55 assignment_int: TAB EQUALS term •  [COLON]
   93 term: term • PLUS factor
   94     | term • MINUS factor

    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60

    $default  reduce using rule 55 (assignment_int)


State 222

  160 primary3: IDENTIFIER •  [PLUS, MINUS, MULTIPLY, DIVIDE, RPAREN, COLON]
  168         | IDENTIFIER • LBRACKET INT_NUMBER RBRACKET

    LBRACKET  shift, and go to state 248

    $default  reduce using rule 160 (primary3)


State 223

  161 primary3: INT_NUMBER •

    $default  reduce using rule 161 (primary3)


State 224

  162 primary3: FLOAT_NUMBER •

    $default  reduce using rule 162 (primary3)


State 225

  170 primary3: CHARACTERE •

    $default  reduce using rule 170 (primary3)


State 226

  154 term3: • factor3
  155      | • term3 PLUS factor3
  156      | • term3 MINUS factor3
  157 factor3: • primary3
  158        | • factor3 MULTIPLY primary3
  159        | • factor3 DIVIDE primary3
  160 primary3: • IDENTIFIER
  161         | • INT_NUMBER
  162         | • FLOAT_NUMBER
  163         | • LPAREN PLUS INT_NUMBER RPAREN
  163         | LPAREN • PLUS INT_NUMBER RPAREN
  164         | • LPAREN MINUS INT_NUMBER RPAREN
  164         | LPAREN • MINUS INT_NUMBER RPAREN
  165         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  165         | LPAREN • PLUS FLOAT_NUMBER RPAREN
  166         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  166         | LPAREN • MINUS FLOAT_NUMBER RPAREN
  167         | • LPAREN term3 RPAREN
  167         | LPAREN • term3 RPAREN
  168         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  169         | • STRING_LITERAL
  170         | • CHARACTERE

    IDENTIFIER      shift, and go to state 222
    INT_NUMBER      shift, and go to state 223
    FLOAT_NUMBER    shift, and go to state 224
    CHARACTERE      shift, and go to state 225
    PLUS            shift, and go to state 249
    MINUS           shift, and go to state 250
    LPAREN          shift, and go to state 226
    STRING_LITERAL  shift, and go to state 227

    term3     go to state 251
    factor3   go to state 229
    primary3  go to state 230


State 227

  169 primary3: STRING_LITERAL •

    $default  reduce using rule 169 (primary3)


State 228

   58 $@3: ε •  [COLON]
   60 loop: FOR LPAREN assignment_int COLON term3 • $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE SEMICOLON
  155 term3: term3 • PLUS factor3
  156      | term3 • MINUS factor3

    PLUS   shift, and go to state 252
    MINUS  shift, and go to state 253

    $default  reduce using rule 58 ($@3)

    $@3  go to state 254


State 229

  154 term3: factor3 •  [PLUS, MINUS, RPAREN, COLON]
  158 factor3: factor3 • MULTIPLY primary3
  159        | factor3 • DIVIDE primary3

    MULTIPLY  shift, and go to state 255
    DIVIDE    shift, and go to state 256

    $default  reduce using rule 154 (term3)


State 230

  157 factor3: primary3 •

    $default  reduce using rule 157 (factor3)


State 231

   61 io_statement: READ LPAREN IDENTIFIER RPAREN SEMICOLON •

    $default  reduce using rule 61 (io_statement)


State 232

   62 io_statement: WRITE LPAREN io_expr_list RPAREN SEMICOLON •

    $default  reduce using rule 62 (io_statement)


State 233

   64 io_expr_list: io_expr COMMA io_expr_list •

    $default  reduce using rule 64 (io_expr_list)


State 234

  136 primary2: IDENTIFIER LBRACKET INT_NUMBER RBRACKET •

    $default  reduce using rule 136 (primary2)


State 235

  131 primary2: LPAREN PLUS INT_NUMBER RPAREN •

    $default  reduce using rule 131 (primary2)


State 236

  133 primary2: LPAREN PLUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 133 (primary2)


State 237

  132 primary2: LPAREN MINUS INT_NUMBER RPAREN •

    $default  reduce using rule 132 (primary2)


State 238

  134 primary2: LPAREN MINUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 134 (primary2)


State 239

    9 instruction_section: • statement
   10                    | • statement instruction_section
   18 statement: • assignment
   19          | • condition
   20          | • loop
   21          | • io_statement
   22          | • assignment_int
   23 assignment: • MDROIT EQUALS term SEMICOLON
   24           | • TAB EQUALS term SEMICOLON
   25           | • TAB EQUALS EXPRESSION_CHAR SEMICOLON
   26           | • MDROIT EQUALS EXPRESSION_CHAR SEMICOLON
   27 MDROIT: • IDENTIFIER
   28 TAB: ε •  [EQUALS]
   29    | • IDENTIFIER LBRACKET termtab RBRACKET
   50 condition: • IF LPAREN COND RPAREN LBRACE $@1 instruction_section RBRACE elsebloc SEMICOLON
   50          | IF LPAREN COND RPAREN LBRACE $@1 • instruction_section RBRACE elsebloc SEMICOLON
   54 assignment_int: • MDROIT EQUALS term
   55               | • TAB EQUALS term
   56               | • TAB EQUALS EXPRESSION_CHAR
   57               | • MDROIT EQUALS EXPRESSION_CHAR
   60 loop: • FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE SEMICOLON
   61 io_statement: • READ LPAREN IDENTIFIER RPAREN SEMICOLON
   62             | • WRITE LPAREN io_expr_list RPAREN SEMICOLON

    IF          shift, and go to state 98
    FOR         shift, and go to state 99
    READ        shift, and go to state 100
    WRITE       shift, and go to state 101
    IDENTIFIER  shift, and go to state 102

    $default  reduce using rule 28 (TAB)

    instruction_section  go to state 257
    statement            go to state 104
    assignment           go to state 105
    MDROIT               go to state 106
    TAB                  go to state 107
    condition            go to state 108
    assignment_int       go to state 109
    loop                 go to state 110
    io_statement         go to state 111


State 240

  121 primary1: IDENTIFIER LBRACKET • INT_NUMBER RBRACKET

    INT_NUMBER  shift, and go to state 258


State 241

  116 primary1: LPAREN PLUS • INT_NUMBER RPAREN
  118         | LPAREN PLUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 259
    FLOAT_NUMBER  shift, and go to state 260


State 242

  117 primary1: LPAREN MINUS • INT_NUMBER RPAREN
  119         | LPAREN MINUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 261
    FLOAT_NUMBER  shift, and go to state 262


State 243

  108 term1: term1 • PLUS factor1
  109      | term1 • MINUS factor1
  120 primary1: LPAREN term1 • RPAREN

    PLUS    shift, and go to state 244
    MINUS   shift, and go to state 245
    RPAREN  shift, and go to state 263


State 244

  108 term1: term1 PLUS • factor1
  110 factor1: • primary1
  111        | • factor1 MULTIPLY primary1
  112        | • factor1 DIVIDE primary1
  113 primary1: • IDENTIFIER
  114         | • INT_NUMBER
  115         | • FLOAT_NUMBER
  116         | • LPAREN PLUS INT_NUMBER RPAREN
  117         | • LPAREN MINUS INT_NUMBER RPAREN
  118         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  119         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  120         | • LPAREN term1 RPAREN
  121         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    LPAREN        shift, and go to state 201

    factor1   go to state 264
    primary1  go to state 206


State 245

  109 term1: term1 MINUS • factor1
  110 factor1: • primary1
  111        | • factor1 MULTIPLY primary1
  112        | • factor1 DIVIDE primary1
  113 primary1: • IDENTIFIER
  114         | • INT_NUMBER
  115         | • FLOAT_NUMBER
  116         | • LPAREN PLUS INT_NUMBER RPAREN
  117         | • LPAREN MINUS INT_NUMBER RPAREN
  118         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  119         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  120         | • LPAREN term1 RPAREN
  121         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    LPAREN        shift, and go to state 201

    factor1   go to state 265
    primary1  go to state 206


State 246

  111 factor1: factor1 MULTIPLY • primary1
  113 primary1: • IDENTIFIER
  114         | • INT_NUMBER
  115         | • FLOAT_NUMBER
  116         | • LPAREN PLUS INT_NUMBER RPAREN
  117         | • LPAREN MINUS INT_NUMBER RPAREN
  118         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  119         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  120         | • LPAREN term1 RPAREN
  121         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    LPAREN        shift, and go to state 201

    primary1  go to state 266


State 247

  112 factor1: factor1 DIVIDE • primary1
  113 primary1: • IDENTIFIER
  114         | • INT_NUMBER
  115         | • FLOAT_NUMBER
  116         | • LPAREN PLUS INT_NUMBER RPAREN
  117         | • LPAREN MINUS INT_NUMBER RPAREN
  118         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  119         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  120         | • LPAREN term1 RPAREN
  121         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    LPAREN        shift, and go to state 201

    primary1  go to state 267


State 248

  168 primary3: IDENTIFIER LBRACKET • INT_NUMBER RBRACKET

    INT_NUMBER  shift, and go to state 268


State 249

  163 primary3: LPAREN PLUS • INT_NUMBER RPAREN
  165         | LPAREN PLUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 269
    FLOAT_NUMBER  shift, and go to state 270


State 250

  164 primary3: LPAREN MINUS • INT_NUMBER RPAREN
  166         | LPAREN MINUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 271
    FLOAT_NUMBER  shift, and go to state 272


State 251

  155 term3: term3 • PLUS factor3
  156      | term3 • MINUS factor3
  167 primary3: LPAREN term3 • RPAREN

    PLUS    shift, and go to state 252
    MINUS   shift, and go to state 253
    RPAREN  shift, and go to state 273


State 252

  155 term3: term3 PLUS • factor3
  157 factor3: • primary3
  158        | • factor3 MULTIPLY primary3
  159        | • factor3 DIVIDE primary3
  160 primary3: • IDENTIFIER
  161         | • INT_NUMBER
  162         | • FLOAT_NUMBER
  163         | • LPAREN PLUS INT_NUMBER RPAREN
  164         | • LPAREN MINUS INT_NUMBER RPAREN
  165         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  166         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  167         | • LPAREN term3 RPAREN
  168         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  169         | • STRING_LITERAL
  170         | • CHARACTERE

    IDENTIFIER      shift, and go to state 222
    INT_NUMBER      shift, and go to state 223
    FLOAT_NUMBER    shift, and go to state 224
    CHARACTERE      shift, and go to state 225
    LPAREN          shift, and go to state 226
    STRING_LITERAL  shift, and go to state 227

    factor3   go to state 274
    primary3  go to state 230


State 253

  156 term3: term3 MINUS • factor3
  157 factor3: • primary3
  158        | • factor3 MULTIPLY primary3
  159        | • factor3 DIVIDE primary3
  160 primary3: • IDENTIFIER
  161         | • INT_NUMBER
  162         | • FLOAT_NUMBER
  163         | • LPAREN PLUS INT_NUMBER RPAREN
  164         | • LPAREN MINUS INT_NUMBER RPAREN
  165         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  166         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  167         | • LPAREN term3 RPAREN
  168         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  169         | • STRING_LITERAL
  170         | • CHARACTERE

    IDENTIFIER      shift, and go to state 222
    INT_NUMBER      shift, and go to state 223
    FLOAT_NUMBER    shift, and go to state 224
    CHARACTERE      shift, and go to state 225
    LPAREN          shift, and go to state 226
    STRING_LITERAL  shift, and go to state 227

    factor3   go to state 275
    primary3  go to state 230


State 254

   60 loop: FOR LPAREN assignment_int COLON term3 $@3 • COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE SEMICOLON

    COLON  shift, and go to state 276


State 255

  158 factor3: factor3 MULTIPLY • primary3
  160 primary3: • IDENTIFIER
  161         | • INT_NUMBER
  162         | • FLOAT_NUMBER
  163         | • LPAREN PLUS INT_NUMBER RPAREN
  164         | • LPAREN MINUS INT_NUMBER RPAREN
  165         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  166         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  167         | • LPAREN term3 RPAREN
  168         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  169         | • STRING_LITERAL
  170         | • CHARACTERE

    IDENTIFIER      shift, and go to state 222
    INT_NUMBER      shift, and go to state 223
    FLOAT_NUMBER    shift, and go to state 224
    CHARACTERE      shift, and go to state 225
    LPAREN          shift, and go to state 226
    STRING_LITERAL  shift, and go to state 227

    primary3  go to state 277


State 256

  159 factor3: factor3 DIVIDE • primary3
  160 primary3: • IDENTIFIER
  161         | • INT_NUMBER
  162         | • FLOAT_NUMBER
  163         | • LPAREN PLUS INT_NUMBER RPAREN
  164         | • LPAREN MINUS INT_NUMBER RPAREN
  165         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  166         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  167         | • LPAREN term3 RPAREN
  168         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  169         | • STRING_LITERAL
  170         | • CHARACTERE

    IDENTIFIER      shift, and go to state 222
    INT_NUMBER      shift, and go to state 223
    FLOAT_NUMBER    shift, and go to state 224
    CHARACTERE      shift, and go to state 225
    LPAREN          shift, and go to state 226
    STRING_LITERAL  shift, and go to state 227

    primary3  go to state 278


State 257

   50 condition: IF LPAREN COND RPAREN LBRACE $@1 instruction_section • RBRACE elsebloc SEMICOLON

    RBRACE  shift, and go to state 279


State 258

  121 primary1: IDENTIFIER LBRACKET INT_NUMBER • RBRACKET

    RBRACKET  shift, and go to state 280


State 259

  116 primary1: LPAREN PLUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 281


State 260

  118 primary1: LPAREN PLUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 282


State 261

  117 primary1: LPAREN MINUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 283


State 262

  119 primary1: LPAREN MINUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 284


State 263

  120 primary1: LPAREN term1 RPAREN •

    $default  reduce using rule 120 (primary1)


State 264

  108 term1: term1 PLUS factor1 •  [AND, OR, PLUS, MINUS, RPAREN]
  111 factor1: factor1 • MULTIPLY primary1
  112        | factor1 • DIVIDE primary1

    MULTIPLY  shift, and go to state 246
    DIVIDE    shift, and go to state 247

    $default  reduce using rule 108 (term1)


State 265

  109 term1: term1 MINUS factor1 •  [AND, OR, PLUS, MINUS, RPAREN]
  111 factor1: factor1 • MULTIPLY primary1
  112        | factor1 • DIVIDE primary1

    MULTIPLY  shift, and go to state 246
    DIVIDE    shift, and go to state 247

    $default  reduce using rule 109 (term1)


State 266

  111 factor1: factor1 MULTIPLY primary1 •

    $default  reduce using rule 111 (factor1)


State 267

  112 factor1: factor1 DIVIDE primary1 •

    $default  reduce using rule 112 (factor1)


State 268

  168 primary3: IDENTIFIER LBRACKET INT_NUMBER • RBRACKET

    RBRACKET  shift, and go to state 285


State 269

  163 primary3: LPAREN PLUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 286


State 270

  165 primary3: LPAREN PLUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 287


State 271

  164 primary3: LPAREN MINUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 288


State 272

  166 primary3: LPAREN MINUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 289


State 273

  167 primary3: LPAREN term3 RPAREN •

    $default  reduce using rule 167 (primary3)


State 274

  155 term3: term3 PLUS factor3 •  [PLUS, MINUS, RPAREN, COLON]
  158 factor3: factor3 • MULTIPLY primary3
  159        | factor3 • DIVIDE primary3

    MULTIPLY  shift, and go to state 255
    DIVIDE    shift, and go to state 256

    $default  reduce using rule 155 (term3)


State 275

  156 term3: term3 MINUS factor3 •  [PLUS, MINUS, RPAREN, COLON]
  158 factor3: factor3 • MULTIPLY primary3
  159        | factor3 • DIVIDE primary3

    MULTIPLY  shift, and go to state 255
    DIVIDE    shift, and go to state 256

    $default  reduce using rule 156 (term3)


State 276

   60 loop: FOR LPAREN assignment_int COLON term3 $@3 COLON • term4 $@4 RPAREN LBRACE instruction_section RBRACE SEMICOLON
  137 term4: • factor4
  138      | • term4 PLUS factor4
  139      | • term4 MINUS factor4
  140 factor4: • primary4
  141        | • factor4 MULTIPLY primary4
  142        | • factor4 DIVIDE primary4
  143 primary4: • IDENTIFIER
  144         | • INT_NUMBER
  145         | • FLOAT_NUMBER
  146         | • LPAREN PLUS INT_NUMBER RPAREN
  147         | • LPAREN MINUS INT_NUMBER RPAREN
  148         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  149         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  150         | • LPAREN term4 RPAREN
  151         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  152         | • STRING_LITERAL
  153         | • CHARACTERE

    IDENTIFIER      shift, and go to state 290
    INT_NUMBER      shift, and go to state 291
    FLOAT_NUMBER    shift, and go to state 292
    CHARACTERE      shift, and go to state 293
    LPAREN          shift, and go to state 294
    STRING_LITERAL  shift, and go to state 295

    term4     go to state 296
    factor4   go to state 297
    primary4  go to state 298


State 277

  158 factor3: factor3 MULTIPLY primary3 •

    $default  reduce using rule 158 (factor3)


State 278

  159 factor3: factor3 DIVIDE primary3 •

    $default  reduce using rule 159 (factor3)


State 279

   50 condition: IF LPAREN COND RPAREN LBRACE $@1 instruction_section RBRACE • elsebloc SEMICOLON
   52 elsebloc: • ELSE LBRACE $@2 instruction_section RBRACE
   53         | ε •  [SEMICOLON]

    ELSE  shift, and go to state 299

    $default  reduce using rule 53 (elsebloc)

    elsebloc  go to state 300


State 280

  121 primary1: IDENTIFIER LBRACKET INT_NUMBER RBRACKET •

    $default  reduce using rule 121 (primary1)


State 281

  116 primary1: LPAREN PLUS INT_NUMBER RPAREN •

    $default  reduce using rule 116 (primary1)


State 282

  118 primary1: LPAREN PLUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 118 (primary1)


State 283

  117 primary1: LPAREN MINUS INT_NUMBER RPAREN •

    $default  reduce using rule 117 (primary1)


State 284

  119 primary1: LPAREN MINUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 119 (primary1)


State 285

  168 primary3: IDENTIFIER LBRACKET INT_NUMBER RBRACKET •

    $default  reduce using rule 168 (primary3)


State 286

  163 primary3: LPAREN PLUS INT_NUMBER RPAREN •

    $default  reduce using rule 163 (primary3)


State 287

  165 primary3: LPAREN PLUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 165 (primary3)


State 288

  164 primary3: LPAREN MINUS INT_NUMBER RPAREN •

    $default  reduce using rule 164 (primary3)


State 289

  166 primary3: LPAREN MINUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 166 (primary3)


State 290

  143 primary4: IDENTIFIER •  [PLUS, MINUS, MULTIPLY, DIVIDE, RPAREN]
  151         | IDENTIFIER • LBRACKET INT_NUMBER RBRACKET

    LBRACKET  shift, and go to state 301

    $default  reduce using rule 143 (primary4)


State 291

  144 primary4: INT_NUMBER •

    $default  reduce using rule 144 (primary4)


State 292

  145 primary4: FLOAT_NUMBER •

    $default  reduce using rule 145 (primary4)


State 293

  153 primary4: CHARACTERE •

    $default  reduce using rule 153 (primary4)


State 294

  137 term4: • factor4
  138      | • term4 PLUS factor4
  139      | • term4 MINUS factor4
  140 factor4: • primary4
  141        | • factor4 MULTIPLY primary4
  142        | • factor4 DIVIDE primary4
  143 primary4: • IDENTIFIER
  144         | • INT_NUMBER
  145         | • FLOAT_NUMBER
  146         | • LPAREN PLUS INT_NUMBER RPAREN
  146         | LPAREN • PLUS INT_NUMBER RPAREN
  147         | • LPAREN MINUS INT_NUMBER RPAREN
  147         | LPAREN • MINUS INT_NUMBER RPAREN
  148         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  148         | LPAREN • PLUS FLOAT_NUMBER RPAREN
  149         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  149         | LPAREN • MINUS FLOAT_NUMBER RPAREN
  150         | • LPAREN term4 RPAREN
  150         | LPAREN • term4 RPAREN
  151         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  152         | • STRING_LITERAL
  153         | • CHARACTERE

    IDENTIFIER      shift, and go to state 290
    INT_NUMBER      shift, and go to state 291
    FLOAT_NUMBER    shift, and go to state 292
    CHARACTERE      shift, and go to state 293
    PLUS            shift, and go to state 302
    MINUS           shift, and go to state 303
    LPAREN          shift, and go to state 294
    STRING_LITERAL  shift, and go to state 295

    term4     go to state 304
    factor4   go to state 297
    primary4  go to state 298


State 295

  152 primary4: STRING_LITERAL •

    $default  reduce using rule 152 (primary4)


State 296

   59 $@4: ε •  [RPAREN]
   60 loop: FOR LPAREN assignment_int COLON term3 $@3 COLON term4 • $@4 RPAREN LBRACE instruction_section RBRACE SEMICOLON
  138 term4: term4 • PLUS factor4
  139      | term4 • MINUS factor4

    PLUS   shift, and go to state 305
    MINUS  shift, and go to state 306

    $default  reduce using rule 59 ($@4)

    $@4  go to state 307


State 297

  137 term4: factor4 •  [PLUS, MINUS, RPAREN]
  141 factor4: factor4 • MULTIPLY primary4
  142        | factor4 • DIVIDE primary4

    MULTIPLY  shift, and go to state 308
    DIVIDE    shift, and go to state 309

    $default  reduce using rule 137 (term4)


State 298

  140 factor4: primary4 •

    $default  reduce using rule 140 (factor4)


State 299

   52 elsebloc: ELSE • LBRACE $@2 instruction_section RBRACE

    LBRACE  shift, and go to state 310


State 300

   50 condition: IF LPAREN COND RPAREN LBRACE $@1 instruction_section RBRACE elsebloc • SEMICOLON

    SEMICOLON  shift, and go to state 311


State 301

  151 primary4: IDENTIFIER LBRACKET • INT_NUMBER RBRACKET

    INT_NUMBER  shift, and go to state 312


State 302

  146 primary4: LPAREN PLUS • INT_NUMBER RPAREN
  148         | LPAREN PLUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 313
    FLOAT_NUMBER  shift, and go to state 314


State 303

  147 primary4: LPAREN MINUS • INT_NUMBER RPAREN
  149         | LPAREN MINUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 315
    FLOAT_NUMBER  shift, and go to state 316


State 304

  138 term4: term4 • PLUS factor4
  139      | term4 • MINUS factor4
  150 primary4: LPAREN term4 • RPAREN

    PLUS    shift, and go to state 305
    MINUS   shift, and go to state 306
    RPAREN  shift, and go to state 317


State 305

  138 term4: term4 PLUS • factor4
  140 factor4: • primary4
  141        | • factor4 MULTIPLY primary4
  142        | • factor4 DIVIDE primary4
  143 primary4: • IDENTIFIER
  144         | • INT_NUMBER
  145         | • FLOAT_NUMBER
  146         | • LPAREN PLUS INT_NUMBER RPAREN
  147         | • LPAREN MINUS INT_NUMBER RPAREN
  148         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  149         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  150         | • LPAREN term4 RPAREN
  151         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  152         | • STRING_LITERAL
  153         | • CHARACTERE

    IDENTIFIER      shift, and go to state 290
    INT_NUMBER      shift, and go to state 291
    FLOAT_NUMBER    shift, and go to state 292
    CHARACTERE      shift, and go to state 293
    LPAREN          shift, and go to state 294
    STRING_LITERAL  shift, and go to state 295

    factor4   go to state 318
    primary4  go to state 298


State 306

  139 term4: term4 MINUS • factor4
  140 factor4: • primary4
  141        | • factor4 MULTIPLY primary4
  142        | • factor4 DIVIDE primary4
  143 primary4: • IDENTIFIER
  144         | • INT_NUMBER
  145         | • FLOAT_NUMBER
  146         | • LPAREN PLUS INT_NUMBER RPAREN
  147         | • LPAREN MINUS INT_NUMBER RPAREN
  148         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  149         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  150         | • LPAREN term4 RPAREN
  151         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  152         | • STRING_LITERAL
  153         | • CHARACTERE

    IDENTIFIER      shift, and go to state 290
    INT_NUMBER      shift, and go to state 291
    FLOAT_NUMBER    shift, and go to state 292
    CHARACTERE      shift, and go to state 293
    LPAREN          shift, and go to state 294
    STRING_LITERAL  shift, and go to state 295

    factor4   go to state 319
    primary4  go to state 298


State 307

   60 loop: FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 • RPAREN LBRACE instruction_section RBRACE SEMICOLON

    RPAREN  shift, and go to state 320


State 308

  141 factor4: factor4 MULTIPLY • primary4
  143 primary4: • IDENTIFIER
  144         | • INT_NUMBER
  145         | • FLOAT_NUMBER
  146         | • LPAREN PLUS INT_NUMBER RPAREN
  147         | • LPAREN MINUS INT_NUMBER RPAREN
  148         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  149         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  150         | • LPAREN term4 RPAREN
  151         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  152         | • STRING_LITERAL
  153         | • CHARACTERE

    IDENTIFIER      shift, and go to state 290
    INT_NUMBER      shift, and go to state 291
    FLOAT_NUMBER    shift, and go to state 292
    CHARACTERE      shift, and go to state 293
    LPAREN          shift, and go to state 294
    STRING_LITERAL  shift, and go to state 295

    primary4  go to state 321


State 309

  142 factor4: factor4 DIVIDE • primary4
  143 primary4: • IDENTIFIER
  144         | • INT_NUMBER
  145         | • FLOAT_NUMBER
  146         | • LPAREN PLUS INT_NUMBER RPAREN
  147         | • LPAREN MINUS INT_NUMBER RPAREN
  148         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  149         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  150         | • LPAREN term4 RPAREN
  151         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  152         | • STRING_LITERAL
  153         | • CHARACTERE

    IDENTIFIER      shift, and go to state 290
    INT_NUMBER      shift, and go to state 291
    FLOAT_NUMBER    shift, and go to state 292
    CHARACTERE      shift, and go to state 293
    LPAREN          shift, and go to state 294
    STRING_LITERAL  shift, and go to state 295

    primary4  go to state 322


State 310

   51 $@2: ε •
   52 elsebloc: ELSE LBRACE • $@2 instruction_section RBRACE

    $default  reduce using rule 51 ($@2)

    $@2  go to state 323


State 311

   50 condition: IF LPAREN COND RPAREN LBRACE $@1 instruction_section RBRACE elsebloc SEMICOLON •

    $default  reduce using rule 50 (condition)


State 312

  151 primary4: IDENTIFIER LBRACKET INT_NUMBER • RBRACKET

    RBRACKET  shift, and go to state 324


State 313

  146 primary4: LPAREN PLUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 325


State 314

  148 primary4: LPAREN PLUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 326


State 315

  147 primary4: LPAREN MINUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 327


State 316

  149 primary4: LPAREN MINUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 328


State 317

  150 primary4: LPAREN term4 RPAREN •

    $default  reduce using rule 150 (primary4)


State 318

  138 term4: term4 PLUS factor4 •  [PLUS, MINUS, RPAREN]
  141 factor4: factor4 • MULTIPLY primary4
  142        | factor4 • DIVIDE primary4

    MULTIPLY  shift, and go to state 308
    DIVIDE    shift, and go to state 309

    $default  reduce using rule 138 (term4)


State 319

  139 term4: term4 MINUS factor4 •  [PLUS, MINUS, RPAREN]
  141 factor4: factor4 • MULTIPLY primary4
  142        | factor4 • DIVIDE primary4

    MULTIPLY  shift, and go to state 308
    DIVIDE    shift, and go to state 309

    $default  reduce using rule 139 (term4)


State 320

   60 loop: FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN • LBRACE instruction_section RBRACE SEMICOLON

    LBRACE  shift, and go to state 329


State 321

  141 factor4: factor4 MULTIPLY primary4 •

    $default  reduce using rule 141 (factor4)


State 322

  142 factor4: factor4 DIVIDE primary4 •

    $default  reduce using rule 142 (factor4)


State 323

    9 instruction_section: • statement
   10                    | • statement instruction_section
   18 statement: • assignment
   19          | • condition
   20          | • loop
   21          | • io_statement
   22          | • assignment_int
   23 assignment: • MDROIT EQUALS term SEMICOLON
   24           | • TAB EQUALS term SEMICOLON
   25           | • TAB EQUALS EXPRESSION_CHAR SEMICOLON
   26           | • MDROIT EQUALS EXPRESSION_CHAR SEMICOLON
   27 MDROIT: • IDENTIFIER
   28 TAB: ε •  [EQUALS]
   29    | • IDENTIFIER LBRACKET termtab RBRACKET
   50 condition: • IF LPAREN COND RPAREN LBRACE $@1 instruction_section RBRACE elsebloc SEMICOLON
   52 elsebloc: ELSE LBRACE $@2 • instruction_section RBRACE
   54 assignment_int: • MDROIT EQUALS term
   55               | • TAB EQUALS term
   56               | • TAB EQUALS EXPRESSION_CHAR
   57               | • MDROIT EQUALS EXPRESSION_CHAR
   60 loop: • FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE SEMICOLON
   61 io_statement: • READ LPAREN IDENTIFIER RPAREN SEMICOLON
   62             | • WRITE LPAREN io_expr_list RPAREN SEMICOLON

    IF          shift, and go to state 98
    FOR         shift, and go to state 99
    READ        shift, and go to state 100
    WRITE       shift, and go to state 101
    IDENTIFIER  shift, and go to state 102

    $default  reduce using rule 28 (TAB)

    instruction_section  go to state 330
    statement            go to state 104
    assignment           go to state 105
    MDROIT               go to state 106
    TAB                  go to state 107
    condition            go to state 108
    assignment_int       go to state 109
    loop                 go to state 110
    io_statement         go to state 111


State 324

  151 primary4: IDENTIFIER LBRACKET INT_NUMBER RBRACKET •

    $default  reduce using rule 151 (primary4)


State 325

  146 primary4: LPAREN PLUS INT_NUMBER RPAREN •

    $default  reduce using rule 146 (primary4)


State 326

  148 primary4: LPAREN PLUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 148 (primary4)


State 327

  147 primary4: LPAREN MINUS INT_NUMBER RPAREN •

    $default  reduce using rule 147 (primary4)


State 328

  149 primary4: LPAREN MINUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 149 (primary4)


State 329

    9 instruction_section: • statement
   10                    | • statement instruction_section
   18 statement: • assignment
   19          | • condition
   20          | • loop
   21          | • io_statement
   22          | • assignment_int
   23 assignment: • MDROIT EQUALS term SEMICOLON
   24           | • TAB EQUALS term SEMICOLON
   25           | • TAB EQUALS EXPRESSION_CHAR SEMICOLON
   26           | • MDROIT EQUALS EXPRESSION_CHAR SEMICOLON
   27 MDROIT: • IDENTIFIER
   28 TAB: ε •  [EQUALS]
   29    | • IDENTIFIER LBRACKET termtab RBRACKET
   50 condition: • IF LPAREN COND RPAREN LBRACE $@1 instruction_section RBRACE elsebloc SEMICOLON
   54 assignment_int: • MDROIT EQUALS term
   55               | • TAB EQUALS term
   56               | • TAB EQUALS EXPRESSION_CHAR
   57               | • MDROIT EQUALS EXPRESSION_CHAR
   60 loop: • FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE SEMICOLON
   60     | FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE • instruction_section RBRACE SEMICOLON
   61 io_statement: • READ LPAREN IDENTIFIER RPAREN SEMICOLON
   62             | • WRITE LPAREN io_expr_list RPAREN SEMICOLON

    IF          shift, and go to state 98
    FOR         shift, and go to state 99
    READ        shift, and go to state 100
    WRITE       shift, and go to state 101
    IDENTIFIER  shift, and go to state 102

    $default  reduce using rule 28 (TAB)

    instruction_section  go to state 331
    statement            go to state 104
    assignment           go to state 105
    MDROIT               go to state 106
    TAB                  go to state 107
    condition            go to state 108
    assignment_int       go to state 109
    loop                 go to state 110
    io_statement         go to state 111


State 330

   52 elsebloc: ELSE LBRACE $@2 instruction_section • RBRACE

    RBRACE  shift, and go to state 332


State 331

   60 loop: FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section • RBRACE SEMICOLON

    RBRACE  shift, and go to state 333


State 332

   52 elsebloc: ELSE LBRACE $@2 instruction_section RBRACE •

    $default  reduce using rule 52 (elsebloc)


State 333

   60 loop: FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE • SEMICOLON

    SEMICOLON  shift, and go to state 334


State 334

   60 loop: FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE SEMICOLON •

    $default  reduce using rule 60 (loop)
