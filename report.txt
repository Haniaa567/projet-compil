State 151 conflicts: 6 reduce/reduce
State 152 conflicts: 6 reduce/reduce
State 153 conflicts: 6 reduce/reduce
State 154 conflicts: 6 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: VAR_GLOBAL LBRACE global_var_section RBRACE DECLARATION LBRACE declaration_section RBRACE INSTRUCTION LBRACE instruction_section RBRACE

    2 type: INTEGER
    3     | FLOAT
    4     | CHAR

    5 global_var_section: declaration SEMICOLON
    6                   | declaration SEMICOLON global_var_section
    7                   | declaration

    8 declaration_section: declaration SEMICOLON
    9                    | declaration SEMICOLON global_var_section
   10                    | declaration

   11 instruction_section: statement
   12                    | statement instruction_section

   13 declaration: type variable_list
   14            | CONST type cst EQUALS term

   15 cst: IDENTIFIER

   16 variable_list: IDENTIFIER
   17              | IDENTIFIER LBRACKET termtab RBRACKET
   18              | IDENTIFIER COMMA variable_list
   19              | IDENTIFIER LBRACKET termtab RBRACKET COMMA variable_list

   20 statement: assignment SEMICOLON
   21          | condition SEMICOLON
   22          | loop SEMICOLON
   23          | io_statement SEMICOLON
   24          | assignment_int
   25          | assignment
   26          | condition
   27          | loop
   28          | io_statement

   29 assignment: MDROIT EQUALS term
   30           | TAB EQUALS term
   31           | TAB EQUALS EXPRESSION_CHAR
   32           | MDROIT EQUALS EXPRESSION_CHAR

   33 MDROIT: IDENTIFIER

   34 TAB: IDENTIFIER LBRACKET termtab RBRACKET

   35 termtab: factortab
   36        | termtab PLUS factortab
   37        | termtab MINUS factortab

   38 factortab: primarytab
   39          | factortab MULTIPLY primarytab
   40          | factortab DIVIDE primarytab

   41 primarytab: IDENTIFIER
   42           | INT_NUMBER
   43           | FLOAT_NUMBER
   44           | LPAREN PLUS INT_NUMBER RPAREN
   45           | LPAREN MINUS INT_NUMBER RPAREN
   46           | LPAREN PLUS FLOAT_NUMBER RPAREN
   47           | LPAREN MINUS FLOAT_NUMBER RPAREN
   48           | LPAREN termtab RPAREN
   49           | IDENTIFIER LBRACKET termtab RBRACKET
   50           | CHARACTERE
   51           | STRING_LITERAL

   52 EXPRESSION_CHAR: CHARACTERE
   53                | STRING_LITERAL

   54 $@1: ε

   55 condition: IF LPAREN COND RPAREN LBRACE $@1 instruction_section RBRACE elsebloc

   56 $@2: ε

   57 elsebloc: ELSE LBRACE $@2 instruction_section RBRACE
   58         | ε

   59 assignment_int: MDROIT EQUALS term
   60               | TAB EQUALS term
   61               | TAB EQUALS EXPRESSION_CHAR
   62               | MDROIT EQUALS EXPRESSION_CHAR

   63 $@3: ε

   64 $@4: ε

   65 loop: FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE

   66 io_statement: READ LPAREN IDENTIFIER RPAREN
   67             | WRITE LPAREN io_expr_list RPAREN

   68 io_expr_list: io_expr
   69             | io_expr COMMA io_expr_list

   70 io_expr: IDENTIFIER
   71        | STRING_LITERAL

   72 COND: COND OR AND_EXPR
   73     | AND_EXPR

   74 AND_EXPR: AND_EXPR AND NOT_EXPR
   75         | NOT_EXPR

   76 NOT_EXPR: NOT NOT_EXPR
   77         | comparison_expr

   78 comparison_expr: term2 GT term1
   79                | term2 LT term1
   80                | term2 EQ term1
   81                | term2 GEQ term1
   82                | term2 LEQ term1
   83                | term2 NEQ term1
   84                | DROIT OP_COMP term1
   85                | term2 OP_COMP GAUCHE
   86                | DROIT OP_COMP GAUCHE

   87 DROIT: CHARACTERE
   88      | STRING_LITERAL

   89 GAUCHE: CHARACTERE
   90       | STRING_LITERAL

   91 OP_COMP: GT
   92        | LT
   93        | GEQ
   94        | LEQ
   95        | EQ
   96        | NEQ

   97 term: factor
   98     | term PLUS factor
   99     | term MINUS factor

  100 factor: primary
  101       | factor MULTIPLY primary
  102       | factor DIVIDE primary

  103 primary: IDENTIFIER
  104        | INT_NUMBER
  105        | FLOAT_NUMBER
  106        | LPAREN PLUS INT_NUMBER RPAREN
  107        | LPAREN MINUS INT_NUMBER RPAREN
  108        | LPAREN PLUS FLOAT_NUMBER RPAREN
  109        | LPAREN MINUS FLOAT_NUMBER RPAREN
  110        | LPAREN term RPAREN
  111        | IDENTIFIER LBRACKET INT_NUMBER RBRACKET

  112 term1: factor1
  113      | term1 PLUS factor1
  114      | term1 MINUS factor1

  115 factor1: primary1
  116        | factor1 MULTIPLY primary1
  117        | factor1 DIVIDE primary1

  118 primary1: IDENTIFIER
  119         | INT_NUMBER
  120         | FLOAT_NUMBER
  121         | LPAREN PLUS INT_NUMBER RPAREN
  122         | LPAREN MINUS INT_NUMBER RPAREN
  123         | LPAREN PLUS FLOAT_NUMBER RPAREN
  124         | LPAREN MINUS FLOAT_NUMBER RPAREN
  125         | LPAREN term1 RPAREN
  126         | IDENTIFIER LBRACKET INT_NUMBER RBRACKET

  127 term2: factor2
  128      | term2 PLUS factor2
  129      | term2 MINUS factor2

  130 factor2: primary2
  131        | factor2 MULTIPLY primary2
  132        | factor2 DIVIDE primary2

  133 primary2: IDENTIFIER
  134         | INT_NUMBER
  135         | FLOAT_NUMBER
  136         | LPAREN PLUS INT_NUMBER RPAREN
  137         | LPAREN MINUS INT_NUMBER RPAREN
  138         | LPAREN PLUS FLOAT_NUMBER RPAREN
  139         | LPAREN MINUS FLOAT_NUMBER RPAREN
  140         | LPAREN term2 RPAREN
  141         | IDENTIFIER LBRACKET INT_NUMBER RBRACKET

  142 term4: factor4
  143      | term4 PLUS factor4
  144      | term4 MINUS factor4

  145 factor4: primary4
  146        | factor4 MULTIPLY primary4
  147        | factor4 DIVIDE primary4

  148 primary4: IDENTIFIER
  149         | INT_NUMBER
  150         | FLOAT_NUMBER
  151         | LPAREN PLUS INT_NUMBER RPAREN
  152         | LPAREN MINUS INT_NUMBER RPAREN
  153         | LPAREN PLUS FLOAT_NUMBER RPAREN
  154         | LPAREN MINUS FLOAT_NUMBER RPAREN
  155         | LPAREN term4 RPAREN
  156         | IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  157         | STRING_LITERAL
  158         | CHARACTERE

  159 term3: factor3
  160      | term3 PLUS factor3
  161      | term3 MINUS factor3

  162 factor3: primary3
  163        | factor3 MULTIPLY primary3
  164        | factor3 DIVIDE primary3

  165 primary3: IDENTIFIER
  166         | INT_NUMBER
  167         | FLOAT_NUMBER
  168         | LPAREN PLUS INT_NUMBER RPAREN
  169         | LPAREN MINUS INT_NUMBER RPAREN
  170         | LPAREN PLUS FLOAT_NUMBER RPAREN
  171         | LPAREN MINUS FLOAT_NUMBER RPAREN
  172         | LPAREN term3 RPAREN
  173         | IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  174         | STRING_LITERAL
  175         | CHARACTERE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    VAR_GLOBAL (258) 1
    DECLARATION (259) 1
    INSTRUCTION (260) 1
    INTEGER (261) 2
    FLOAT (262) 3
    CHAR (263) 4
    CONST (264) 14
    IF (265) 55
    ELSE (266) 57
    FOR (267) 65
    READ (268) 66
    WRITE (269) 67
    IDENTIFIER <string> (270) 15 16 17 18 19 33 34 41 49 66 70 103 111 118 126 133 141 148 156 165 173
    INT_NUMBER <string> (271) 42 44 45 104 106 107 111 119 121 122 126 134 136 137 141 149 151 152 156 166 168 169 173
    FLOAT_NUMBER <string> (272) 43 46 47 105 108 109 120 123 124 135 138 139 150 153 154 167 170 171
    CHARACTERE <string> (273) 50 52 87 89 158 175
    AND (274) 74
    OR (275) 72
    NOT (276) 76
    EQ (277) 80 95
    NEQ (278) 83 96
    GEQ (279) 81 93
    LT (280) 79 92
    LEQ (281) 82 94
    GT (282) 78 91
    EQUALS (283) 14 29 30 31 32 59 60 61 62
    PLUS (284) 36 44 46 98 106 108 113 121 123 128 136 138 143 151 153 160 168 170
    MINUS (285) 37 45 47 99 107 109 114 122 124 129 137 139 144 152 154 161 169 171
    MULTIPLY (286) 39 101 116 131 146 163
    DIVIDE (287) 40 102 117 132 147 164
    LBRACE (288) 1 55 57 65
    RBRACE (289) 1 55 57 65
    LPAREN (290) 44 45 46 47 48 55 65 66 67 106 107 108 109 110 121 122 123 124 125 136 137 138 139 140 151 152 153 154 155 168 169 170 171 172
    RPAREN (291) 44 45 46 47 48 55 65 66 67 106 107 108 109 110 121 122 123 124 125 136 137 138 139 140 151 152 153 154 155 168 169 170 171 172
    LBRACKET (292) 17 19 34 49 111 126 141 156 173
    RBRACKET (293) 17 19 34 49 111 126 141 156 173
    SEMICOLON (294) 5 6 8 9 20 21 22 23
    COMMA (295) 18 19 69
    COLON (296) 65
    STRING_LITERAL <string> (297) 51 53 71 88 90 157 174


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    program (44)
        on left: 1
        on right: 0
    type (45)
        on left: 2 3 4
        on right: 13 14
    global_var_section (46)
        on left: 5 6 7
        on right: 1 6 9
    declaration_section (47)
        on left: 8 9 10
        on right: 1
    instruction_section (48)
        on left: 11 12
        on right: 1 12 55 57 65
    declaration (49)
        on left: 13 14
        on right: 5 6 7 8 9 10
    cst <string> (50)
        on left: 15
        on right: 14
    variable_list (51)
        on left: 16 17 18 19
        on right: 13 18 19
    statement (52)
        on left: 20 21 22 23 24 25 26 27 28
        on right: 11 12
    assignment <string> (53)
        on left: 29 30 31 32
        on right: 20 25
    MDROIT (54)
        on left: 33
        on right: 29 32 59 62
    TAB (55)
        on left: 34
        on right: 30 31 60 61
    termtab <real> (56)
        on left: 35 36 37
        on right: 17 19 34 36 37 48 49
    factortab <real> (57)
        on left: 38 39 40
        on right: 35 36 37 39 40
    primarytab <real> (58)
        on left: 41 42 43 44 45 46 47 48 49 50 51
        on right: 38 39 40
    EXPRESSION_CHAR (59)
        on left: 52 53
        on right: 31 32 61 62
    condition (60)
        on left: 55
        on right: 21 26
    $@1 (61)
        on left: 54
        on right: 55
    elsebloc (62)
        on left: 57 58
        on right: 55
    $@2 (63)
        on left: 56
        on right: 57
    assignment_int (64)
        on left: 59 60 61 62
        on right: 24 65
    loop (65)
        on left: 65
        on right: 22 27
    $@3 (66)
        on left: 63
        on right: 65
    $@4 (67)
        on left: 64
        on right: 65
    io_statement (68)
        on left: 66 67
        on right: 23 28
    io_expr_list (69)
        on left: 68 69
        on right: 67 69
    io_expr (70)
        on left: 70 71
        on right: 68 69
    COND <string> (71)
        on left: 72 73
        on right: 55 72
    AND_EXPR <string> (72)
        on left: 74 75
        on right: 72 73 74
    NOT_EXPR <string> (73)
        on left: 76 77
        on right: 74 75 76
    comparison_expr <string> (74)
        on left: 78 79 80 81 82 83 84 85 86
        on right: 77
    DROIT <string> (75)
        on left: 87 88
        on right: 84 86
    GAUCHE <string> (76)
        on left: 89 90
        on right: 85 86
    OP_COMP <string> (77)
        on left: 91 92 93 94 95 96
        on right: 84 85 86
    term <real> (78)
        on left: 97 98 99
        on right: 14 29 30 59 60 98 99 110
    factor <real> (79)
        on left: 100 101 102
        on right: 97 98 99 101 102
    primary <real> (80)
        on left: 103 104 105 106 107 108 109 110 111
        on right: 100 101 102
    term1 <real> (81)
        on left: 112 113 114
        on right: 78 79 80 81 82 83 84 113 114 125
    factor1 <real> (82)
        on left: 115 116 117
        on right: 112 113 114 116 117
    primary1 <real> (83)
        on left: 118 119 120 121 122 123 124 125 126
        on right: 115 116 117
    term2 <real> (84)
        on left: 127 128 129
        on right: 78 79 80 81 82 83 85 128 129 140
    factor2 <real> (85)
        on left: 130 131 132
        on right: 127 128 129 131 132
    primary2 <real> (86)
        on left: 133 134 135 136 137 138 139 140 141
        on right: 130 131 132
    term4 <real> (87)
        on left: 142 143 144
        on right: 65 143 144 155
    factor4 <real> (88)
        on left: 145 146 147
        on right: 142 143 144 146 147
    primary4 <real> (89)
        on left: 148 149 150 151 152 153 154 155 156 157 158
        on right: 145 146 147
    term3 <real> (90)
        on left: 159 160 161
        on right: 65 160 161 172
    factor3 <real> (91)
        on left: 162 163 164
        on right: 159 160 161 163 164
    primary3 <real> (92)
        on left: 165 166 167 168 169 170 171 172 173 174 175
        on right: 162 163 164


State 0

    0 $accept: • program $end
    1 program: • VAR_GLOBAL LBRACE global_var_section RBRACE DECLARATION LBRACE declaration_section RBRACE INSTRUCTION LBRACE instruction_section RBRACE

    VAR_GLOBAL  shift, and go to state 1

    program  go to state 2


State 1

    1 program: VAR_GLOBAL • LBRACE global_var_section RBRACE DECLARATION LBRACE declaration_section RBRACE INSTRUCTION LBRACE instruction_section RBRACE

    LBRACE  shift, and go to state 3


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: VAR_GLOBAL LBRACE • global_var_section RBRACE DECLARATION LBRACE declaration_section RBRACE INSTRUCTION LBRACE instruction_section RBRACE
    2 type: • INTEGER
    3     | • FLOAT
    4     | • CHAR
    5 global_var_section: • declaration SEMICOLON
    6                   | • declaration SEMICOLON global_var_section
    7                   | • declaration
   13 declaration: • type variable_list
   14            | • CONST type cst EQUALS term

    INTEGER  shift, and go to state 5
    FLOAT    shift, and go to state 6
    CHAR     shift, and go to state 7
    CONST    shift, and go to state 8

    type                go to state 9
    global_var_section  go to state 10
    declaration         go to state 11


State 4

    0 $accept: program $end •

    $default  accept


State 5

    2 type: INTEGER •

    $default  reduce using rule 2 (type)


State 6

    3 type: FLOAT •

    $default  reduce using rule 3 (type)


State 7

    4 type: CHAR •

    $default  reduce using rule 4 (type)


State 8

    2 type: • INTEGER
    3     | • FLOAT
    4     | • CHAR
   14 declaration: CONST • type cst EQUALS term

    INTEGER  shift, and go to state 5
    FLOAT    shift, and go to state 6
    CHAR     shift, and go to state 7

    type  go to state 12


State 9

   13 declaration: type • variable_list
   16 variable_list: • IDENTIFIER
   17              | • IDENTIFIER LBRACKET termtab RBRACKET
   18              | • IDENTIFIER COMMA variable_list
   19              | • IDENTIFIER LBRACKET termtab RBRACKET COMMA variable_list

    IDENTIFIER  shift, and go to state 13

    variable_list  go to state 14


State 10

    1 program: VAR_GLOBAL LBRACE global_var_section • RBRACE DECLARATION LBRACE declaration_section RBRACE INSTRUCTION LBRACE instruction_section RBRACE

    RBRACE  shift, and go to state 15


State 11

    5 global_var_section: declaration • SEMICOLON
    6                   | declaration • SEMICOLON global_var_section
    7                   | declaration •  [RBRACE]

    SEMICOLON  shift, and go to state 16

    $default  reduce using rule 7 (global_var_section)


State 12

   14 declaration: CONST type • cst EQUALS term
   15 cst: • IDENTIFIER

    IDENTIFIER  shift, and go to state 17

    cst  go to state 18


State 13

   16 variable_list: IDENTIFIER •  [RBRACE, SEMICOLON]
   17              | IDENTIFIER • LBRACKET termtab RBRACKET
   18              | IDENTIFIER • COMMA variable_list
   19              | IDENTIFIER • LBRACKET termtab RBRACKET COMMA variable_list

    LBRACKET  shift, and go to state 19
    COMMA     shift, and go to state 20

    $default  reduce using rule 16 (variable_list)


State 14

   13 declaration: type variable_list •

    $default  reduce using rule 13 (declaration)


State 15

    1 program: VAR_GLOBAL LBRACE global_var_section RBRACE • DECLARATION LBRACE declaration_section RBRACE INSTRUCTION LBRACE instruction_section RBRACE

    DECLARATION  shift, and go to state 21


State 16

    2 type: • INTEGER
    3     | • FLOAT
    4     | • CHAR
    5 global_var_section: • declaration SEMICOLON
    5                   | declaration SEMICOLON •  [RBRACE]
    6                   | • declaration SEMICOLON global_var_section
    6                   | declaration SEMICOLON • global_var_section
    7                   | • declaration
   13 declaration: • type variable_list
   14            | • CONST type cst EQUALS term

    INTEGER  shift, and go to state 5
    FLOAT    shift, and go to state 6
    CHAR     shift, and go to state 7
    CONST    shift, and go to state 8

    $default  reduce using rule 5 (global_var_section)

    type                go to state 9
    global_var_section  go to state 22
    declaration         go to state 11


State 17

   15 cst: IDENTIFIER •

    $default  reduce using rule 15 (cst)


State 18

   14 declaration: CONST type cst • EQUALS term

    EQUALS  shift, and go to state 23


State 19

   17 variable_list: IDENTIFIER LBRACKET • termtab RBRACKET
   19              | IDENTIFIER LBRACKET • termtab RBRACKET COMMA variable_list
   35 termtab: • factortab
   36        | • termtab PLUS factortab
   37        | • termtab MINUS factortab
   38 factortab: • primarytab
   39          | • factortab MULTIPLY primarytab
   40          | • factortab DIVIDE primarytab
   41 primarytab: • IDENTIFIER
   42           | • INT_NUMBER
   43           | • FLOAT_NUMBER
   44           | • LPAREN PLUS INT_NUMBER RPAREN
   45           | • LPAREN MINUS INT_NUMBER RPAREN
   46           | • LPAREN PLUS FLOAT_NUMBER RPAREN
   47           | • LPAREN MINUS FLOAT_NUMBER RPAREN
   48           | • LPAREN termtab RPAREN
   49           | • IDENTIFIER LBRACKET termtab RBRACKET
   50           | • CHARACTERE
   51           | • STRING_LITERAL

    IDENTIFIER      shift, and go to state 24
    INT_NUMBER      shift, and go to state 25
    FLOAT_NUMBER    shift, and go to state 26
    CHARACTERE      shift, and go to state 27
    LPAREN          shift, and go to state 28
    STRING_LITERAL  shift, and go to state 29

    termtab     go to state 30
    factortab   go to state 31
    primarytab  go to state 32


State 20

   16 variable_list: • IDENTIFIER
   17              | • IDENTIFIER LBRACKET termtab RBRACKET
   18              | • IDENTIFIER COMMA variable_list
   18              | IDENTIFIER COMMA • variable_list
   19              | • IDENTIFIER LBRACKET termtab RBRACKET COMMA variable_list

    IDENTIFIER  shift, and go to state 13

    variable_list  go to state 33


State 21

    1 program: VAR_GLOBAL LBRACE global_var_section RBRACE DECLARATION • LBRACE declaration_section RBRACE INSTRUCTION LBRACE instruction_section RBRACE

    LBRACE  shift, and go to state 34


State 22

    6 global_var_section: declaration SEMICOLON global_var_section •

    $default  reduce using rule 6 (global_var_section)


State 23

   14 declaration: CONST type cst EQUALS • term
   97 term: • factor
   98     | • term PLUS factor
   99     | • term MINUS factor
  100 factor: • primary
  101       | • factor MULTIPLY primary
  102       | • factor DIVIDE primary
  103 primary: • IDENTIFIER
  104        | • INT_NUMBER
  105        | • FLOAT_NUMBER
  106        | • LPAREN PLUS INT_NUMBER RPAREN
  107        | • LPAREN MINUS INT_NUMBER RPAREN
  108        | • LPAREN PLUS FLOAT_NUMBER RPAREN
  109        | • LPAREN MINUS FLOAT_NUMBER RPAREN
  110        | • LPAREN term RPAREN
  111        | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 35
    INT_NUMBER    shift, and go to state 36
    FLOAT_NUMBER  shift, and go to state 37
    LPAREN        shift, and go to state 38

    term     go to state 39
    factor   go to state 40
    primary  go to state 41


State 24

   41 primarytab: IDENTIFIER •  [PLUS, MINUS, MULTIPLY, DIVIDE, RPAREN, RBRACKET]
   49           | IDENTIFIER • LBRACKET termtab RBRACKET

    LBRACKET  shift, and go to state 42

    $default  reduce using rule 41 (primarytab)


State 25

   42 primarytab: INT_NUMBER •

    $default  reduce using rule 42 (primarytab)


State 26

   43 primarytab: FLOAT_NUMBER •

    $default  reduce using rule 43 (primarytab)


State 27

   50 primarytab: CHARACTERE •

    $default  reduce using rule 50 (primarytab)


State 28

   35 termtab: • factortab
   36        | • termtab PLUS factortab
   37        | • termtab MINUS factortab
   38 factortab: • primarytab
   39          | • factortab MULTIPLY primarytab
   40          | • factortab DIVIDE primarytab
   41 primarytab: • IDENTIFIER
   42           | • INT_NUMBER
   43           | • FLOAT_NUMBER
   44           | • LPAREN PLUS INT_NUMBER RPAREN
   44           | LPAREN • PLUS INT_NUMBER RPAREN
   45           | • LPAREN MINUS INT_NUMBER RPAREN
   45           | LPAREN • MINUS INT_NUMBER RPAREN
   46           | • LPAREN PLUS FLOAT_NUMBER RPAREN
   46           | LPAREN • PLUS FLOAT_NUMBER RPAREN
   47           | • LPAREN MINUS FLOAT_NUMBER RPAREN
   47           | LPAREN • MINUS FLOAT_NUMBER RPAREN
   48           | • LPAREN termtab RPAREN
   48           | LPAREN • termtab RPAREN
   49           | • IDENTIFIER LBRACKET termtab RBRACKET
   50           | • CHARACTERE
   51           | • STRING_LITERAL

    IDENTIFIER      shift, and go to state 24
    INT_NUMBER      shift, and go to state 25
    FLOAT_NUMBER    shift, and go to state 26
    CHARACTERE      shift, and go to state 27
    PLUS            shift, and go to state 43
    MINUS           shift, and go to state 44
    LPAREN          shift, and go to state 28
    STRING_LITERAL  shift, and go to state 29

    termtab     go to state 45
    factortab   go to state 31
    primarytab  go to state 32


State 29

   51 primarytab: STRING_LITERAL •

    $default  reduce using rule 51 (primarytab)


State 30

   17 variable_list: IDENTIFIER LBRACKET termtab • RBRACKET
   19              | IDENTIFIER LBRACKET termtab • RBRACKET COMMA variable_list
   36 termtab: termtab • PLUS factortab
   37        | termtab • MINUS factortab

    PLUS      shift, and go to state 46
    MINUS     shift, and go to state 47
    RBRACKET  shift, and go to state 48


State 31

   35 termtab: factortab •  [PLUS, MINUS, RPAREN, RBRACKET]
   39 factortab: factortab • MULTIPLY primarytab
   40          | factortab • DIVIDE primarytab

    MULTIPLY  shift, and go to state 49
    DIVIDE    shift, and go to state 50

    $default  reduce using rule 35 (termtab)


State 32

   38 factortab: primarytab •

    $default  reduce using rule 38 (factortab)


State 33

   18 variable_list: IDENTIFIER COMMA variable_list •

    $default  reduce using rule 18 (variable_list)


State 34

    1 program: VAR_GLOBAL LBRACE global_var_section RBRACE DECLARATION LBRACE • declaration_section RBRACE INSTRUCTION LBRACE instruction_section RBRACE
    2 type: • INTEGER
    3     | • FLOAT
    4     | • CHAR
    8 declaration_section: • declaration SEMICOLON
    9                    | • declaration SEMICOLON global_var_section
   10                    | • declaration
   13 declaration: • type variable_list
   14            | • CONST type cst EQUALS term

    INTEGER  shift, and go to state 5
    FLOAT    shift, and go to state 6
    CHAR     shift, and go to state 7
    CONST    shift, and go to state 8

    type                 go to state 9
    declaration_section  go to state 51
    declaration          go to state 52


State 35

  103 primary: IDENTIFIER •  [IF, FOR, READ, WRITE, IDENTIFIER, PLUS, MINUS, MULTIPLY, DIVIDE, RBRACE, RPAREN, SEMICOLON, COLON]
  111        | IDENTIFIER • LBRACKET INT_NUMBER RBRACKET

    LBRACKET  shift, and go to state 53

    $default  reduce using rule 103 (primary)


State 36

  104 primary: INT_NUMBER •

    $default  reduce using rule 104 (primary)


State 37

  105 primary: FLOAT_NUMBER •

    $default  reduce using rule 105 (primary)


State 38

   97 term: • factor
   98     | • term PLUS factor
   99     | • term MINUS factor
  100 factor: • primary
  101       | • factor MULTIPLY primary
  102       | • factor DIVIDE primary
  103 primary: • IDENTIFIER
  104        | • INT_NUMBER
  105        | • FLOAT_NUMBER
  106        | • LPAREN PLUS INT_NUMBER RPAREN
  106        | LPAREN • PLUS INT_NUMBER RPAREN
  107        | • LPAREN MINUS INT_NUMBER RPAREN
  107        | LPAREN • MINUS INT_NUMBER RPAREN
  108        | • LPAREN PLUS FLOAT_NUMBER RPAREN
  108        | LPAREN • PLUS FLOAT_NUMBER RPAREN
  109        | • LPAREN MINUS FLOAT_NUMBER RPAREN
  109        | LPAREN • MINUS FLOAT_NUMBER RPAREN
  110        | • LPAREN term RPAREN
  110        | LPAREN • term RPAREN
  111        | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 35
    INT_NUMBER    shift, and go to state 36
    FLOAT_NUMBER  shift, and go to state 37
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    LPAREN        shift, and go to state 38

    term     go to state 56
    factor   go to state 40
    primary  go to state 41


State 39

   14 declaration: CONST type cst EQUALS term •  [RBRACE, SEMICOLON]
   98 term: term • PLUS factor
   99     | term • MINUS factor

    PLUS   shift, and go to state 57
    MINUS  shift, and go to state 58

    $default  reduce using rule 14 (declaration)


State 40

   97 term: factor •  [IF, FOR, READ, WRITE, IDENTIFIER, PLUS, MINUS, RBRACE, RPAREN, SEMICOLON, COLON]
  101 factor: factor • MULTIPLY primary
  102       | factor • DIVIDE primary

    MULTIPLY  shift, and go to state 59
    DIVIDE    shift, and go to state 60

    $default  reduce using rule 97 (term)


State 41

  100 factor: primary •

    $default  reduce using rule 100 (factor)


State 42

   35 termtab: • factortab
   36        | • termtab PLUS factortab
   37        | • termtab MINUS factortab
   38 factortab: • primarytab
   39          | • factortab MULTIPLY primarytab
   40          | • factortab DIVIDE primarytab
   41 primarytab: • IDENTIFIER
   42           | • INT_NUMBER
   43           | • FLOAT_NUMBER
   44           | • LPAREN PLUS INT_NUMBER RPAREN
   45           | • LPAREN MINUS INT_NUMBER RPAREN
   46           | • LPAREN PLUS FLOAT_NUMBER RPAREN
   47           | • LPAREN MINUS FLOAT_NUMBER RPAREN
   48           | • LPAREN termtab RPAREN
   49           | • IDENTIFIER LBRACKET termtab RBRACKET
   49           | IDENTIFIER LBRACKET • termtab RBRACKET
   50           | • CHARACTERE
   51           | • STRING_LITERAL

    IDENTIFIER      shift, and go to state 24
    INT_NUMBER      shift, and go to state 25
    FLOAT_NUMBER    shift, and go to state 26
    CHARACTERE      shift, and go to state 27
    LPAREN          shift, and go to state 28
    STRING_LITERAL  shift, and go to state 29

    termtab     go to state 61
    factortab   go to state 31
    primarytab  go to state 32


State 43

   44 primarytab: LPAREN PLUS • INT_NUMBER RPAREN
   46           | LPAREN PLUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 62
    FLOAT_NUMBER  shift, and go to state 63


State 44

   45 primarytab: LPAREN MINUS • INT_NUMBER RPAREN
   47           | LPAREN MINUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 64
    FLOAT_NUMBER  shift, and go to state 65


State 45

   36 termtab: termtab • PLUS factortab
   37        | termtab • MINUS factortab
   48 primarytab: LPAREN termtab • RPAREN

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    RPAREN  shift, and go to state 66


State 46

   36 termtab: termtab PLUS • factortab
   38 factortab: • primarytab
   39          | • factortab MULTIPLY primarytab
   40          | • factortab DIVIDE primarytab
   41 primarytab: • IDENTIFIER
   42           | • INT_NUMBER
   43           | • FLOAT_NUMBER
   44           | • LPAREN PLUS INT_NUMBER RPAREN
   45           | • LPAREN MINUS INT_NUMBER RPAREN
   46           | • LPAREN PLUS FLOAT_NUMBER RPAREN
   47           | • LPAREN MINUS FLOAT_NUMBER RPAREN
   48           | • LPAREN termtab RPAREN
   49           | • IDENTIFIER LBRACKET termtab RBRACKET
   50           | • CHARACTERE
   51           | • STRING_LITERAL

    IDENTIFIER      shift, and go to state 24
    INT_NUMBER      shift, and go to state 25
    FLOAT_NUMBER    shift, and go to state 26
    CHARACTERE      shift, and go to state 27
    LPAREN          shift, and go to state 28
    STRING_LITERAL  shift, and go to state 29

    factortab   go to state 67
    primarytab  go to state 32


State 47

   37 termtab: termtab MINUS • factortab
   38 factortab: • primarytab
   39          | • factortab MULTIPLY primarytab
   40          | • factortab DIVIDE primarytab
   41 primarytab: • IDENTIFIER
   42           | • INT_NUMBER
   43           | • FLOAT_NUMBER
   44           | • LPAREN PLUS INT_NUMBER RPAREN
   45           | • LPAREN MINUS INT_NUMBER RPAREN
   46           | • LPAREN PLUS FLOAT_NUMBER RPAREN
   47           | • LPAREN MINUS FLOAT_NUMBER RPAREN
   48           | • LPAREN termtab RPAREN
   49           | • IDENTIFIER LBRACKET termtab RBRACKET
   50           | • CHARACTERE
   51           | • STRING_LITERAL

    IDENTIFIER      shift, and go to state 24
    INT_NUMBER      shift, and go to state 25
    FLOAT_NUMBER    shift, and go to state 26
    CHARACTERE      shift, and go to state 27
    LPAREN          shift, and go to state 28
    STRING_LITERAL  shift, and go to state 29

    factortab   go to state 68
    primarytab  go to state 32


State 48

   17 variable_list: IDENTIFIER LBRACKET termtab RBRACKET •  [RBRACE, SEMICOLON]
   19              | IDENTIFIER LBRACKET termtab RBRACKET • COMMA variable_list

    COMMA  shift, and go to state 69

    $default  reduce using rule 17 (variable_list)


State 49

   39 factortab: factortab MULTIPLY • primarytab
   41 primarytab: • IDENTIFIER
   42           | • INT_NUMBER
   43           | • FLOAT_NUMBER
   44           | • LPAREN PLUS INT_NUMBER RPAREN
   45           | • LPAREN MINUS INT_NUMBER RPAREN
   46           | • LPAREN PLUS FLOAT_NUMBER RPAREN
   47           | • LPAREN MINUS FLOAT_NUMBER RPAREN
   48           | • LPAREN termtab RPAREN
   49           | • IDENTIFIER LBRACKET termtab RBRACKET
   50           | • CHARACTERE
   51           | • STRING_LITERAL

    IDENTIFIER      shift, and go to state 24
    INT_NUMBER      shift, and go to state 25
    FLOAT_NUMBER    shift, and go to state 26
    CHARACTERE      shift, and go to state 27
    LPAREN          shift, and go to state 28
    STRING_LITERAL  shift, and go to state 29

    primarytab  go to state 70


State 50

   40 factortab: factortab DIVIDE • primarytab
   41 primarytab: • IDENTIFIER
   42           | • INT_NUMBER
   43           | • FLOAT_NUMBER
   44           | • LPAREN PLUS INT_NUMBER RPAREN
   45           | • LPAREN MINUS INT_NUMBER RPAREN
   46           | • LPAREN PLUS FLOAT_NUMBER RPAREN
   47           | • LPAREN MINUS FLOAT_NUMBER RPAREN
   48           | • LPAREN termtab RPAREN
   49           | • IDENTIFIER LBRACKET termtab RBRACKET
   50           | • CHARACTERE
   51           | • STRING_LITERAL

    IDENTIFIER      shift, and go to state 24
    INT_NUMBER      shift, and go to state 25
    FLOAT_NUMBER    shift, and go to state 26
    CHARACTERE      shift, and go to state 27
    LPAREN          shift, and go to state 28
    STRING_LITERAL  shift, and go to state 29

    primarytab  go to state 71


State 51

    1 program: VAR_GLOBAL LBRACE global_var_section RBRACE DECLARATION LBRACE declaration_section • RBRACE INSTRUCTION LBRACE instruction_section RBRACE

    RBRACE  shift, and go to state 72


State 52

    8 declaration_section: declaration • SEMICOLON
    9                    | declaration • SEMICOLON global_var_section
   10                    | declaration •  [RBRACE]

    SEMICOLON  shift, and go to state 73

    $default  reduce using rule 10 (declaration_section)


State 53

  111 primary: IDENTIFIER LBRACKET • INT_NUMBER RBRACKET

    INT_NUMBER  shift, and go to state 74


State 54

  106 primary: LPAREN PLUS • INT_NUMBER RPAREN
  108        | LPAREN PLUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 75
    FLOAT_NUMBER  shift, and go to state 76


State 55

  107 primary: LPAREN MINUS • INT_NUMBER RPAREN
  109        | LPAREN MINUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 77
    FLOAT_NUMBER  shift, and go to state 78


State 56

   98 term: term • PLUS factor
   99     | term • MINUS factor
  110 primary: LPAREN term • RPAREN

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    RPAREN  shift, and go to state 79


State 57

   98 term: term PLUS • factor
  100 factor: • primary
  101       | • factor MULTIPLY primary
  102       | • factor DIVIDE primary
  103 primary: • IDENTIFIER
  104        | • INT_NUMBER
  105        | • FLOAT_NUMBER
  106        | • LPAREN PLUS INT_NUMBER RPAREN
  107        | • LPAREN MINUS INT_NUMBER RPAREN
  108        | • LPAREN PLUS FLOAT_NUMBER RPAREN
  109        | • LPAREN MINUS FLOAT_NUMBER RPAREN
  110        | • LPAREN term RPAREN
  111        | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 35
    INT_NUMBER    shift, and go to state 36
    FLOAT_NUMBER  shift, and go to state 37
    LPAREN        shift, and go to state 38

    factor   go to state 80
    primary  go to state 41


State 58

   99 term: term MINUS • factor
  100 factor: • primary
  101       | • factor MULTIPLY primary
  102       | • factor DIVIDE primary
  103 primary: • IDENTIFIER
  104        | • INT_NUMBER
  105        | • FLOAT_NUMBER
  106        | • LPAREN PLUS INT_NUMBER RPAREN
  107        | • LPAREN MINUS INT_NUMBER RPAREN
  108        | • LPAREN PLUS FLOAT_NUMBER RPAREN
  109        | • LPAREN MINUS FLOAT_NUMBER RPAREN
  110        | • LPAREN term RPAREN
  111        | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 35
    INT_NUMBER    shift, and go to state 36
    FLOAT_NUMBER  shift, and go to state 37
    LPAREN        shift, and go to state 38

    factor   go to state 81
    primary  go to state 41


State 59

  101 factor: factor MULTIPLY • primary
  103 primary: • IDENTIFIER
  104        | • INT_NUMBER
  105        | • FLOAT_NUMBER
  106        | • LPAREN PLUS INT_NUMBER RPAREN
  107        | • LPAREN MINUS INT_NUMBER RPAREN
  108        | • LPAREN PLUS FLOAT_NUMBER RPAREN
  109        | • LPAREN MINUS FLOAT_NUMBER RPAREN
  110        | • LPAREN term RPAREN
  111        | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 35
    INT_NUMBER    shift, and go to state 36
    FLOAT_NUMBER  shift, and go to state 37
    LPAREN        shift, and go to state 38

    primary  go to state 82


State 60

  102 factor: factor DIVIDE • primary
  103 primary: • IDENTIFIER
  104        | • INT_NUMBER
  105        | • FLOAT_NUMBER
  106        | • LPAREN PLUS INT_NUMBER RPAREN
  107        | • LPAREN MINUS INT_NUMBER RPAREN
  108        | • LPAREN PLUS FLOAT_NUMBER RPAREN
  109        | • LPAREN MINUS FLOAT_NUMBER RPAREN
  110        | • LPAREN term RPAREN
  111        | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 35
    INT_NUMBER    shift, and go to state 36
    FLOAT_NUMBER  shift, and go to state 37
    LPAREN        shift, and go to state 38

    primary  go to state 83


State 61

   36 termtab: termtab • PLUS factortab
   37        | termtab • MINUS factortab
   49 primarytab: IDENTIFIER LBRACKET termtab • RBRACKET

    PLUS      shift, and go to state 46
    MINUS     shift, and go to state 47
    RBRACKET  shift, and go to state 84


State 62

   44 primarytab: LPAREN PLUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 85


State 63

   46 primarytab: LPAREN PLUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 86


State 64

   45 primarytab: LPAREN MINUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 87


State 65

   47 primarytab: LPAREN MINUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 88


State 66

   48 primarytab: LPAREN termtab RPAREN •

    $default  reduce using rule 48 (primarytab)


State 67

   36 termtab: termtab PLUS factortab •  [PLUS, MINUS, RPAREN, RBRACKET]
   39 factortab: factortab • MULTIPLY primarytab
   40          | factortab • DIVIDE primarytab

    MULTIPLY  shift, and go to state 49
    DIVIDE    shift, and go to state 50

    $default  reduce using rule 36 (termtab)


State 68

   37 termtab: termtab MINUS factortab •  [PLUS, MINUS, RPAREN, RBRACKET]
   39 factortab: factortab • MULTIPLY primarytab
   40          | factortab • DIVIDE primarytab

    MULTIPLY  shift, and go to state 49
    DIVIDE    shift, and go to state 50

    $default  reduce using rule 37 (termtab)


State 69

   16 variable_list: • IDENTIFIER
   17              | • IDENTIFIER LBRACKET termtab RBRACKET
   18              | • IDENTIFIER COMMA variable_list
   19              | • IDENTIFIER LBRACKET termtab RBRACKET COMMA variable_list
   19              | IDENTIFIER LBRACKET termtab RBRACKET COMMA • variable_list

    IDENTIFIER  shift, and go to state 13

    variable_list  go to state 89


State 70

   39 factortab: factortab MULTIPLY primarytab •

    $default  reduce using rule 39 (factortab)


State 71

   40 factortab: factortab DIVIDE primarytab •

    $default  reduce using rule 40 (factortab)


State 72

    1 program: VAR_GLOBAL LBRACE global_var_section RBRACE DECLARATION LBRACE declaration_section RBRACE • INSTRUCTION LBRACE instruction_section RBRACE

    INSTRUCTION  shift, and go to state 90


State 73

    2 type: • INTEGER
    3     | • FLOAT
    4     | • CHAR
    5 global_var_section: • declaration SEMICOLON
    6                   | • declaration SEMICOLON global_var_section
    7                   | • declaration
    8 declaration_section: declaration SEMICOLON •  [RBRACE]
    9                    | declaration SEMICOLON • global_var_section
   13 declaration: • type variable_list
   14            | • CONST type cst EQUALS term

    INTEGER  shift, and go to state 5
    FLOAT    shift, and go to state 6
    CHAR     shift, and go to state 7
    CONST    shift, and go to state 8

    $default  reduce using rule 8 (declaration_section)

    type                go to state 9
    global_var_section  go to state 91
    declaration         go to state 11


State 74

  111 primary: IDENTIFIER LBRACKET INT_NUMBER • RBRACKET

    RBRACKET  shift, and go to state 92


State 75

  106 primary: LPAREN PLUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 93


State 76

  108 primary: LPAREN PLUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 94


State 77

  107 primary: LPAREN MINUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 95


State 78

  109 primary: LPAREN MINUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 96


State 79

  110 primary: LPAREN term RPAREN •

    $default  reduce using rule 110 (primary)


State 80

   98 term: term PLUS factor •  [IF, FOR, READ, WRITE, IDENTIFIER, PLUS, MINUS, RBRACE, RPAREN, SEMICOLON, COLON]
  101 factor: factor • MULTIPLY primary
  102       | factor • DIVIDE primary

    MULTIPLY  shift, and go to state 59
    DIVIDE    shift, and go to state 60

    $default  reduce using rule 98 (term)


State 81

   99 term: term MINUS factor •  [IF, FOR, READ, WRITE, IDENTIFIER, PLUS, MINUS, RBRACE, RPAREN, SEMICOLON, COLON]
  101 factor: factor • MULTIPLY primary
  102       | factor • DIVIDE primary

    MULTIPLY  shift, and go to state 59
    DIVIDE    shift, and go to state 60

    $default  reduce using rule 99 (term)


State 82

  101 factor: factor MULTIPLY primary •

    $default  reduce using rule 101 (factor)


State 83

  102 factor: factor DIVIDE primary •

    $default  reduce using rule 102 (factor)


State 84

   49 primarytab: IDENTIFIER LBRACKET termtab RBRACKET •

    $default  reduce using rule 49 (primarytab)


State 85

   44 primarytab: LPAREN PLUS INT_NUMBER RPAREN •

    $default  reduce using rule 44 (primarytab)


State 86

   46 primarytab: LPAREN PLUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 46 (primarytab)


State 87

   45 primarytab: LPAREN MINUS INT_NUMBER RPAREN •

    $default  reduce using rule 45 (primarytab)


State 88

   47 primarytab: LPAREN MINUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 47 (primarytab)


State 89

   19 variable_list: IDENTIFIER LBRACKET termtab RBRACKET COMMA variable_list •

    $default  reduce using rule 19 (variable_list)


State 90

    1 program: VAR_GLOBAL LBRACE global_var_section RBRACE DECLARATION LBRACE declaration_section RBRACE INSTRUCTION • LBRACE instruction_section RBRACE

    LBRACE  shift, and go to state 97


State 91

    9 declaration_section: declaration SEMICOLON global_var_section •

    $default  reduce using rule 9 (declaration_section)


State 92

  111 primary: IDENTIFIER LBRACKET INT_NUMBER RBRACKET •

    $default  reduce using rule 111 (primary)


State 93

  106 primary: LPAREN PLUS INT_NUMBER RPAREN •

    $default  reduce using rule 106 (primary)


State 94

  108 primary: LPAREN PLUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 108 (primary)


State 95

  107 primary: LPAREN MINUS INT_NUMBER RPAREN •

    $default  reduce using rule 107 (primary)


State 96

  109 primary: LPAREN MINUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 109 (primary)


State 97

    1 program: VAR_GLOBAL LBRACE global_var_section RBRACE DECLARATION LBRACE declaration_section RBRACE INSTRUCTION LBRACE • instruction_section RBRACE
   11 instruction_section: • statement
   12                    | • statement instruction_section
   20 statement: • assignment SEMICOLON
   21          | • condition SEMICOLON
   22          | • loop SEMICOLON
   23          | • io_statement SEMICOLON
   24          | • assignment_int
   25          | • assignment
   26          | • condition
   27          | • loop
   28          | • io_statement
   29 assignment: • MDROIT EQUALS term
   30           | • TAB EQUALS term
   31           | • TAB EQUALS EXPRESSION_CHAR
   32           | • MDROIT EQUALS EXPRESSION_CHAR
   33 MDROIT: • IDENTIFIER
   34 TAB: • IDENTIFIER LBRACKET termtab RBRACKET
   55 condition: • IF LPAREN COND RPAREN LBRACE $@1 instruction_section RBRACE elsebloc
   59 assignment_int: • MDROIT EQUALS term
   60               | • TAB EQUALS term
   61               | • TAB EQUALS EXPRESSION_CHAR
   62               | • MDROIT EQUALS EXPRESSION_CHAR
   65 loop: • FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE
   66 io_statement: • READ LPAREN IDENTIFIER RPAREN
   67             | • WRITE LPAREN io_expr_list RPAREN

    IF          shift, and go to state 98
    FOR         shift, and go to state 99
    READ        shift, and go to state 100
    WRITE       shift, and go to state 101
    IDENTIFIER  shift, and go to state 102

    instruction_section  go to state 103
    statement            go to state 104
    assignment           go to state 105
    MDROIT               go to state 106
    TAB                  go to state 107
    condition            go to state 108
    assignment_int       go to state 109
    loop                 go to state 110
    io_statement         go to state 111


State 98

   55 condition: IF • LPAREN COND RPAREN LBRACE $@1 instruction_section RBRACE elsebloc

    LPAREN  shift, and go to state 112


State 99

   65 loop: FOR • LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE

    LPAREN  shift, and go to state 113


State 100

   66 io_statement: READ • LPAREN IDENTIFIER RPAREN

    LPAREN  shift, and go to state 114


State 101

   67 io_statement: WRITE • LPAREN io_expr_list RPAREN

    LPAREN  shift, and go to state 115


State 102

   33 MDROIT: IDENTIFIER •  [EQUALS]
   34 TAB: IDENTIFIER • LBRACKET termtab RBRACKET

    LBRACKET  shift, and go to state 116

    $default  reduce using rule 33 (MDROIT)


State 103

    1 program: VAR_GLOBAL LBRACE global_var_section RBRACE DECLARATION LBRACE declaration_section RBRACE INSTRUCTION LBRACE instruction_section • RBRACE

    RBRACE  shift, and go to state 117


State 104

   11 instruction_section: • statement
   11                    | statement •  [RBRACE]
   12                    | • statement instruction_section
   12                    | statement • instruction_section
   20 statement: • assignment SEMICOLON
   21          | • condition SEMICOLON
   22          | • loop SEMICOLON
   23          | • io_statement SEMICOLON
   24          | • assignment_int
   25          | • assignment
   26          | • condition
   27          | • loop
   28          | • io_statement
   29 assignment: • MDROIT EQUALS term
   30           | • TAB EQUALS term
   31           | • TAB EQUALS EXPRESSION_CHAR
   32           | • MDROIT EQUALS EXPRESSION_CHAR
   33 MDROIT: • IDENTIFIER
   34 TAB: • IDENTIFIER LBRACKET termtab RBRACKET
   55 condition: • IF LPAREN COND RPAREN LBRACE $@1 instruction_section RBRACE elsebloc
   59 assignment_int: • MDROIT EQUALS term
   60               | • TAB EQUALS term
   61               | • TAB EQUALS EXPRESSION_CHAR
   62               | • MDROIT EQUALS EXPRESSION_CHAR
   65 loop: • FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE
   66 io_statement: • READ LPAREN IDENTIFIER RPAREN
   67             | • WRITE LPAREN io_expr_list RPAREN

    IF          shift, and go to state 98
    FOR         shift, and go to state 99
    READ        shift, and go to state 100
    WRITE       shift, and go to state 101
    IDENTIFIER  shift, and go to state 102

    $default  reduce using rule 11 (instruction_section)

    instruction_section  go to state 118
    statement            go to state 104
    assignment           go to state 105
    MDROIT               go to state 106
    TAB                  go to state 107
    condition            go to state 108
    assignment_int       go to state 109
    loop                 go to state 110
    io_statement         go to state 111


State 105

   20 statement: assignment • SEMICOLON
   25          | assignment •  [IF, FOR, READ, WRITE, IDENTIFIER, RBRACE]

    SEMICOLON  shift, and go to state 119

    $default  reduce using rule 25 (statement)


State 106

   29 assignment: MDROIT • EQUALS term
   32           | MDROIT • EQUALS EXPRESSION_CHAR
   59 assignment_int: MDROIT • EQUALS term
   62               | MDROIT • EQUALS EXPRESSION_CHAR

    EQUALS  shift, and go to state 120


State 107

   30 assignment: TAB • EQUALS term
   31           | TAB • EQUALS EXPRESSION_CHAR
   60 assignment_int: TAB • EQUALS term
   61               | TAB • EQUALS EXPRESSION_CHAR

    EQUALS  shift, and go to state 121


State 108

   21 statement: condition • SEMICOLON
   26          | condition •  [IF, FOR, READ, WRITE, IDENTIFIER, RBRACE]

    SEMICOLON  shift, and go to state 122

    $default  reduce using rule 26 (statement)


State 109

   24 statement: assignment_int •

    $default  reduce using rule 24 (statement)


State 110

   22 statement: loop • SEMICOLON
   27          | loop •  [IF, FOR, READ, WRITE, IDENTIFIER, RBRACE]

    SEMICOLON  shift, and go to state 123

    $default  reduce using rule 27 (statement)


State 111

   23 statement: io_statement • SEMICOLON
   28          | io_statement •  [IF, FOR, READ, WRITE, IDENTIFIER, RBRACE]

    SEMICOLON  shift, and go to state 124

    $default  reduce using rule 28 (statement)


State 112

   55 condition: IF LPAREN • COND RPAREN LBRACE $@1 instruction_section RBRACE elsebloc
   72 COND: • COND OR AND_EXPR
   73     | • AND_EXPR
   74 AND_EXPR: • AND_EXPR AND NOT_EXPR
   75         | • NOT_EXPR
   76 NOT_EXPR: • NOT NOT_EXPR
   77         | • comparison_expr
   78 comparison_expr: • term2 GT term1
   79                | • term2 LT term1
   80                | • term2 EQ term1
   81                | • term2 GEQ term1
   82                | • term2 LEQ term1
   83                | • term2 NEQ term1
   84                | • DROIT OP_COMP term1
   85                | • term2 OP_COMP GAUCHE
   86                | • DROIT OP_COMP GAUCHE
   87 DROIT: • CHARACTERE
   88      | • STRING_LITERAL
  127 term2: • factor2
  128      | • term2 PLUS factor2
  129      | • term2 MINUS factor2
  130 factor2: • primary2
  131        | • factor2 MULTIPLY primary2
  132        | • factor2 DIVIDE primary2
  133 primary2: • IDENTIFIER
  134         | • INT_NUMBER
  135         | • FLOAT_NUMBER
  136         | • LPAREN PLUS INT_NUMBER RPAREN
  137         | • LPAREN MINUS INT_NUMBER RPAREN
  138         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  139         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  140         | • LPAREN term2 RPAREN
  141         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER      shift, and go to state 125
    INT_NUMBER      shift, and go to state 126
    FLOAT_NUMBER    shift, and go to state 127
    CHARACTERE      shift, and go to state 128
    NOT             shift, and go to state 129
    LPAREN          shift, and go to state 130
    STRING_LITERAL  shift, and go to state 131

    COND             go to state 132
    AND_EXPR         go to state 133
    NOT_EXPR         go to state 134
    comparison_expr  go to state 135
    DROIT            go to state 136
    term2            go to state 137
    factor2          go to state 138
    primary2         go to state 139


State 113

   33 MDROIT: • IDENTIFIER
   34 TAB: • IDENTIFIER LBRACKET termtab RBRACKET
   59 assignment_int: • MDROIT EQUALS term
   60               | • TAB EQUALS term
   61               | • TAB EQUALS EXPRESSION_CHAR
   62               | • MDROIT EQUALS EXPRESSION_CHAR
   65 loop: FOR LPAREN • assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE

    IDENTIFIER  shift, and go to state 102

    MDROIT          go to state 140
    TAB             go to state 141
    assignment_int  go to state 142


State 114

   66 io_statement: READ LPAREN • IDENTIFIER RPAREN

    IDENTIFIER  shift, and go to state 143


State 115

   67 io_statement: WRITE LPAREN • io_expr_list RPAREN
   68 io_expr_list: • io_expr
   69             | • io_expr COMMA io_expr_list
   70 io_expr: • IDENTIFIER
   71        | • STRING_LITERAL

    IDENTIFIER      shift, and go to state 144
    STRING_LITERAL  shift, and go to state 145

    io_expr_list  go to state 146
    io_expr       go to state 147


State 116

   34 TAB: IDENTIFIER LBRACKET • termtab RBRACKET
   35 termtab: • factortab
   36        | • termtab PLUS factortab
   37        | • termtab MINUS factortab
   38 factortab: • primarytab
   39          | • factortab MULTIPLY primarytab
   40          | • factortab DIVIDE primarytab
   41 primarytab: • IDENTIFIER
   42           | • INT_NUMBER
   43           | • FLOAT_NUMBER
   44           | • LPAREN PLUS INT_NUMBER RPAREN
   45           | • LPAREN MINUS INT_NUMBER RPAREN
   46           | • LPAREN PLUS FLOAT_NUMBER RPAREN
   47           | • LPAREN MINUS FLOAT_NUMBER RPAREN
   48           | • LPAREN termtab RPAREN
   49           | • IDENTIFIER LBRACKET termtab RBRACKET
   50           | • CHARACTERE
   51           | • STRING_LITERAL

    IDENTIFIER      shift, and go to state 24
    INT_NUMBER      shift, and go to state 25
    FLOAT_NUMBER    shift, and go to state 26
    CHARACTERE      shift, and go to state 27
    LPAREN          shift, and go to state 28
    STRING_LITERAL  shift, and go to state 29

    termtab     go to state 148
    factortab   go to state 31
    primarytab  go to state 32


State 117

    1 program: VAR_GLOBAL LBRACE global_var_section RBRACE DECLARATION LBRACE declaration_section RBRACE INSTRUCTION LBRACE instruction_section RBRACE •

    $default  reduce using rule 1 (program)


State 118

   12 instruction_section: statement instruction_section •

    $default  reduce using rule 12 (instruction_section)


State 119

   20 statement: assignment SEMICOLON •

    $default  reduce using rule 20 (statement)


State 120

   29 assignment: MDROIT EQUALS • term
   32           | MDROIT EQUALS • EXPRESSION_CHAR
   52 EXPRESSION_CHAR: • CHARACTERE
   53                | • STRING_LITERAL
   59 assignment_int: MDROIT EQUALS • term
   62               | MDROIT EQUALS • EXPRESSION_CHAR
   97 term: • factor
   98     | • term PLUS factor
   99     | • term MINUS factor
  100 factor: • primary
  101       | • factor MULTIPLY primary
  102       | • factor DIVIDE primary
  103 primary: • IDENTIFIER
  104        | • INT_NUMBER
  105        | • FLOAT_NUMBER
  106        | • LPAREN PLUS INT_NUMBER RPAREN
  107        | • LPAREN MINUS INT_NUMBER RPAREN
  108        | • LPAREN PLUS FLOAT_NUMBER RPAREN
  109        | • LPAREN MINUS FLOAT_NUMBER RPAREN
  110        | • LPAREN term RPAREN
  111        | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER      shift, and go to state 35
    INT_NUMBER      shift, and go to state 36
    FLOAT_NUMBER    shift, and go to state 37
    CHARACTERE      shift, and go to state 149
    LPAREN          shift, and go to state 38
    STRING_LITERAL  shift, and go to state 150

    EXPRESSION_CHAR  go to state 151
    term             go to state 152
    factor           go to state 40
    primary          go to state 41


State 121

   30 assignment: TAB EQUALS • term
   31           | TAB EQUALS • EXPRESSION_CHAR
   52 EXPRESSION_CHAR: • CHARACTERE
   53                | • STRING_LITERAL
   60 assignment_int: TAB EQUALS • term
   61               | TAB EQUALS • EXPRESSION_CHAR
   97 term: • factor
   98     | • term PLUS factor
   99     | • term MINUS factor
  100 factor: • primary
  101       | • factor MULTIPLY primary
  102       | • factor DIVIDE primary
  103 primary: • IDENTIFIER
  104        | • INT_NUMBER
  105        | • FLOAT_NUMBER
  106        | • LPAREN PLUS INT_NUMBER RPAREN
  107        | • LPAREN MINUS INT_NUMBER RPAREN
  108        | • LPAREN PLUS FLOAT_NUMBER RPAREN
  109        | • LPAREN MINUS FLOAT_NUMBER RPAREN
  110        | • LPAREN term RPAREN
  111        | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER      shift, and go to state 35
    INT_NUMBER      shift, and go to state 36
    FLOAT_NUMBER    shift, and go to state 37
    CHARACTERE      shift, and go to state 149
    LPAREN          shift, and go to state 38
    STRING_LITERAL  shift, and go to state 150

    EXPRESSION_CHAR  go to state 153
    term             go to state 154
    factor           go to state 40
    primary          go to state 41


State 122

   21 statement: condition SEMICOLON •

    $default  reduce using rule 21 (statement)


State 123

   22 statement: loop SEMICOLON •

    $default  reduce using rule 22 (statement)


State 124

   23 statement: io_statement SEMICOLON •

    $default  reduce using rule 23 (statement)


State 125

  133 primary2: IDENTIFIER •  [EQ, NEQ, GEQ, LT, LEQ, GT, PLUS, MINUS, MULTIPLY, DIVIDE, RPAREN]
  141         | IDENTIFIER • LBRACKET INT_NUMBER RBRACKET

    LBRACKET  shift, and go to state 155

    $default  reduce using rule 133 (primary2)


State 126

  134 primary2: INT_NUMBER •

    $default  reduce using rule 134 (primary2)


State 127

  135 primary2: FLOAT_NUMBER •

    $default  reduce using rule 135 (primary2)


State 128

   87 DROIT: CHARACTERE •

    $default  reduce using rule 87 (DROIT)


State 129

   76 NOT_EXPR: • NOT NOT_EXPR
   76         | NOT • NOT_EXPR
   77         | • comparison_expr
   78 comparison_expr: • term2 GT term1
   79                | • term2 LT term1
   80                | • term2 EQ term1
   81                | • term2 GEQ term1
   82                | • term2 LEQ term1
   83                | • term2 NEQ term1
   84                | • DROIT OP_COMP term1
   85                | • term2 OP_COMP GAUCHE
   86                | • DROIT OP_COMP GAUCHE
   87 DROIT: • CHARACTERE
   88      | • STRING_LITERAL
  127 term2: • factor2
  128      | • term2 PLUS factor2
  129      | • term2 MINUS factor2
  130 factor2: • primary2
  131        | • factor2 MULTIPLY primary2
  132        | • factor2 DIVIDE primary2
  133 primary2: • IDENTIFIER
  134         | • INT_NUMBER
  135         | • FLOAT_NUMBER
  136         | • LPAREN PLUS INT_NUMBER RPAREN
  137         | • LPAREN MINUS INT_NUMBER RPAREN
  138         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  139         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  140         | • LPAREN term2 RPAREN
  141         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER      shift, and go to state 125
    INT_NUMBER      shift, and go to state 126
    FLOAT_NUMBER    shift, and go to state 127
    CHARACTERE      shift, and go to state 128
    NOT             shift, and go to state 129
    LPAREN          shift, and go to state 130
    STRING_LITERAL  shift, and go to state 131

    NOT_EXPR         go to state 156
    comparison_expr  go to state 135
    DROIT            go to state 136
    term2            go to state 137
    factor2          go to state 138
    primary2         go to state 139


State 130

  127 term2: • factor2
  128      | • term2 PLUS factor2
  129      | • term2 MINUS factor2
  130 factor2: • primary2
  131        | • factor2 MULTIPLY primary2
  132        | • factor2 DIVIDE primary2
  133 primary2: • IDENTIFIER
  134         | • INT_NUMBER
  135         | • FLOAT_NUMBER
  136         | • LPAREN PLUS INT_NUMBER RPAREN
  136         | LPAREN • PLUS INT_NUMBER RPAREN
  137         | • LPAREN MINUS INT_NUMBER RPAREN
  137         | LPAREN • MINUS INT_NUMBER RPAREN
  138         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  138         | LPAREN • PLUS FLOAT_NUMBER RPAREN
  139         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  139         | LPAREN • MINUS FLOAT_NUMBER RPAREN
  140         | • LPAREN term2 RPAREN
  140         | LPAREN • term2 RPAREN
  141         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 125
    INT_NUMBER    shift, and go to state 126
    FLOAT_NUMBER  shift, and go to state 127
    PLUS          shift, and go to state 157
    MINUS         shift, and go to state 158
    LPAREN        shift, and go to state 130

    term2     go to state 159
    factor2   go to state 138
    primary2  go to state 139


State 131

   88 DROIT: STRING_LITERAL •

    $default  reduce using rule 88 (DROIT)


State 132

   55 condition: IF LPAREN COND • RPAREN LBRACE $@1 instruction_section RBRACE elsebloc
   72 COND: COND • OR AND_EXPR

    OR      shift, and go to state 160
    RPAREN  shift, and go to state 161


State 133

   73 COND: AND_EXPR •  [OR, RPAREN]
   74 AND_EXPR: AND_EXPR • AND NOT_EXPR

    AND  shift, and go to state 162

    $default  reduce using rule 73 (COND)


State 134

   75 AND_EXPR: NOT_EXPR •

    $default  reduce using rule 75 (AND_EXPR)


State 135

   77 NOT_EXPR: comparison_expr •

    $default  reduce using rule 77 (NOT_EXPR)


State 136

   84 comparison_expr: DROIT • OP_COMP term1
   86                | DROIT • OP_COMP GAUCHE
   91 OP_COMP: • GT
   92        | • LT
   93        | • GEQ
   94        | • LEQ
   95        | • EQ
   96        | • NEQ

    EQ   shift, and go to state 163
    NEQ  shift, and go to state 164
    GEQ  shift, and go to state 165
    LT   shift, and go to state 166
    LEQ  shift, and go to state 167
    GT   shift, and go to state 168

    OP_COMP  go to state 169


State 137

   78 comparison_expr: term2 • GT term1
   79                | term2 • LT term1
   80                | term2 • EQ term1
   81                | term2 • GEQ term1
   82                | term2 • LEQ term1
   83                | term2 • NEQ term1
   85                | term2 • OP_COMP GAUCHE
   91 OP_COMP: • GT
   92        | • LT
   93        | • GEQ
   94        | • LEQ
   95        | • EQ
   96        | • NEQ
  128 term2: term2 • PLUS factor2
  129      | term2 • MINUS factor2

    EQ     shift, and go to state 170
    NEQ    shift, and go to state 171
    GEQ    shift, and go to state 172
    LT     shift, and go to state 173
    LEQ    shift, and go to state 174
    GT     shift, and go to state 175
    PLUS   shift, and go to state 176
    MINUS  shift, and go to state 177

    OP_COMP  go to state 178


State 138

  127 term2: factor2 •  [EQ, NEQ, GEQ, LT, LEQ, GT, PLUS, MINUS, RPAREN]
  131 factor2: factor2 • MULTIPLY primary2
  132        | factor2 • DIVIDE primary2

    MULTIPLY  shift, and go to state 179
    DIVIDE    shift, and go to state 180

    $default  reduce using rule 127 (term2)


State 139

  130 factor2: primary2 •

    $default  reduce using rule 130 (factor2)


State 140

   59 assignment_int: MDROIT • EQUALS term
   62               | MDROIT • EQUALS EXPRESSION_CHAR

    EQUALS  shift, and go to state 181


State 141

   60 assignment_int: TAB • EQUALS term
   61               | TAB • EQUALS EXPRESSION_CHAR

    EQUALS  shift, and go to state 182


State 142

   65 loop: FOR LPAREN assignment_int • COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE

    COLON  shift, and go to state 183


State 143

   66 io_statement: READ LPAREN IDENTIFIER • RPAREN

    RPAREN  shift, and go to state 184


State 144

   70 io_expr: IDENTIFIER •

    $default  reduce using rule 70 (io_expr)


State 145

   71 io_expr: STRING_LITERAL •

    $default  reduce using rule 71 (io_expr)


State 146

   67 io_statement: WRITE LPAREN io_expr_list • RPAREN

    RPAREN  shift, and go to state 185


State 147

   68 io_expr_list: io_expr •  [RPAREN]
   69             | io_expr • COMMA io_expr_list

    COMMA  shift, and go to state 186

    $default  reduce using rule 68 (io_expr_list)


State 148

   34 TAB: IDENTIFIER LBRACKET termtab • RBRACKET
   36 termtab: termtab • PLUS factortab
   37        | termtab • MINUS factortab

    PLUS      shift, and go to state 46
    MINUS     shift, and go to state 47
    RBRACKET  shift, and go to state 187


State 149

   52 EXPRESSION_CHAR: CHARACTERE •

    $default  reduce using rule 52 (EXPRESSION_CHAR)


State 150

   53 EXPRESSION_CHAR: STRING_LITERAL •

    $default  reduce using rule 53 (EXPRESSION_CHAR)


State 151

   32 assignment: MDROIT EQUALS EXPRESSION_CHAR •  [IF, FOR, READ, WRITE, IDENTIFIER, RBRACE, SEMICOLON]
   62 assignment_int: MDROIT EQUALS EXPRESSION_CHAR •  [IF, FOR, READ, WRITE, IDENTIFIER, RBRACE]

    IF          reduce using rule 32 (assignment)
    IF          [reduce using rule 62 (assignment_int)]
    FOR         reduce using rule 32 (assignment)
    FOR         [reduce using rule 62 (assignment_int)]
    READ        reduce using rule 32 (assignment)
    READ        [reduce using rule 62 (assignment_int)]
    WRITE       reduce using rule 32 (assignment)
    WRITE       [reduce using rule 62 (assignment_int)]
    IDENTIFIER  reduce using rule 32 (assignment)
    IDENTIFIER  [reduce using rule 62 (assignment_int)]
    RBRACE      reduce using rule 32 (assignment)
    RBRACE      [reduce using rule 62 (assignment_int)]
    $default    reduce using rule 32 (assignment)

    reduce/reduce conflict on tokens IF, FOR, READ, WRITE, IDENTIFIER, RBRACE:
       32 assignment: MDROIT EQUALS EXPRESSION_CHAR •
       62 assignment_int: MDROIT EQUALS EXPRESSION_CHAR •
      Example: MDROIT EQUALS EXPRESSION_CHAR •
      First reduce derivation
        statement
        ↳ 25: assignment
              ↳ 32: MDROIT EQUALS EXPRESSION_CHAR •
      Second reduce derivation
        statement
        ↳ 24: assignment_int
              ↳ 62: MDROIT EQUALS EXPRESSION_CHAR •



State 152

   29 assignment: MDROIT EQUALS term •  [IF, FOR, READ, WRITE, IDENTIFIER, RBRACE, SEMICOLON]
   59 assignment_int: MDROIT EQUALS term •  [IF, FOR, READ, WRITE, IDENTIFIER, RBRACE]
   98 term: term • PLUS factor
   99     | term • MINUS factor

    PLUS   shift, and go to state 57
    MINUS  shift, and go to state 58

    IF          reduce using rule 29 (assignment)
    IF          [reduce using rule 59 (assignment_int)]
    FOR         reduce using rule 29 (assignment)
    FOR         [reduce using rule 59 (assignment_int)]
    READ        reduce using rule 29 (assignment)
    READ        [reduce using rule 59 (assignment_int)]
    WRITE       reduce using rule 29 (assignment)
    WRITE       [reduce using rule 59 (assignment_int)]
    IDENTIFIER  reduce using rule 29 (assignment)
    IDENTIFIER  [reduce using rule 59 (assignment_int)]
    RBRACE      reduce using rule 29 (assignment)
    RBRACE      [reduce using rule 59 (assignment_int)]
    $default    reduce using rule 29 (assignment)

    reduce/reduce conflict on tokens IF, FOR, READ, WRITE, IDENTIFIER, RBRACE:
       29 assignment: MDROIT EQUALS term •
       59 assignment_int: MDROIT EQUALS term •
      Example: MDROIT EQUALS term •
      First reduce derivation
        statement
        ↳ 25: assignment
              ↳ 29: MDROIT EQUALS term •
      Second reduce derivation
        statement
        ↳ 24: assignment_int
              ↳ 59: MDROIT EQUALS term •



State 153

   31 assignment: TAB EQUALS EXPRESSION_CHAR •  [IF, FOR, READ, WRITE, IDENTIFIER, RBRACE, SEMICOLON]
   61 assignment_int: TAB EQUALS EXPRESSION_CHAR •  [IF, FOR, READ, WRITE, IDENTIFIER, RBRACE]

    IF          reduce using rule 31 (assignment)
    IF          [reduce using rule 61 (assignment_int)]
    FOR         reduce using rule 31 (assignment)
    FOR         [reduce using rule 61 (assignment_int)]
    READ        reduce using rule 31 (assignment)
    READ        [reduce using rule 61 (assignment_int)]
    WRITE       reduce using rule 31 (assignment)
    WRITE       [reduce using rule 61 (assignment_int)]
    IDENTIFIER  reduce using rule 31 (assignment)
    IDENTIFIER  [reduce using rule 61 (assignment_int)]
    RBRACE      reduce using rule 31 (assignment)
    RBRACE      [reduce using rule 61 (assignment_int)]
    $default    reduce using rule 31 (assignment)

    reduce/reduce conflict on tokens IF, FOR, READ, WRITE, IDENTIFIER, RBRACE:
       31 assignment: TAB EQUALS EXPRESSION_CHAR •
       61 assignment_int: TAB EQUALS EXPRESSION_CHAR •
      Example: TAB EQUALS EXPRESSION_CHAR •
      First reduce derivation
        statement
        ↳ 25: assignment
              ↳ 31: TAB EQUALS EXPRESSION_CHAR •
      Second reduce derivation
        statement
        ↳ 24: assignment_int
              ↳ 61: TAB EQUALS EXPRESSION_CHAR •



State 154

   30 assignment: TAB EQUALS term •  [IF, FOR, READ, WRITE, IDENTIFIER, RBRACE, SEMICOLON]
   60 assignment_int: TAB EQUALS term •  [IF, FOR, READ, WRITE, IDENTIFIER, RBRACE]
   98 term: term • PLUS factor
   99     | term • MINUS factor

    PLUS   shift, and go to state 57
    MINUS  shift, and go to state 58

    IF          reduce using rule 30 (assignment)
    IF          [reduce using rule 60 (assignment_int)]
    FOR         reduce using rule 30 (assignment)
    FOR         [reduce using rule 60 (assignment_int)]
    READ        reduce using rule 30 (assignment)
    READ        [reduce using rule 60 (assignment_int)]
    WRITE       reduce using rule 30 (assignment)
    WRITE       [reduce using rule 60 (assignment_int)]
    IDENTIFIER  reduce using rule 30 (assignment)
    IDENTIFIER  [reduce using rule 60 (assignment_int)]
    RBRACE      reduce using rule 30 (assignment)
    RBRACE      [reduce using rule 60 (assignment_int)]
    $default    reduce using rule 30 (assignment)

    reduce/reduce conflict on tokens IF, FOR, READ, WRITE, IDENTIFIER, RBRACE:
       30 assignment: TAB EQUALS term •
       60 assignment_int: TAB EQUALS term •
      Example: TAB EQUALS term •
      First reduce derivation
        statement
        ↳ 25: assignment
              ↳ 30: TAB EQUALS term •
      Second reduce derivation
        statement
        ↳ 24: assignment_int
              ↳ 60: TAB EQUALS term •



State 155

  141 primary2: IDENTIFIER LBRACKET • INT_NUMBER RBRACKET

    INT_NUMBER  shift, and go to state 188


State 156

   76 NOT_EXPR: NOT NOT_EXPR •

    $default  reduce using rule 76 (NOT_EXPR)


State 157

  136 primary2: LPAREN PLUS • INT_NUMBER RPAREN
  138         | LPAREN PLUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 189
    FLOAT_NUMBER  shift, and go to state 190


State 158

  137 primary2: LPAREN MINUS • INT_NUMBER RPAREN
  139         | LPAREN MINUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 191
    FLOAT_NUMBER  shift, and go to state 192


State 159

  128 term2: term2 • PLUS factor2
  129      | term2 • MINUS factor2
  140 primary2: LPAREN term2 • RPAREN

    PLUS    shift, and go to state 176
    MINUS   shift, and go to state 177
    RPAREN  shift, and go to state 193


State 160

   72 COND: COND OR • AND_EXPR
   74 AND_EXPR: • AND_EXPR AND NOT_EXPR
   75         | • NOT_EXPR
   76 NOT_EXPR: • NOT NOT_EXPR
   77         | • comparison_expr
   78 comparison_expr: • term2 GT term1
   79                | • term2 LT term1
   80                | • term2 EQ term1
   81                | • term2 GEQ term1
   82                | • term2 LEQ term1
   83                | • term2 NEQ term1
   84                | • DROIT OP_COMP term1
   85                | • term2 OP_COMP GAUCHE
   86                | • DROIT OP_COMP GAUCHE
   87 DROIT: • CHARACTERE
   88      | • STRING_LITERAL
  127 term2: • factor2
  128      | • term2 PLUS factor2
  129      | • term2 MINUS factor2
  130 factor2: • primary2
  131        | • factor2 MULTIPLY primary2
  132        | • factor2 DIVIDE primary2
  133 primary2: • IDENTIFIER
  134         | • INT_NUMBER
  135         | • FLOAT_NUMBER
  136         | • LPAREN PLUS INT_NUMBER RPAREN
  137         | • LPAREN MINUS INT_NUMBER RPAREN
  138         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  139         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  140         | • LPAREN term2 RPAREN
  141         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER      shift, and go to state 125
    INT_NUMBER      shift, and go to state 126
    FLOAT_NUMBER    shift, and go to state 127
    CHARACTERE      shift, and go to state 128
    NOT             shift, and go to state 129
    LPAREN          shift, and go to state 130
    STRING_LITERAL  shift, and go to state 131

    AND_EXPR         go to state 194
    NOT_EXPR         go to state 134
    comparison_expr  go to state 135
    DROIT            go to state 136
    term2            go to state 137
    factor2          go to state 138
    primary2         go to state 139


State 161

   55 condition: IF LPAREN COND RPAREN • LBRACE $@1 instruction_section RBRACE elsebloc

    LBRACE  shift, and go to state 195


State 162

   74 AND_EXPR: AND_EXPR AND • NOT_EXPR
   76 NOT_EXPR: • NOT NOT_EXPR
   77         | • comparison_expr
   78 comparison_expr: • term2 GT term1
   79                | • term2 LT term1
   80                | • term2 EQ term1
   81                | • term2 GEQ term1
   82                | • term2 LEQ term1
   83                | • term2 NEQ term1
   84                | • DROIT OP_COMP term1
   85                | • term2 OP_COMP GAUCHE
   86                | • DROIT OP_COMP GAUCHE
   87 DROIT: • CHARACTERE
   88      | • STRING_LITERAL
  127 term2: • factor2
  128      | • term2 PLUS factor2
  129      | • term2 MINUS factor2
  130 factor2: • primary2
  131        | • factor2 MULTIPLY primary2
  132        | • factor2 DIVIDE primary2
  133 primary2: • IDENTIFIER
  134         | • INT_NUMBER
  135         | • FLOAT_NUMBER
  136         | • LPAREN PLUS INT_NUMBER RPAREN
  137         | • LPAREN MINUS INT_NUMBER RPAREN
  138         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  139         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  140         | • LPAREN term2 RPAREN
  141         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER      shift, and go to state 125
    INT_NUMBER      shift, and go to state 126
    FLOAT_NUMBER    shift, and go to state 127
    CHARACTERE      shift, and go to state 128
    NOT             shift, and go to state 129
    LPAREN          shift, and go to state 130
    STRING_LITERAL  shift, and go to state 131

    NOT_EXPR         go to state 196
    comparison_expr  go to state 135
    DROIT            go to state 136
    term2            go to state 137
    factor2          go to state 138
    primary2         go to state 139


State 163

   95 OP_COMP: EQ •

    $default  reduce using rule 95 (OP_COMP)


State 164

   96 OP_COMP: NEQ •

    $default  reduce using rule 96 (OP_COMP)


State 165

   93 OP_COMP: GEQ •

    $default  reduce using rule 93 (OP_COMP)


State 166

   92 OP_COMP: LT •

    $default  reduce using rule 92 (OP_COMP)


State 167

   94 OP_COMP: LEQ •

    $default  reduce using rule 94 (OP_COMP)


State 168

   91 OP_COMP: GT •

    $default  reduce using rule 91 (OP_COMP)


State 169

   84 comparison_expr: DROIT OP_COMP • term1
   86                | DROIT OP_COMP • GAUCHE
   89 GAUCHE: • CHARACTERE
   90       | • STRING_LITERAL
  112 term1: • factor1
  113      | • term1 PLUS factor1
  114      | • term1 MINUS factor1
  115 factor1: • primary1
  116        | • factor1 MULTIPLY primary1
  117        | • factor1 DIVIDE primary1
  118 primary1: • IDENTIFIER
  119         | • INT_NUMBER
  120         | • FLOAT_NUMBER
  121         | • LPAREN PLUS INT_NUMBER RPAREN
  122         | • LPAREN MINUS INT_NUMBER RPAREN
  123         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  124         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  125         | • LPAREN term1 RPAREN
  126         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER      shift, and go to state 197
    INT_NUMBER      shift, and go to state 198
    FLOAT_NUMBER    shift, and go to state 199
    CHARACTERE      shift, and go to state 200
    LPAREN          shift, and go to state 201
    STRING_LITERAL  shift, and go to state 202

    GAUCHE    go to state 203
    term1     go to state 204
    factor1   go to state 205
    primary1  go to state 206


State 170

   80 comparison_expr: term2 EQ • term1
   95 OP_COMP: EQ •  [CHARACTERE, STRING_LITERAL]
  112 term1: • factor1
  113      | • term1 PLUS factor1
  114      | • term1 MINUS factor1
  115 factor1: • primary1
  116        | • factor1 MULTIPLY primary1
  117        | • factor1 DIVIDE primary1
  118 primary1: • IDENTIFIER
  119         | • INT_NUMBER
  120         | • FLOAT_NUMBER
  121         | • LPAREN PLUS INT_NUMBER RPAREN
  122         | • LPAREN MINUS INT_NUMBER RPAREN
  123         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  124         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  125         | • LPAREN term1 RPAREN
  126         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    LPAREN        shift, and go to state 201

    $default  reduce using rule 95 (OP_COMP)

    term1     go to state 207
    factor1   go to state 205
    primary1  go to state 206


State 171

   83 comparison_expr: term2 NEQ • term1
   96 OP_COMP: NEQ •  [CHARACTERE, STRING_LITERAL]
  112 term1: • factor1
  113      | • term1 PLUS factor1
  114      | • term1 MINUS factor1
  115 factor1: • primary1
  116        | • factor1 MULTIPLY primary1
  117        | • factor1 DIVIDE primary1
  118 primary1: • IDENTIFIER
  119         | • INT_NUMBER
  120         | • FLOAT_NUMBER
  121         | • LPAREN PLUS INT_NUMBER RPAREN
  122         | • LPAREN MINUS INT_NUMBER RPAREN
  123         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  124         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  125         | • LPAREN term1 RPAREN
  126         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    LPAREN        shift, and go to state 201

    $default  reduce using rule 96 (OP_COMP)

    term1     go to state 208
    factor1   go to state 205
    primary1  go to state 206


State 172

   81 comparison_expr: term2 GEQ • term1
   93 OP_COMP: GEQ •  [CHARACTERE, STRING_LITERAL]
  112 term1: • factor1
  113      | • term1 PLUS factor1
  114      | • term1 MINUS factor1
  115 factor1: • primary1
  116        | • factor1 MULTIPLY primary1
  117        | • factor1 DIVIDE primary1
  118 primary1: • IDENTIFIER
  119         | • INT_NUMBER
  120         | • FLOAT_NUMBER
  121         | • LPAREN PLUS INT_NUMBER RPAREN
  122         | • LPAREN MINUS INT_NUMBER RPAREN
  123         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  124         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  125         | • LPAREN term1 RPAREN
  126         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    LPAREN        shift, and go to state 201

    $default  reduce using rule 93 (OP_COMP)

    term1     go to state 209
    factor1   go to state 205
    primary1  go to state 206


State 173

   79 comparison_expr: term2 LT • term1
   92 OP_COMP: LT •  [CHARACTERE, STRING_LITERAL]
  112 term1: • factor1
  113      | • term1 PLUS factor1
  114      | • term1 MINUS factor1
  115 factor1: • primary1
  116        | • factor1 MULTIPLY primary1
  117        | • factor1 DIVIDE primary1
  118 primary1: • IDENTIFIER
  119         | • INT_NUMBER
  120         | • FLOAT_NUMBER
  121         | • LPAREN PLUS INT_NUMBER RPAREN
  122         | • LPAREN MINUS INT_NUMBER RPAREN
  123         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  124         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  125         | • LPAREN term1 RPAREN
  126         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    LPAREN        shift, and go to state 201

    $default  reduce using rule 92 (OP_COMP)

    term1     go to state 210
    factor1   go to state 205
    primary1  go to state 206


State 174

   82 comparison_expr: term2 LEQ • term1
   94 OP_COMP: LEQ •  [CHARACTERE, STRING_LITERAL]
  112 term1: • factor1
  113      | • term1 PLUS factor1
  114      | • term1 MINUS factor1
  115 factor1: • primary1
  116        | • factor1 MULTIPLY primary1
  117        | • factor1 DIVIDE primary1
  118 primary1: • IDENTIFIER
  119         | • INT_NUMBER
  120         | • FLOAT_NUMBER
  121         | • LPAREN PLUS INT_NUMBER RPAREN
  122         | • LPAREN MINUS INT_NUMBER RPAREN
  123         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  124         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  125         | • LPAREN term1 RPAREN
  126         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    LPAREN        shift, and go to state 201

    $default  reduce using rule 94 (OP_COMP)

    term1     go to state 211
    factor1   go to state 205
    primary1  go to state 206


State 175

   78 comparison_expr: term2 GT • term1
   91 OP_COMP: GT •  [CHARACTERE, STRING_LITERAL]
  112 term1: • factor1
  113      | • term1 PLUS factor1
  114      | • term1 MINUS factor1
  115 factor1: • primary1
  116        | • factor1 MULTIPLY primary1
  117        | • factor1 DIVIDE primary1
  118 primary1: • IDENTIFIER
  119         | • INT_NUMBER
  120         | • FLOAT_NUMBER
  121         | • LPAREN PLUS INT_NUMBER RPAREN
  122         | • LPAREN MINUS INT_NUMBER RPAREN
  123         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  124         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  125         | • LPAREN term1 RPAREN
  126         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    LPAREN        shift, and go to state 201

    $default  reduce using rule 91 (OP_COMP)

    term1     go to state 212
    factor1   go to state 205
    primary1  go to state 206


State 176

  128 term2: term2 PLUS • factor2
  130 factor2: • primary2
  131        | • factor2 MULTIPLY primary2
  132        | • factor2 DIVIDE primary2
  133 primary2: • IDENTIFIER
  134         | • INT_NUMBER
  135         | • FLOAT_NUMBER
  136         | • LPAREN PLUS INT_NUMBER RPAREN
  137         | • LPAREN MINUS INT_NUMBER RPAREN
  138         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  139         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  140         | • LPAREN term2 RPAREN
  141         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 125
    INT_NUMBER    shift, and go to state 126
    FLOAT_NUMBER  shift, and go to state 127
    LPAREN        shift, and go to state 130

    factor2   go to state 213
    primary2  go to state 139


State 177

  129 term2: term2 MINUS • factor2
  130 factor2: • primary2
  131        | • factor2 MULTIPLY primary2
  132        | • factor2 DIVIDE primary2
  133 primary2: • IDENTIFIER
  134         | • INT_NUMBER
  135         | • FLOAT_NUMBER
  136         | • LPAREN PLUS INT_NUMBER RPAREN
  137         | • LPAREN MINUS INT_NUMBER RPAREN
  138         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  139         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  140         | • LPAREN term2 RPAREN
  141         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 125
    INT_NUMBER    shift, and go to state 126
    FLOAT_NUMBER  shift, and go to state 127
    LPAREN        shift, and go to state 130

    factor2   go to state 214
    primary2  go to state 139


State 178

   85 comparison_expr: term2 OP_COMP • GAUCHE
   89 GAUCHE: • CHARACTERE
   90       | • STRING_LITERAL

    CHARACTERE      shift, and go to state 200
    STRING_LITERAL  shift, and go to state 202

    GAUCHE  go to state 215


State 179

  131 factor2: factor2 MULTIPLY • primary2
  133 primary2: • IDENTIFIER
  134         | • INT_NUMBER
  135         | • FLOAT_NUMBER
  136         | • LPAREN PLUS INT_NUMBER RPAREN
  137         | • LPAREN MINUS INT_NUMBER RPAREN
  138         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  139         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  140         | • LPAREN term2 RPAREN
  141         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 125
    INT_NUMBER    shift, and go to state 126
    FLOAT_NUMBER  shift, and go to state 127
    LPAREN        shift, and go to state 130

    primary2  go to state 216


State 180

  132 factor2: factor2 DIVIDE • primary2
  133 primary2: • IDENTIFIER
  134         | • INT_NUMBER
  135         | • FLOAT_NUMBER
  136         | • LPAREN PLUS INT_NUMBER RPAREN
  137         | • LPAREN MINUS INT_NUMBER RPAREN
  138         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  139         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  140         | • LPAREN term2 RPAREN
  141         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 125
    INT_NUMBER    shift, and go to state 126
    FLOAT_NUMBER  shift, and go to state 127
    LPAREN        shift, and go to state 130

    primary2  go to state 217


State 181

   52 EXPRESSION_CHAR: • CHARACTERE
   53                | • STRING_LITERAL
   59 assignment_int: MDROIT EQUALS • term
   62               | MDROIT EQUALS • EXPRESSION_CHAR
   97 term: • factor
   98     | • term PLUS factor
   99     | • term MINUS factor
  100 factor: • primary
  101       | • factor MULTIPLY primary
  102       | • factor DIVIDE primary
  103 primary: • IDENTIFIER
  104        | • INT_NUMBER
  105        | • FLOAT_NUMBER
  106        | • LPAREN PLUS INT_NUMBER RPAREN
  107        | • LPAREN MINUS INT_NUMBER RPAREN
  108        | • LPAREN PLUS FLOAT_NUMBER RPAREN
  109        | • LPAREN MINUS FLOAT_NUMBER RPAREN
  110        | • LPAREN term RPAREN
  111        | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER      shift, and go to state 35
    INT_NUMBER      shift, and go to state 36
    FLOAT_NUMBER    shift, and go to state 37
    CHARACTERE      shift, and go to state 149
    LPAREN          shift, and go to state 38
    STRING_LITERAL  shift, and go to state 150

    EXPRESSION_CHAR  go to state 218
    term             go to state 219
    factor           go to state 40
    primary          go to state 41


State 182

   52 EXPRESSION_CHAR: • CHARACTERE
   53                | • STRING_LITERAL
   60 assignment_int: TAB EQUALS • term
   61               | TAB EQUALS • EXPRESSION_CHAR
   97 term: • factor
   98     | • term PLUS factor
   99     | • term MINUS factor
  100 factor: • primary
  101       | • factor MULTIPLY primary
  102       | • factor DIVIDE primary
  103 primary: • IDENTIFIER
  104        | • INT_NUMBER
  105        | • FLOAT_NUMBER
  106        | • LPAREN PLUS INT_NUMBER RPAREN
  107        | • LPAREN MINUS INT_NUMBER RPAREN
  108        | • LPAREN PLUS FLOAT_NUMBER RPAREN
  109        | • LPAREN MINUS FLOAT_NUMBER RPAREN
  110        | • LPAREN term RPAREN
  111        | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER      shift, and go to state 35
    INT_NUMBER      shift, and go to state 36
    FLOAT_NUMBER    shift, and go to state 37
    CHARACTERE      shift, and go to state 149
    LPAREN          shift, and go to state 38
    STRING_LITERAL  shift, and go to state 150

    EXPRESSION_CHAR  go to state 220
    term             go to state 221
    factor           go to state 40
    primary          go to state 41


State 183

   65 loop: FOR LPAREN assignment_int COLON • term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE
  159 term3: • factor3
  160      | • term3 PLUS factor3
  161      | • term3 MINUS factor3
  162 factor3: • primary3
  163        | • factor3 MULTIPLY primary3
  164        | • factor3 DIVIDE primary3
  165 primary3: • IDENTIFIER
  166         | • INT_NUMBER
  167         | • FLOAT_NUMBER
  168         | • LPAREN PLUS INT_NUMBER RPAREN
  169         | • LPAREN MINUS INT_NUMBER RPAREN
  170         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  171         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  172         | • LPAREN term3 RPAREN
  173         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  174         | • STRING_LITERAL
  175         | • CHARACTERE

    IDENTIFIER      shift, and go to state 222
    INT_NUMBER      shift, and go to state 223
    FLOAT_NUMBER    shift, and go to state 224
    CHARACTERE      shift, and go to state 225
    LPAREN          shift, and go to state 226
    STRING_LITERAL  shift, and go to state 227

    term3     go to state 228
    factor3   go to state 229
    primary3  go to state 230


State 184

   66 io_statement: READ LPAREN IDENTIFIER RPAREN •

    $default  reduce using rule 66 (io_statement)


State 185

   67 io_statement: WRITE LPAREN io_expr_list RPAREN •

    $default  reduce using rule 67 (io_statement)


State 186

   68 io_expr_list: • io_expr
   69             | • io_expr COMMA io_expr_list
   69             | io_expr COMMA • io_expr_list
   70 io_expr: • IDENTIFIER
   71        | • STRING_LITERAL

    IDENTIFIER      shift, and go to state 144
    STRING_LITERAL  shift, and go to state 145

    io_expr_list  go to state 231
    io_expr       go to state 147


State 187

   34 TAB: IDENTIFIER LBRACKET termtab RBRACKET •

    $default  reduce using rule 34 (TAB)


State 188

  141 primary2: IDENTIFIER LBRACKET INT_NUMBER • RBRACKET

    RBRACKET  shift, and go to state 232


State 189

  136 primary2: LPAREN PLUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 233


State 190

  138 primary2: LPAREN PLUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 234


State 191

  137 primary2: LPAREN MINUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 235


State 192

  139 primary2: LPAREN MINUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 236


State 193

  140 primary2: LPAREN term2 RPAREN •

    $default  reduce using rule 140 (primary2)


State 194

   72 COND: COND OR AND_EXPR •  [OR, RPAREN]
   74 AND_EXPR: AND_EXPR • AND NOT_EXPR

    AND  shift, and go to state 162

    $default  reduce using rule 72 (COND)


State 195

   54 $@1: ε •
   55 condition: IF LPAREN COND RPAREN LBRACE • $@1 instruction_section RBRACE elsebloc

    $default  reduce using rule 54 ($@1)

    $@1  go to state 237


State 196

   74 AND_EXPR: AND_EXPR AND NOT_EXPR •

    $default  reduce using rule 74 (AND_EXPR)


State 197

  118 primary1: IDENTIFIER •  [AND, OR, PLUS, MINUS, MULTIPLY, DIVIDE, RPAREN]
  126         | IDENTIFIER • LBRACKET INT_NUMBER RBRACKET

    LBRACKET  shift, and go to state 238

    $default  reduce using rule 118 (primary1)


State 198

  119 primary1: INT_NUMBER •

    $default  reduce using rule 119 (primary1)


State 199

  120 primary1: FLOAT_NUMBER •

    $default  reduce using rule 120 (primary1)


State 200

   89 GAUCHE: CHARACTERE •

    $default  reduce using rule 89 (GAUCHE)


State 201

  112 term1: • factor1
  113      | • term1 PLUS factor1
  114      | • term1 MINUS factor1
  115 factor1: • primary1
  116        | • factor1 MULTIPLY primary1
  117        | • factor1 DIVIDE primary1
  118 primary1: • IDENTIFIER
  119         | • INT_NUMBER
  120         | • FLOAT_NUMBER
  121         | • LPAREN PLUS INT_NUMBER RPAREN
  121         | LPAREN • PLUS INT_NUMBER RPAREN
  122         | • LPAREN MINUS INT_NUMBER RPAREN
  122         | LPAREN • MINUS INT_NUMBER RPAREN
  123         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  123         | LPAREN • PLUS FLOAT_NUMBER RPAREN
  124         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  124         | LPAREN • MINUS FLOAT_NUMBER RPAREN
  125         | • LPAREN term1 RPAREN
  125         | LPAREN • term1 RPAREN
  126         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    PLUS          shift, and go to state 239
    MINUS         shift, and go to state 240
    LPAREN        shift, and go to state 201

    term1     go to state 241
    factor1   go to state 205
    primary1  go to state 206


State 202

   90 GAUCHE: STRING_LITERAL •

    $default  reduce using rule 90 (GAUCHE)


State 203

   86 comparison_expr: DROIT OP_COMP GAUCHE •

    $default  reduce using rule 86 (comparison_expr)


State 204

   84 comparison_expr: DROIT OP_COMP term1 •  [AND, OR, RPAREN]
  113 term1: term1 • PLUS factor1
  114      | term1 • MINUS factor1

    PLUS   shift, and go to state 242
    MINUS  shift, and go to state 243

    $default  reduce using rule 84 (comparison_expr)


State 205

  112 term1: factor1 •  [AND, OR, PLUS, MINUS, RPAREN]
  116 factor1: factor1 • MULTIPLY primary1
  117        | factor1 • DIVIDE primary1

    MULTIPLY  shift, and go to state 244
    DIVIDE    shift, and go to state 245

    $default  reduce using rule 112 (term1)


State 206

  115 factor1: primary1 •

    $default  reduce using rule 115 (factor1)


State 207

   80 comparison_expr: term2 EQ term1 •  [AND, OR, RPAREN]
  113 term1: term1 • PLUS factor1
  114      | term1 • MINUS factor1

    PLUS   shift, and go to state 242
    MINUS  shift, and go to state 243

    $default  reduce using rule 80 (comparison_expr)


State 208

   83 comparison_expr: term2 NEQ term1 •  [AND, OR, RPAREN]
  113 term1: term1 • PLUS factor1
  114      | term1 • MINUS factor1

    PLUS   shift, and go to state 242
    MINUS  shift, and go to state 243

    $default  reduce using rule 83 (comparison_expr)


State 209

   81 comparison_expr: term2 GEQ term1 •  [AND, OR, RPAREN]
  113 term1: term1 • PLUS factor1
  114      | term1 • MINUS factor1

    PLUS   shift, and go to state 242
    MINUS  shift, and go to state 243

    $default  reduce using rule 81 (comparison_expr)


State 210

   79 comparison_expr: term2 LT term1 •  [AND, OR, RPAREN]
  113 term1: term1 • PLUS factor1
  114      | term1 • MINUS factor1

    PLUS   shift, and go to state 242
    MINUS  shift, and go to state 243

    $default  reduce using rule 79 (comparison_expr)


State 211

   82 comparison_expr: term2 LEQ term1 •  [AND, OR, RPAREN]
  113 term1: term1 • PLUS factor1
  114      | term1 • MINUS factor1

    PLUS   shift, and go to state 242
    MINUS  shift, and go to state 243

    $default  reduce using rule 82 (comparison_expr)


State 212

   78 comparison_expr: term2 GT term1 •  [AND, OR, RPAREN]
  113 term1: term1 • PLUS factor1
  114      | term1 • MINUS factor1

    PLUS   shift, and go to state 242
    MINUS  shift, and go to state 243

    $default  reduce using rule 78 (comparison_expr)


State 213

  128 term2: term2 PLUS factor2 •  [EQ, NEQ, GEQ, LT, LEQ, GT, PLUS, MINUS, RPAREN]
  131 factor2: factor2 • MULTIPLY primary2
  132        | factor2 • DIVIDE primary2

    MULTIPLY  shift, and go to state 179
    DIVIDE    shift, and go to state 180

    $default  reduce using rule 128 (term2)


State 214

  129 term2: term2 MINUS factor2 •  [EQ, NEQ, GEQ, LT, LEQ, GT, PLUS, MINUS, RPAREN]
  131 factor2: factor2 • MULTIPLY primary2
  132        | factor2 • DIVIDE primary2

    MULTIPLY  shift, and go to state 179
    DIVIDE    shift, and go to state 180

    $default  reduce using rule 129 (term2)


State 215

   85 comparison_expr: term2 OP_COMP GAUCHE •

    $default  reduce using rule 85 (comparison_expr)


State 216

  131 factor2: factor2 MULTIPLY primary2 •

    $default  reduce using rule 131 (factor2)


State 217

  132 factor2: factor2 DIVIDE primary2 •

    $default  reduce using rule 132 (factor2)


State 218

   62 assignment_int: MDROIT EQUALS EXPRESSION_CHAR •

    $default  reduce using rule 62 (assignment_int)


State 219

   59 assignment_int: MDROIT EQUALS term •  [COLON]
   98 term: term • PLUS factor
   99     | term • MINUS factor

    PLUS   shift, and go to state 57
    MINUS  shift, and go to state 58

    $default  reduce using rule 59 (assignment_int)


State 220

   61 assignment_int: TAB EQUALS EXPRESSION_CHAR •

    $default  reduce using rule 61 (assignment_int)


State 221

   60 assignment_int: TAB EQUALS term •  [COLON]
   98 term: term • PLUS factor
   99     | term • MINUS factor

    PLUS   shift, and go to state 57
    MINUS  shift, and go to state 58

    $default  reduce using rule 60 (assignment_int)


State 222

  165 primary3: IDENTIFIER •  [PLUS, MINUS, MULTIPLY, DIVIDE, RPAREN, COLON]
  173         | IDENTIFIER • LBRACKET INT_NUMBER RBRACKET

    LBRACKET  shift, and go to state 246

    $default  reduce using rule 165 (primary3)


State 223

  166 primary3: INT_NUMBER •

    $default  reduce using rule 166 (primary3)


State 224

  167 primary3: FLOAT_NUMBER •

    $default  reduce using rule 167 (primary3)


State 225

  175 primary3: CHARACTERE •

    $default  reduce using rule 175 (primary3)


State 226

  159 term3: • factor3
  160      | • term3 PLUS factor3
  161      | • term3 MINUS factor3
  162 factor3: • primary3
  163        | • factor3 MULTIPLY primary3
  164        | • factor3 DIVIDE primary3
  165 primary3: • IDENTIFIER
  166         | • INT_NUMBER
  167         | • FLOAT_NUMBER
  168         | • LPAREN PLUS INT_NUMBER RPAREN
  168         | LPAREN • PLUS INT_NUMBER RPAREN
  169         | • LPAREN MINUS INT_NUMBER RPAREN
  169         | LPAREN • MINUS INT_NUMBER RPAREN
  170         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  170         | LPAREN • PLUS FLOAT_NUMBER RPAREN
  171         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  171         | LPAREN • MINUS FLOAT_NUMBER RPAREN
  172         | • LPAREN term3 RPAREN
  172         | LPAREN • term3 RPAREN
  173         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  174         | • STRING_LITERAL
  175         | • CHARACTERE

    IDENTIFIER      shift, and go to state 222
    INT_NUMBER      shift, and go to state 223
    FLOAT_NUMBER    shift, and go to state 224
    CHARACTERE      shift, and go to state 225
    PLUS            shift, and go to state 247
    MINUS           shift, and go to state 248
    LPAREN          shift, and go to state 226
    STRING_LITERAL  shift, and go to state 227

    term3     go to state 249
    factor3   go to state 229
    primary3  go to state 230


State 227

  174 primary3: STRING_LITERAL •

    $default  reduce using rule 174 (primary3)


State 228

   63 $@3: ε •  [COLON]
   65 loop: FOR LPAREN assignment_int COLON term3 • $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE
  160 term3: term3 • PLUS factor3
  161      | term3 • MINUS factor3

    PLUS   shift, and go to state 250
    MINUS  shift, and go to state 251

    $default  reduce using rule 63 ($@3)

    $@3  go to state 252


State 229

  159 term3: factor3 •  [PLUS, MINUS, RPAREN, COLON]
  163 factor3: factor3 • MULTIPLY primary3
  164        | factor3 • DIVIDE primary3

    MULTIPLY  shift, and go to state 253
    DIVIDE    shift, and go to state 254

    $default  reduce using rule 159 (term3)


State 230

  162 factor3: primary3 •

    $default  reduce using rule 162 (factor3)


State 231

   69 io_expr_list: io_expr COMMA io_expr_list •

    $default  reduce using rule 69 (io_expr_list)


State 232

  141 primary2: IDENTIFIER LBRACKET INT_NUMBER RBRACKET •

    $default  reduce using rule 141 (primary2)


State 233

  136 primary2: LPAREN PLUS INT_NUMBER RPAREN •

    $default  reduce using rule 136 (primary2)


State 234

  138 primary2: LPAREN PLUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 138 (primary2)


State 235

  137 primary2: LPAREN MINUS INT_NUMBER RPAREN •

    $default  reduce using rule 137 (primary2)


State 236

  139 primary2: LPAREN MINUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 139 (primary2)


State 237

   11 instruction_section: • statement
   12                    | • statement instruction_section
   20 statement: • assignment SEMICOLON
   21          | • condition SEMICOLON
   22          | • loop SEMICOLON
   23          | • io_statement SEMICOLON
   24          | • assignment_int
   25          | • assignment
   26          | • condition
   27          | • loop
   28          | • io_statement
   29 assignment: • MDROIT EQUALS term
   30           | • TAB EQUALS term
   31           | • TAB EQUALS EXPRESSION_CHAR
   32           | • MDROIT EQUALS EXPRESSION_CHAR
   33 MDROIT: • IDENTIFIER
   34 TAB: • IDENTIFIER LBRACKET termtab RBRACKET
   55 condition: • IF LPAREN COND RPAREN LBRACE $@1 instruction_section RBRACE elsebloc
   55          | IF LPAREN COND RPAREN LBRACE $@1 • instruction_section RBRACE elsebloc
   59 assignment_int: • MDROIT EQUALS term
   60               | • TAB EQUALS term
   61               | • TAB EQUALS EXPRESSION_CHAR
   62               | • MDROIT EQUALS EXPRESSION_CHAR
   65 loop: • FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE
   66 io_statement: • READ LPAREN IDENTIFIER RPAREN
   67             | • WRITE LPAREN io_expr_list RPAREN

    IF          shift, and go to state 98
    FOR         shift, and go to state 99
    READ        shift, and go to state 100
    WRITE       shift, and go to state 101
    IDENTIFIER  shift, and go to state 102

    instruction_section  go to state 255
    statement            go to state 104
    assignment           go to state 105
    MDROIT               go to state 106
    TAB                  go to state 107
    condition            go to state 108
    assignment_int       go to state 109
    loop                 go to state 110
    io_statement         go to state 111


State 238

  126 primary1: IDENTIFIER LBRACKET • INT_NUMBER RBRACKET

    INT_NUMBER  shift, and go to state 256


State 239

  121 primary1: LPAREN PLUS • INT_NUMBER RPAREN
  123         | LPAREN PLUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 257
    FLOAT_NUMBER  shift, and go to state 258


State 240

  122 primary1: LPAREN MINUS • INT_NUMBER RPAREN
  124         | LPAREN MINUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 259
    FLOAT_NUMBER  shift, and go to state 260


State 241

  113 term1: term1 • PLUS factor1
  114      | term1 • MINUS factor1
  125 primary1: LPAREN term1 • RPAREN

    PLUS    shift, and go to state 242
    MINUS   shift, and go to state 243
    RPAREN  shift, and go to state 261


State 242

  113 term1: term1 PLUS • factor1
  115 factor1: • primary1
  116        | • factor1 MULTIPLY primary1
  117        | • factor1 DIVIDE primary1
  118 primary1: • IDENTIFIER
  119         | • INT_NUMBER
  120         | • FLOAT_NUMBER
  121         | • LPAREN PLUS INT_NUMBER RPAREN
  122         | • LPAREN MINUS INT_NUMBER RPAREN
  123         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  124         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  125         | • LPAREN term1 RPAREN
  126         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    LPAREN        shift, and go to state 201

    factor1   go to state 262
    primary1  go to state 206


State 243

  114 term1: term1 MINUS • factor1
  115 factor1: • primary1
  116        | • factor1 MULTIPLY primary1
  117        | • factor1 DIVIDE primary1
  118 primary1: • IDENTIFIER
  119         | • INT_NUMBER
  120         | • FLOAT_NUMBER
  121         | • LPAREN PLUS INT_NUMBER RPAREN
  122         | • LPAREN MINUS INT_NUMBER RPAREN
  123         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  124         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  125         | • LPAREN term1 RPAREN
  126         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    LPAREN        shift, and go to state 201

    factor1   go to state 263
    primary1  go to state 206


State 244

  116 factor1: factor1 MULTIPLY • primary1
  118 primary1: • IDENTIFIER
  119         | • INT_NUMBER
  120         | • FLOAT_NUMBER
  121         | • LPAREN PLUS INT_NUMBER RPAREN
  122         | • LPAREN MINUS INT_NUMBER RPAREN
  123         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  124         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  125         | • LPAREN term1 RPAREN
  126         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    LPAREN        shift, and go to state 201

    primary1  go to state 264


State 245

  117 factor1: factor1 DIVIDE • primary1
  118 primary1: • IDENTIFIER
  119         | • INT_NUMBER
  120         | • FLOAT_NUMBER
  121         | • LPAREN PLUS INT_NUMBER RPAREN
  122         | • LPAREN MINUS INT_NUMBER RPAREN
  123         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  124         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  125         | • LPAREN term1 RPAREN
  126         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET

    IDENTIFIER    shift, and go to state 197
    INT_NUMBER    shift, and go to state 198
    FLOAT_NUMBER  shift, and go to state 199
    LPAREN        shift, and go to state 201

    primary1  go to state 265


State 246

  173 primary3: IDENTIFIER LBRACKET • INT_NUMBER RBRACKET

    INT_NUMBER  shift, and go to state 266


State 247

  168 primary3: LPAREN PLUS • INT_NUMBER RPAREN
  170         | LPAREN PLUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 267
    FLOAT_NUMBER  shift, and go to state 268


State 248

  169 primary3: LPAREN MINUS • INT_NUMBER RPAREN
  171         | LPAREN MINUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 269
    FLOAT_NUMBER  shift, and go to state 270


State 249

  160 term3: term3 • PLUS factor3
  161      | term3 • MINUS factor3
  172 primary3: LPAREN term3 • RPAREN

    PLUS    shift, and go to state 250
    MINUS   shift, and go to state 251
    RPAREN  shift, and go to state 271


State 250

  160 term3: term3 PLUS • factor3
  162 factor3: • primary3
  163        | • factor3 MULTIPLY primary3
  164        | • factor3 DIVIDE primary3
  165 primary3: • IDENTIFIER
  166         | • INT_NUMBER
  167         | • FLOAT_NUMBER
  168         | • LPAREN PLUS INT_NUMBER RPAREN
  169         | • LPAREN MINUS INT_NUMBER RPAREN
  170         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  171         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  172         | • LPAREN term3 RPAREN
  173         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  174         | • STRING_LITERAL
  175         | • CHARACTERE

    IDENTIFIER      shift, and go to state 222
    INT_NUMBER      shift, and go to state 223
    FLOAT_NUMBER    shift, and go to state 224
    CHARACTERE      shift, and go to state 225
    LPAREN          shift, and go to state 226
    STRING_LITERAL  shift, and go to state 227

    factor3   go to state 272
    primary3  go to state 230


State 251

  161 term3: term3 MINUS • factor3
  162 factor3: • primary3
  163        | • factor3 MULTIPLY primary3
  164        | • factor3 DIVIDE primary3
  165 primary3: • IDENTIFIER
  166         | • INT_NUMBER
  167         | • FLOAT_NUMBER
  168         | • LPAREN PLUS INT_NUMBER RPAREN
  169         | • LPAREN MINUS INT_NUMBER RPAREN
  170         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  171         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  172         | • LPAREN term3 RPAREN
  173         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  174         | • STRING_LITERAL
  175         | • CHARACTERE

    IDENTIFIER      shift, and go to state 222
    INT_NUMBER      shift, and go to state 223
    FLOAT_NUMBER    shift, and go to state 224
    CHARACTERE      shift, and go to state 225
    LPAREN          shift, and go to state 226
    STRING_LITERAL  shift, and go to state 227

    factor3   go to state 273
    primary3  go to state 230


State 252

   65 loop: FOR LPAREN assignment_int COLON term3 $@3 • COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE

    COLON  shift, and go to state 274


State 253

  163 factor3: factor3 MULTIPLY • primary3
  165 primary3: • IDENTIFIER
  166         | • INT_NUMBER
  167         | • FLOAT_NUMBER
  168         | • LPAREN PLUS INT_NUMBER RPAREN
  169         | • LPAREN MINUS INT_NUMBER RPAREN
  170         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  171         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  172         | • LPAREN term3 RPAREN
  173         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  174         | • STRING_LITERAL
  175         | • CHARACTERE

    IDENTIFIER      shift, and go to state 222
    INT_NUMBER      shift, and go to state 223
    FLOAT_NUMBER    shift, and go to state 224
    CHARACTERE      shift, and go to state 225
    LPAREN          shift, and go to state 226
    STRING_LITERAL  shift, and go to state 227

    primary3  go to state 275


State 254

  164 factor3: factor3 DIVIDE • primary3
  165 primary3: • IDENTIFIER
  166         | • INT_NUMBER
  167         | • FLOAT_NUMBER
  168         | • LPAREN PLUS INT_NUMBER RPAREN
  169         | • LPAREN MINUS INT_NUMBER RPAREN
  170         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  171         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  172         | • LPAREN term3 RPAREN
  173         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  174         | • STRING_LITERAL
  175         | • CHARACTERE

    IDENTIFIER      shift, and go to state 222
    INT_NUMBER      shift, and go to state 223
    FLOAT_NUMBER    shift, and go to state 224
    CHARACTERE      shift, and go to state 225
    LPAREN          shift, and go to state 226
    STRING_LITERAL  shift, and go to state 227

    primary3  go to state 276


State 255

   55 condition: IF LPAREN COND RPAREN LBRACE $@1 instruction_section • RBRACE elsebloc

    RBRACE  shift, and go to state 277


State 256

  126 primary1: IDENTIFIER LBRACKET INT_NUMBER • RBRACKET

    RBRACKET  shift, and go to state 278


State 257

  121 primary1: LPAREN PLUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 279


State 258

  123 primary1: LPAREN PLUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 280


State 259

  122 primary1: LPAREN MINUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 281


State 260

  124 primary1: LPAREN MINUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 282


State 261

  125 primary1: LPAREN term1 RPAREN •

    $default  reduce using rule 125 (primary1)


State 262

  113 term1: term1 PLUS factor1 •  [AND, OR, PLUS, MINUS, RPAREN]
  116 factor1: factor1 • MULTIPLY primary1
  117        | factor1 • DIVIDE primary1

    MULTIPLY  shift, and go to state 244
    DIVIDE    shift, and go to state 245

    $default  reduce using rule 113 (term1)


State 263

  114 term1: term1 MINUS factor1 •  [AND, OR, PLUS, MINUS, RPAREN]
  116 factor1: factor1 • MULTIPLY primary1
  117        | factor1 • DIVIDE primary1

    MULTIPLY  shift, and go to state 244
    DIVIDE    shift, and go to state 245

    $default  reduce using rule 114 (term1)


State 264

  116 factor1: factor1 MULTIPLY primary1 •

    $default  reduce using rule 116 (factor1)


State 265

  117 factor1: factor1 DIVIDE primary1 •

    $default  reduce using rule 117 (factor1)


State 266

  173 primary3: IDENTIFIER LBRACKET INT_NUMBER • RBRACKET

    RBRACKET  shift, and go to state 283


State 267

  168 primary3: LPAREN PLUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 284


State 268

  170 primary3: LPAREN PLUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 285


State 269

  169 primary3: LPAREN MINUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 286


State 270

  171 primary3: LPAREN MINUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 287


State 271

  172 primary3: LPAREN term3 RPAREN •

    $default  reduce using rule 172 (primary3)


State 272

  160 term3: term3 PLUS factor3 •  [PLUS, MINUS, RPAREN, COLON]
  163 factor3: factor3 • MULTIPLY primary3
  164        | factor3 • DIVIDE primary3

    MULTIPLY  shift, and go to state 253
    DIVIDE    shift, and go to state 254

    $default  reduce using rule 160 (term3)


State 273

  161 term3: term3 MINUS factor3 •  [PLUS, MINUS, RPAREN, COLON]
  163 factor3: factor3 • MULTIPLY primary3
  164        | factor3 • DIVIDE primary3

    MULTIPLY  shift, and go to state 253
    DIVIDE    shift, and go to state 254

    $default  reduce using rule 161 (term3)


State 274

   65 loop: FOR LPAREN assignment_int COLON term3 $@3 COLON • term4 $@4 RPAREN LBRACE instruction_section RBRACE
  142 term4: • factor4
  143      | • term4 PLUS factor4
  144      | • term4 MINUS factor4
  145 factor4: • primary4
  146        | • factor4 MULTIPLY primary4
  147        | • factor4 DIVIDE primary4
  148 primary4: • IDENTIFIER
  149         | • INT_NUMBER
  150         | • FLOAT_NUMBER
  151         | • LPAREN PLUS INT_NUMBER RPAREN
  152         | • LPAREN MINUS INT_NUMBER RPAREN
  153         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  154         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  155         | • LPAREN term4 RPAREN
  156         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  157         | • STRING_LITERAL
  158         | • CHARACTERE

    IDENTIFIER      shift, and go to state 288
    INT_NUMBER      shift, and go to state 289
    FLOAT_NUMBER    shift, and go to state 290
    CHARACTERE      shift, and go to state 291
    LPAREN          shift, and go to state 292
    STRING_LITERAL  shift, and go to state 293

    term4     go to state 294
    factor4   go to state 295
    primary4  go to state 296


State 275

  163 factor3: factor3 MULTIPLY primary3 •

    $default  reduce using rule 163 (factor3)


State 276

  164 factor3: factor3 DIVIDE primary3 •

    $default  reduce using rule 164 (factor3)


State 277

   55 condition: IF LPAREN COND RPAREN LBRACE $@1 instruction_section RBRACE • elsebloc
   57 elsebloc: • ELSE LBRACE $@2 instruction_section RBRACE
   58         | ε •  [IF, FOR, READ, WRITE, IDENTIFIER, RBRACE, SEMICOLON]

    ELSE  shift, and go to state 297

    $default  reduce using rule 58 (elsebloc)

    elsebloc  go to state 298


State 278

  126 primary1: IDENTIFIER LBRACKET INT_NUMBER RBRACKET •

    $default  reduce using rule 126 (primary1)


State 279

  121 primary1: LPAREN PLUS INT_NUMBER RPAREN •

    $default  reduce using rule 121 (primary1)


State 280

  123 primary1: LPAREN PLUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 123 (primary1)


State 281

  122 primary1: LPAREN MINUS INT_NUMBER RPAREN •

    $default  reduce using rule 122 (primary1)


State 282

  124 primary1: LPAREN MINUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 124 (primary1)


State 283

  173 primary3: IDENTIFIER LBRACKET INT_NUMBER RBRACKET •

    $default  reduce using rule 173 (primary3)


State 284

  168 primary3: LPAREN PLUS INT_NUMBER RPAREN •

    $default  reduce using rule 168 (primary3)


State 285

  170 primary3: LPAREN PLUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 170 (primary3)


State 286

  169 primary3: LPAREN MINUS INT_NUMBER RPAREN •

    $default  reduce using rule 169 (primary3)


State 287

  171 primary3: LPAREN MINUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 171 (primary3)


State 288

  148 primary4: IDENTIFIER •  [PLUS, MINUS, MULTIPLY, DIVIDE, RPAREN]
  156         | IDENTIFIER • LBRACKET INT_NUMBER RBRACKET

    LBRACKET  shift, and go to state 299

    $default  reduce using rule 148 (primary4)


State 289

  149 primary4: INT_NUMBER •

    $default  reduce using rule 149 (primary4)


State 290

  150 primary4: FLOAT_NUMBER •

    $default  reduce using rule 150 (primary4)


State 291

  158 primary4: CHARACTERE •

    $default  reduce using rule 158 (primary4)


State 292

  142 term4: • factor4
  143      | • term4 PLUS factor4
  144      | • term4 MINUS factor4
  145 factor4: • primary4
  146        | • factor4 MULTIPLY primary4
  147        | • factor4 DIVIDE primary4
  148 primary4: • IDENTIFIER
  149         | • INT_NUMBER
  150         | • FLOAT_NUMBER
  151         | • LPAREN PLUS INT_NUMBER RPAREN
  151         | LPAREN • PLUS INT_NUMBER RPAREN
  152         | • LPAREN MINUS INT_NUMBER RPAREN
  152         | LPAREN • MINUS INT_NUMBER RPAREN
  153         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  153         | LPAREN • PLUS FLOAT_NUMBER RPAREN
  154         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  154         | LPAREN • MINUS FLOAT_NUMBER RPAREN
  155         | • LPAREN term4 RPAREN
  155         | LPAREN • term4 RPAREN
  156         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  157         | • STRING_LITERAL
  158         | • CHARACTERE

    IDENTIFIER      shift, and go to state 288
    INT_NUMBER      shift, and go to state 289
    FLOAT_NUMBER    shift, and go to state 290
    CHARACTERE      shift, and go to state 291
    PLUS            shift, and go to state 300
    MINUS           shift, and go to state 301
    LPAREN          shift, and go to state 292
    STRING_LITERAL  shift, and go to state 293

    term4     go to state 302
    factor4   go to state 295
    primary4  go to state 296


State 293

  157 primary4: STRING_LITERAL •

    $default  reduce using rule 157 (primary4)


State 294

   64 $@4: ε •  [RPAREN]
   65 loop: FOR LPAREN assignment_int COLON term3 $@3 COLON term4 • $@4 RPAREN LBRACE instruction_section RBRACE
  143 term4: term4 • PLUS factor4
  144      | term4 • MINUS factor4

    PLUS   shift, and go to state 303
    MINUS  shift, and go to state 304

    $default  reduce using rule 64 ($@4)

    $@4  go to state 305


State 295

  142 term4: factor4 •  [PLUS, MINUS, RPAREN]
  146 factor4: factor4 • MULTIPLY primary4
  147        | factor4 • DIVIDE primary4

    MULTIPLY  shift, and go to state 306
    DIVIDE    shift, and go to state 307

    $default  reduce using rule 142 (term4)


State 296

  145 factor4: primary4 •

    $default  reduce using rule 145 (factor4)


State 297

   57 elsebloc: ELSE • LBRACE $@2 instruction_section RBRACE

    LBRACE  shift, and go to state 308


State 298

   55 condition: IF LPAREN COND RPAREN LBRACE $@1 instruction_section RBRACE elsebloc •

    $default  reduce using rule 55 (condition)


State 299

  156 primary4: IDENTIFIER LBRACKET • INT_NUMBER RBRACKET

    INT_NUMBER  shift, and go to state 309


State 300

  151 primary4: LPAREN PLUS • INT_NUMBER RPAREN
  153         | LPAREN PLUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 310
    FLOAT_NUMBER  shift, and go to state 311


State 301

  152 primary4: LPAREN MINUS • INT_NUMBER RPAREN
  154         | LPAREN MINUS • FLOAT_NUMBER RPAREN

    INT_NUMBER    shift, and go to state 312
    FLOAT_NUMBER  shift, and go to state 313


State 302

  143 term4: term4 • PLUS factor4
  144      | term4 • MINUS factor4
  155 primary4: LPAREN term4 • RPAREN

    PLUS    shift, and go to state 303
    MINUS   shift, and go to state 304
    RPAREN  shift, and go to state 314


State 303

  143 term4: term4 PLUS • factor4
  145 factor4: • primary4
  146        | • factor4 MULTIPLY primary4
  147        | • factor4 DIVIDE primary4
  148 primary4: • IDENTIFIER
  149         | • INT_NUMBER
  150         | • FLOAT_NUMBER
  151         | • LPAREN PLUS INT_NUMBER RPAREN
  152         | • LPAREN MINUS INT_NUMBER RPAREN
  153         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  154         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  155         | • LPAREN term4 RPAREN
  156         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  157         | • STRING_LITERAL
  158         | • CHARACTERE

    IDENTIFIER      shift, and go to state 288
    INT_NUMBER      shift, and go to state 289
    FLOAT_NUMBER    shift, and go to state 290
    CHARACTERE      shift, and go to state 291
    LPAREN          shift, and go to state 292
    STRING_LITERAL  shift, and go to state 293

    factor4   go to state 315
    primary4  go to state 296


State 304

  144 term4: term4 MINUS • factor4
  145 factor4: • primary4
  146        | • factor4 MULTIPLY primary4
  147        | • factor4 DIVIDE primary4
  148 primary4: • IDENTIFIER
  149         | • INT_NUMBER
  150         | • FLOAT_NUMBER
  151         | • LPAREN PLUS INT_NUMBER RPAREN
  152         | • LPAREN MINUS INT_NUMBER RPAREN
  153         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  154         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  155         | • LPAREN term4 RPAREN
  156         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  157         | • STRING_LITERAL
  158         | • CHARACTERE

    IDENTIFIER      shift, and go to state 288
    INT_NUMBER      shift, and go to state 289
    FLOAT_NUMBER    shift, and go to state 290
    CHARACTERE      shift, and go to state 291
    LPAREN          shift, and go to state 292
    STRING_LITERAL  shift, and go to state 293

    factor4   go to state 316
    primary4  go to state 296


State 305

   65 loop: FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 • RPAREN LBRACE instruction_section RBRACE

    RPAREN  shift, and go to state 317


State 306

  146 factor4: factor4 MULTIPLY • primary4
  148 primary4: • IDENTIFIER
  149         | • INT_NUMBER
  150         | • FLOAT_NUMBER
  151         | • LPAREN PLUS INT_NUMBER RPAREN
  152         | • LPAREN MINUS INT_NUMBER RPAREN
  153         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  154         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  155         | • LPAREN term4 RPAREN
  156         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  157         | • STRING_LITERAL
  158         | • CHARACTERE

    IDENTIFIER      shift, and go to state 288
    INT_NUMBER      shift, and go to state 289
    FLOAT_NUMBER    shift, and go to state 290
    CHARACTERE      shift, and go to state 291
    LPAREN          shift, and go to state 292
    STRING_LITERAL  shift, and go to state 293

    primary4  go to state 318


State 307

  147 factor4: factor4 DIVIDE • primary4
  148 primary4: • IDENTIFIER
  149         | • INT_NUMBER
  150         | • FLOAT_NUMBER
  151         | • LPAREN PLUS INT_NUMBER RPAREN
  152         | • LPAREN MINUS INT_NUMBER RPAREN
  153         | • LPAREN PLUS FLOAT_NUMBER RPAREN
  154         | • LPAREN MINUS FLOAT_NUMBER RPAREN
  155         | • LPAREN term4 RPAREN
  156         | • IDENTIFIER LBRACKET INT_NUMBER RBRACKET
  157         | • STRING_LITERAL
  158         | • CHARACTERE

    IDENTIFIER      shift, and go to state 288
    INT_NUMBER      shift, and go to state 289
    FLOAT_NUMBER    shift, and go to state 290
    CHARACTERE      shift, and go to state 291
    LPAREN          shift, and go to state 292
    STRING_LITERAL  shift, and go to state 293

    primary4  go to state 319


State 308

   56 $@2: ε •
   57 elsebloc: ELSE LBRACE • $@2 instruction_section RBRACE

    $default  reduce using rule 56 ($@2)

    $@2  go to state 320


State 309

  156 primary4: IDENTIFIER LBRACKET INT_NUMBER • RBRACKET

    RBRACKET  shift, and go to state 321


State 310

  151 primary4: LPAREN PLUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 322


State 311

  153 primary4: LPAREN PLUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 323


State 312

  152 primary4: LPAREN MINUS INT_NUMBER • RPAREN

    RPAREN  shift, and go to state 324


State 313

  154 primary4: LPAREN MINUS FLOAT_NUMBER • RPAREN

    RPAREN  shift, and go to state 325


State 314

  155 primary4: LPAREN term4 RPAREN •

    $default  reduce using rule 155 (primary4)


State 315

  143 term4: term4 PLUS factor4 •  [PLUS, MINUS, RPAREN]
  146 factor4: factor4 • MULTIPLY primary4
  147        | factor4 • DIVIDE primary4

    MULTIPLY  shift, and go to state 306
    DIVIDE    shift, and go to state 307

    $default  reduce using rule 143 (term4)


State 316

  144 term4: term4 MINUS factor4 •  [PLUS, MINUS, RPAREN]
  146 factor4: factor4 • MULTIPLY primary4
  147        | factor4 • DIVIDE primary4

    MULTIPLY  shift, and go to state 306
    DIVIDE    shift, and go to state 307

    $default  reduce using rule 144 (term4)


State 317

   65 loop: FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN • LBRACE instruction_section RBRACE

    LBRACE  shift, and go to state 326


State 318

  146 factor4: factor4 MULTIPLY primary4 •

    $default  reduce using rule 146 (factor4)


State 319

  147 factor4: factor4 DIVIDE primary4 •

    $default  reduce using rule 147 (factor4)


State 320

   11 instruction_section: • statement
   12                    | • statement instruction_section
   20 statement: • assignment SEMICOLON
   21          | • condition SEMICOLON
   22          | • loop SEMICOLON
   23          | • io_statement SEMICOLON
   24          | • assignment_int
   25          | • assignment
   26          | • condition
   27          | • loop
   28          | • io_statement
   29 assignment: • MDROIT EQUALS term
   30           | • TAB EQUALS term
   31           | • TAB EQUALS EXPRESSION_CHAR
   32           | • MDROIT EQUALS EXPRESSION_CHAR
   33 MDROIT: • IDENTIFIER
   34 TAB: • IDENTIFIER LBRACKET termtab RBRACKET
   55 condition: • IF LPAREN COND RPAREN LBRACE $@1 instruction_section RBRACE elsebloc
   57 elsebloc: ELSE LBRACE $@2 • instruction_section RBRACE
   59 assignment_int: • MDROIT EQUALS term
   60               | • TAB EQUALS term
   61               | • TAB EQUALS EXPRESSION_CHAR
   62               | • MDROIT EQUALS EXPRESSION_CHAR
   65 loop: • FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE
   66 io_statement: • READ LPAREN IDENTIFIER RPAREN
   67             | • WRITE LPAREN io_expr_list RPAREN

    IF          shift, and go to state 98
    FOR         shift, and go to state 99
    READ        shift, and go to state 100
    WRITE       shift, and go to state 101
    IDENTIFIER  shift, and go to state 102

    instruction_section  go to state 327
    statement            go to state 104
    assignment           go to state 105
    MDROIT               go to state 106
    TAB                  go to state 107
    condition            go to state 108
    assignment_int       go to state 109
    loop                 go to state 110
    io_statement         go to state 111


State 321

  156 primary4: IDENTIFIER LBRACKET INT_NUMBER RBRACKET •

    $default  reduce using rule 156 (primary4)


State 322

  151 primary4: LPAREN PLUS INT_NUMBER RPAREN •

    $default  reduce using rule 151 (primary4)


State 323

  153 primary4: LPAREN PLUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 153 (primary4)


State 324

  152 primary4: LPAREN MINUS INT_NUMBER RPAREN •

    $default  reduce using rule 152 (primary4)


State 325

  154 primary4: LPAREN MINUS FLOAT_NUMBER RPAREN •

    $default  reduce using rule 154 (primary4)


State 326

   11 instruction_section: • statement
   12                    | • statement instruction_section
   20 statement: • assignment SEMICOLON
   21          | • condition SEMICOLON
   22          | • loop SEMICOLON
   23          | • io_statement SEMICOLON
   24          | • assignment_int
   25          | • assignment
   26          | • condition
   27          | • loop
   28          | • io_statement
   29 assignment: • MDROIT EQUALS term
   30           | • TAB EQUALS term
   31           | • TAB EQUALS EXPRESSION_CHAR
   32           | • MDROIT EQUALS EXPRESSION_CHAR
   33 MDROIT: • IDENTIFIER
   34 TAB: • IDENTIFIER LBRACKET termtab RBRACKET
   55 condition: • IF LPAREN COND RPAREN LBRACE $@1 instruction_section RBRACE elsebloc
   59 assignment_int: • MDROIT EQUALS term
   60               | • TAB EQUALS term
   61               | • TAB EQUALS EXPRESSION_CHAR
   62               | • MDROIT EQUALS EXPRESSION_CHAR
   65 loop: • FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE
   65     | FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE • instruction_section RBRACE
   66 io_statement: • READ LPAREN IDENTIFIER RPAREN
   67             | • WRITE LPAREN io_expr_list RPAREN

    IF          shift, and go to state 98
    FOR         shift, and go to state 99
    READ        shift, and go to state 100
    WRITE       shift, and go to state 101
    IDENTIFIER  shift, and go to state 102

    instruction_section  go to state 328
    statement            go to state 104
    assignment           go to state 105
    MDROIT               go to state 106
    TAB                  go to state 107
    condition            go to state 108
    assignment_int       go to state 109
    loop                 go to state 110
    io_statement         go to state 111


State 327

   57 elsebloc: ELSE LBRACE $@2 instruction_section • RBRACE

    RBRACE  shift, and go to state 329


State 328

   65 loop: FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section • RBRACE

    RBRACE  shift, and go to state 330


State 329

   57 elsebloc: ELSE LBRACE $@2 instruction_section RBRACE •

    $default  reduce using rule 57 (elsebloc)


State 330

   65 loop: FOR LPAREN assignment_int COLON term3 $@3 COLON term4 $@4 RPAREN LBRACE instruction_section RBRACE •

    $default  reduce using rule 65 (loop)
