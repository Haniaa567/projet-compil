VAR_GLOBAL {
    INTEGER Nbr[20];
    INTEGER Resultat[10];
    CONST INTEGER X=3,Y=2,Z=4;    
}
DECLARATION {
    INTEGER I, Max_pos, Min_pos, Cpt,Tmp;
    INTEGER Som, Moy; 
}
INSTRUCTION {
    
    FOR(I=0:1:19){
        IF(I<10){
            Nbr[I]=((I*3+5)*(I+1))+(I/3)*2;
        }ELSE{
            IF(I/2 == 0){
                Nbr[I]=((i - 10) * 4 - 3) * ((i - 10) + 2);
            }ELSE{
            Nbr[i]=(i * i) - (15 * i) + 50;
            };
        };
    };
    Max_pos=0;
    Min_pos=0;
    FOR(I=1:1:20){
        Tmp=(Nbr[I]+Nbr[I+1])/2;
        IF(Tmp>Nbr[Max_pos]){
            IF(Nbr[I]/2 == 0){
                Max_pos = I;
            };
        };
        IF(Tmp < Nbr[Min_pos]){
            IF(Nbr[I]/3 == 0){
                Min_pos = I;
            };
        };
    };
    Som=0.0;
    Cpt=0;
    FOR(I=0:1:10){
        IF(Nbr[I]>Nbr[I+1]){
            Resultat[I] = (Nbr[I]*X+Nbr[I+1]*Y)/(X+Y);
            Som = Som+Resultat[I];
            Cpt = Cpt+1;
        }ELSE{
            IF(Nbr[i]<Nbr[I+1]){
                Resultat[I] = (Nbr[I]*Z+Nbr[I+1]*X)/(Z+X);
                Som = Som+Resultat[I];
                Cpt = Cpt+1;
            }ELSE{
                Resultat[I] = Nbr[I]*5;
            };
        };
    };
    IF(Cpt > 0){
        Moy = Som / Cpt;
    }ELSE{
        Moy = 0;
    };
    Tmp = ((Resultat[Max_pos/10]*X +Resultat[Min_pos/10]* Y )/Z)+1;

    WRITE("Position max: %d\n", Max_pos);
    WRITE("Position min: %d\n", Min_pos);
    WRITE("Somme: %f\n", Som);
    WRITE("Moyenne: %f\n", Moy);
    WRITE("Resultat final: %f\n", Tmp);

}